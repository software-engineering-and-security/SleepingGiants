{
    "tabby": [
        [
            "org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper#readObject",
            "-[CALL]-> org.hibernate.SharedSessionContract#getTransaction -[ALIAS]-> org.hibernate.engine.spi.SessionLazyDelegator#getTransaction",
            "-[CALL]-> java.util.function.Supplier#get -[ALIAS]-> org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard$lambda_new_1__1440#get",
            "-[CALL]-> org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard#lambda$new$1",
            "-[CALL]-> org.hibernate.mapping.Component#getType",
            "-[CALL]-> org.hibernate.mapping.Component#createCompositeUserType",
            "-[CALL]-> org.hibernate.boot.spi.ClassLoaderAccess#classForName -[ALIAS]-> org.hibernate.boot.internal.ClassLoaderAccessImpl#classForName",
            "-[CALL]-> java.lang.ClassLoader#loadClass"
        ],
        [
            "org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper#readObject",
            "-[CALL]-> org.hibernate.SharedSessionContract#getTransaction -[ALIAS]-> org.hibernate.engine.spi.SessionLazyDelegator#getTransaction",
            "-[CALL]-> java.util.function.Supplier#get -[ALIAS]-> org.hibernate.procedure.internal.ProcedureOutputsImpl$ProcedureCurrentReturnState$lambda_buildExtendedReturn_0__1968#get",
            "-[CALL]-> org.hibernate.procedure.internal.ProcedureOutputsImpl$ProcedureCurrentReturnState#lambda$buildExtendedReturn$0",
            "-[CALL]-> org.hibernate.procedure.internal.ProcedureOutputsImpl#access$000",
            "-[CALL]-> org.hibernate.result.internal.OutputsImpl#extractResults",
            "-[CALL]-> org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl#<init>",
            "-[CALL]-> org.hibernate.sql.results.jdbc.internal.ResultSetAccess#getResultSet -[ALIAS]-> org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess#getResultSet",
            "-[CALL]-> org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess#executeQuery",
            "-[CALL]-> java.sql.PreparedStatement#executeQuery"
        ],
        [
            "org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper#readObject",
            "-[CALL]-> org.hibernate.SharedSessionContract#getTransaction -[ALIAS]-> org.hibernate.engine.spi.SessionLazyDelegator#getTransaction",
            "-[CALL]-> java.util.function.Supplier#get -[ALIAS]-> org.hibernate.engine.jdbc.mutation.internal.PreparedStatementGroupStandard$lambda_createPreparedStatementDetails_1__451#get",
            "-[CALL]-> org.hibernate.engine.jdbc.mutation.internal.PreparedStatementGroupStandard#lambda$createPreparedStatementDetails$1",
            "-[CALL]-> org.hibernate.engine.jdbc.spi.MutationStatementPreparer#prepareStatement -[ALIAS]-> org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl#prepareStatement",
            "-[CALL]-> org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate#prepareStatement",
            "-[CALL]-> org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$StatementPreparationTemplate#doPrepare -[ALIAS]-> org.hibernate.engine.jdbc.internal.MutationStatementPreparerImpl$2#doPrepare",
            "-[CALL]-> java.sql.Connection#prepareStatement"
        ],
        [
            "org.hibernate.internal.AbstractSharedSessionContract#readObject -[ALIAS]-> org.hibernate.internal.SessionImpl#readObject",
            "-[CALL]-> org.hibernate.engine.internal.StatefulPersistenceContext#deserialize",
            "-[CALL]-> org.hibernate.engine.internal.EntityEntryContext#deserialize",
            "-[CALL]-> org.hibernate.engine.internal.EntityEntryContext#deserializeEntityEntry",
            "-[CALL]-> java.lang.reflect.Method#invoke"
        ],
        [
            "org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper#readObject",
            "-[CALL]-> org.hibernate.SharedSessionContract#getTransaction -[ALIAS]-> org.hibernate.engine.spi.SessionLazyDelegator#getTransaction",
            "-[CALL]-> java.util.function.Supplier#get -[ALIAS]-> org.hibernate.type.descriptor.converter.internal.JpaAttributeConverterImpl$lambda_new_0__2046#get",
            "-[CALL]-> org.hibernate.type.descriptor.converter.internal.JpaAttributeConverterImpl#lambda$new$0",
            "-[CALL]-> org.hibernate.type.descriptor.java.spi.RegistryHelper#determineMutabilityPlan",
            "-[CALL]-> java.lang.Class#isAnnotationPresent",
            "-[CALL]-> java.lang.reflect.AnnotatedElement#isAnnotationPresent",
            "-[CALL]-> java.lang.reflect.AnnotatedElement#getAnnotation -[ALIAS]-> java.lang.Package#getAnnotation",
            "-[CALL]-> java.lang.Package#getPackageInfo",
            "-[CALL]-> java.lang.ClassLoader#loadClass"
        ]
    ],
    "androChain": [
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.jdbc.SerializableBlobProxy: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.reflect.Method, java.lang.Object[]] and taint: [true, true, true, true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.sql.Blob, java.lang.Object[]] and taint: [true, true, true]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.jdbc.SerializableClobProxy: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.reflect.Method, java.lang.Object[]] and taint: [true, true, true, true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.sql.Clob, java.lang.Object[]] and taint: [true, true, true]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.reflect.Method, java.lang.Object[]] and taint: [true, true, true, true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [org.hibernate.Session, java.lang.Object[]] and taint: [true, true, true]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.engine.spi.CollectionKey: boolean equals(java.lang.Object)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<org.hibernate.type.EntityType: boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [true, true, true, true]",
            "<org.hibernate.persister.entity.AbstractEntityPersister: java.lang.Object getPropertyValue(java.lang.Object,java.lang.String)> with actual argTypes: [java.lang.Object, java.lang.String] and taint: [true, true, true]",
            "<org.hibernate.property.access.spi.GetterMethodImpl: java.lang.Object get(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [true, true, false]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.query.internal.ScrollableResultsIterator: boolean hasNext()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.internal.FetchingScrollableResultsImpl: boolean next()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.internal.FetchingScrollableResultsImpl: boolean prepareCurrentRow()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.sql.results.internal.StandardRowReader: java.lang.Object readRow(org.hibernate.sql.results.jdbc.spi.RowProcessingState)> with actual argTypes: [org.hibernate.sql.results.internal.RowProcessingStateStandardImpl] and taint: [true, true]",
            "<org.hibernate.sql.results.graph.instantiation.internal.DynamicInstantiationAssemblerConstructorImpl: java.lang.Object assemble(org.hibernate.sql.results.jdbc.spi.RowProcessingState)> with actual argTypes: [org.hibernate.sql.results.jdbc.spi.RowProcessingState] and taint: [true, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, true]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.query.internal.ScrollableResultsIterator: boolean hasNext()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.internal.FetchingScrollableResultsImpl: boolean next()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.internal.FetchingScrollableResultsImpl: boolean prepareCurrentRow()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.sql.results.internal.StandardRowReader: java.lang.Object readRow(org.hibernate.sql.results.jdbc.spi.RowProcessingState)> with actual argTypes: [org.hibernate.sql.results.internal.RowProcessingStateStandardImpl] and taint: [true, true]",
            "<org.hibernate.sql.results.internal.RowTransformerConstructorImpl: java.lang.Object transformRow(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, true]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.query.internal.ScrollableResultsIterator: boolean hasNext()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.internal.FetchingScrollableResultsImpl: boolean next()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.internal.FetchingScrollableResultsImpl: boolean prepareCurrentRow()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.sql.results.internal.StandardRowReader: java.lang.Object readRow(org.hibernate.sql.results.jdbc.spi.RowProcessingState)> with actual argTypes: [org.hibernate.sql.results.internal.RowProcessingStateStandardImpl] and taint: [true, true]",
            "<org.hibernate.sql.results.internal.RowTransformerTupleTransformerAdapter: java.lang.Object transformRow(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, true]",
            "<org.hibernate.transform.AliasToBeanConstructorResultTransformer: java.lang.Object transformTuple(java.lang.Object[],java.lang.String[])> with actual argTypes: [java.lang.Object[], java.lang.String[]] and taint: [true, true, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, true]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.query.internal.ScrollableResultsIterator: boolean hasNext()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.internal.FetchingScrollableResultsImpl: boolean next()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.internal.FetchingScrollableResultsImpl: boolean prepareCurrentRow()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.sql.results.internal.StandardRowReader: java.lang.Object readRow(org.hibernate.sql.results.jdbc.spi.RowProcessingState)> with actual argTypes: [org.hibernate.sql.results.internal.RowProcessingStateStandardImpl] and taint: [true, true]",
            "<org.hibernate.sql.results.internal.RowTransformerTupleTransformerAdapter: java.lang.Object transformRow(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, true]",
            "<org.hibernate.jpa.spi.NativeQueryConstructorTransformer: java.lang.Object transformTuple(java.lang.Object[],java.lang.String[])> with actual argTypes: [java.lang.Object[], java.lang.String[]] and taint: [true, true, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, true]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.engine.spi.CollectionKey: boolean equals(java.lang.Object)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<org.hibernate.type.EntityType: boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [true, true, true, true]",
            "<org.hibernate.persister.entity.AbstractEntityPersister: java.lang.Object getIdentifier(java.lang.Object,org.hibernate.engine.spi.SharedSessionContractImplementor)> with actual argTypes: [java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor] and taint: [true, true, false]",
            "<org.hibernate.metamodel.mapping.internal.NonAggregatedIdentifierMappingImpl: java.lang.Object getIdentifier(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.hibernate.metamodel.mapping.internal.NonAggregatedIdentifierMappingImpl: java.lang.Object getIdentifier(java.lang.Object,org.hibernate.event.spi.MergeContext)> with actual argTypes: [java.lang.Object, null] and taint: [true, true, false]",
            "<org.hibernate.metamodel.internal.EmbeddableInstantiatorPojoIndirecting: java.lang.Object instantiate(org.hibernate.metamodel.spi.ValueAccess,org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [org.hibernate.metamodel.spi.ValueAccess, org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [true, true, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, true]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.engine.spi.CollectionKey: boolean equals(java.lang.Object)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<org.hibernate.type.EntityType: boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [true, true, true, true]",
            "<org.hibernate.persister.entity.AbstractEntityPersister: java.lang.Object getIdentifier(java.lang.Object,org.hibernate.engine.spi.SharedSessionContractImplementor)> with actual argTypes: [java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor] and taint: [true, true, false]",
            "<org.hibernate.metamodel.mapping.internal.NonAggregatedIdentifierMappingImpl: java.lang.Object getIdentifier(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.hibernate.metamodel.mapping.internal.NonAggregatedIdentifierMappingImpl: java.lang.Object getIdentifier(java.lang.Object,org.hibernate.event.spi.MergeContext)> with actual argTypes: [java.lang.Object, null] and taint: [true, true, false]",
            "<org.hibernate.metamodel.internal.EmbeddableInstantiatorPojoIndirecting$EmbeddableInstantiatorPojoIndirectingWithGap: java.lang.Object instantiate(org.hibernate.metamodel.spi.ValueAccess,org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [org.hibernate.metamodel.spi.ValueAccess, org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [true, true, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, true]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.engine.spi.CollectionKey: boolean equals(java.lang.Object)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<org.hibernate.type.EntityType: boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [true, true, true, true]",
            "<org.hibernate.persister.entity.AbstractEntityPersister: java.lang.Object getIdentifier(java.lang.Object,org.hibernate.engine.spi.SharedSessionContractImplementor)> with actual argTypes: [java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor] and taint: [true, true, false]",
            "<org.hibernate.metamodel.mapping.internal.NonAggregatedIdentifierMappingImpl: java.lang.Object getIdentifier(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.hibernate.metamodel.mapping.internal.NonAggregatedIdentifierMappingImpl: java.lang.Object getIdentifier(java.lang.Object,org.hibernate.event.spi.MergeContext)> with actual argTypes: [java.lang.Object, null] and taint: [true, true, false]",
            "<org.hibernate.metamodel.internal.EmbeddableInstantiatorRecordStandard: java.lang.Object instantiate(org.hibernate.metamodel.spi.ValueAccess,org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [org.hibernate.metamodel.spi.ValueAccess, org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [true, true, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, true]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.engine.spi.CollectionKey: boolean equals(java.lang.Object)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<org.hibernate.type.EntityType: boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [true, true, true, true]",
            "<org.hibernate.persister.entity.AbstractEntityPersister: java.lang.Object getIdentifier(java.lang.Object,org.hibernate.engine.spi.SharedSessionContractImplementor)> with actual argTypes: [java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor] and taint: [true, true, false]",
            "<org.hibernate.metamodel.mapping.internal.NonAggregatedIdentifierMappingImpl: java.lang.Object getIdentifier(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.hibernate.metamodel.mapping.internal.NonAggregatedIdentifierMappingImpl: java.lang.Object getIdentifier(java.lang.Object,org.hibernate.event.spi.MergeContext)> with actual argTypes: [java.lang.Object, null] and taint: [true, true, false]",
            "<org.hibernate.metamodel.internal.EmbeddableInstantiatorRecordIndirecting: java.lang.Object instantiate(org.hibernate.metamodel.spi.ValueAccess,org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [org.hibernate.metamodel.spi.ValueAccess, org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [true, true, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, true]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.engine.spi.CollectionKey: boolean equals(java.lang.Object)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<org.hibernate.type.EntityType: boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [true, true, true, true]",
            "<org.hibernate.persister.entity.AbstractEntityPersister: java.lang.Object getIdentifier(java.lang.Object,org.hibernate.engine.spi.SharedSessionContractImplementor)> with actual argTypes: [java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor] and taint: [true, true, false]",
            "<org.hibernate.metamodel.mapping.internal.NonAggregatedIdentifierMappingImpl: java.lang.Object getIdentifier(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.hibernate.metamodel.mapping.internal.NonAggregatedIdentifierMappingImpl: java.lang.Object getIdentifier(java.lang.Object,org.hibernate.event.spi.MergeContext)> with actual argTypes: [java.lang.Object, null] and taint: [true, true, false]",
            "<org.hibernate.metamodel.internal.EmbeddableInstantiatorRecordIndirecting$EmbeddableInstantiatorRecordIndirectingWithGap: java.lang.Object instantiate(org.hibernate.metamodel.spi.ValueAccess,org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [org.hibernate.metamodel.spi.ValueAccess, org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [true, true, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, true]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.engine.spi.CollectionKey: boolean equals(java.lang.Object)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<org.hibernate.type.EntityType: boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [true, true, true, true]",
            "<org.hibernate.persister.entity.AbstractEntityPersister: java.lang.Object getIdentifier(java.lang.Object,org.hibernate.engine.spi.SharedSessionContractImplementor)> with actual argTypes: [java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor] and taint: [true, true, false]",
            "<org.hibernate.metamodel.mapping.internal.NonAggregatedIdentifierMappingImpl: java.lang.Object getIdentifier(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.hibernate.metamodel.mapping.internal.NonAggregatedIdentifierMappingImpl: java.lang.Object getIdentifier(java.lang.Object,org.hibernate.event.spi.MergeContext)> with actual argTypes: [java.lang.Object, null] and taint: [true, true, false]",
            "<org.hibernate.metamodel.internal.EmbeddableInstantiatorPojoStandard: java.lang.Object instantiate(org.hibernate.metamodel.spi.ValueAccess,org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [org.hibernate.metamodel.spi.ValueAccess, org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [true, true, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, false]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.internal.AbstractScrollableResults: void close()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.sql.results.internal.StandardRowReader: void finishUp(org.hibernate.sql.results.jdbc.spi.RowProcessingState)> with actual argTypes: [org.hibernate.sql.results.internal.RowProcessingStateStandardImpl] and taint: [true, true]",
            "<org.hibernate.sql.results.graph.entity.internal.BatchEntityInsideEmbeddableSelectFetchInitializer: void endLoading(org.hibernate.sql.results.graph.InitializerData)> with actual argTypes: [org.hibernate.sql.results.graph.InitializerData] and taint: [true, true]",
            "<org.hibernate.sql.results.graph.entity.internal.BatchEntityInsideEmbeddableSelectFetchInitializer: void endLoading(org.hibernate.sql.results.graph.entity.internal.BatchEntityInsideEmbeddableSelectFetchInitializer$BatchEntityInsideEmbeddableSelectFetchInitializerData)> with actual argTypes: [org.hibernate.sql.results.graph.entity.internal.BatchEntityInsideEmbeddableSelectFetchInitializer$BatchEntityInsideEmbeddableSelectFetchInitializerData] and taint: [true, true]",
            "<org.hibernate.property.access.spi.SetterMethodImpl: void set(java.lang.Object,java.lang.Object)> with actual argTypes: [java.lang.Object, java.lang.Object] and taint: [true, true, true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [true, true, true]"
        ],
        [
            "<org.hibernate.proxy.pojo.bytebuddy.SerializableProxy: java.lang.Object readResolve()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.proxy.pojo.bytebuddy.SerializableProxy: org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl retrieveByteBuddyBytecodeProvider(org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [false, true]",
            "<org.hibernate.service.internal.AbstractServiceRegistryImpl: org.hibernate.service.Service getService(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [true, false]",
            "<org.hibernate.service.internal.AbstractServiceRegistryImpl: org.hibernate.service.Service initializeService(org.hibernate.service.spi.ServiceBinding)> with actual argTypes: [org.hibernate.service.spi.ServiceBinding] and taint: [true, true]",
            "<org.hibernate.service.internal.AbstractServiceRegistryImpl: void injectDependencies(org.hibernate.service.spi.ServiceBinding)> with actual argTypes: [org.hibernate.service.spi.ServiceBinding] and taint: [true, true]",
            "<org.hibernate.service.internal.AbstractServiceRegistryImpl: void applyInjections(org.hibernate.service.Service)> with actual argTypes: [org.hibernate.service.Service] and taint: [true, true]",
            "<org.hibernate.service.internal.AbstractServiceRegistryImpl: void processInjection(org.hibernate.service.Service,java.lang.reflect.Method,org.hibernate.service.spi.InjectService)> with actual argTypes: [org.hibernate.service.Service, java.lang.reflect.Method, org.hibernate.service.spi.InjectService] and taint: [true, true, true, true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [org.hibernate.service.Service, java.lang.Object[]] and taint: [true, true, true]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.engine.spi.CollectionKey: boolean equals(java.lang.Object)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<org.hibernate.type.EntityType: boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [true, true, true, true]",
            "<org.hibernate.persister.entity.AbstractEntityPersister: java.lang.Object getIdentifier(java.lang.Object,org.hibernate.engine.spi.SharedSessionContractImplementor)> with actual argTypes: [java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor] and taint: [true, true, false]",
            "<org.hibernate.metamodel.mapping.internal.NonAggregatedIdentifierMappingImpl: java.lang.Object getIdentifier(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.hibernate.metamodel.mapping.internal.NonAggregatedIdentifierMappingImpl: java.lang.Object getIdentifier(java.lang.Object,org.hibernate.event.spi.MergeContext)> with actual argTypes: [java.lang.Object, null] and taint: [true, true, false]",
            "<org.hibernate.metamodel.mapping.internal.VirtualIdRepresentationStrategy$InstantiatorAdapter: java.lang.Object instantiate(org.hibernate.metamodel.spi.ValueAccess,org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [org.hibernate.metamodel.spi.ValueAccess, org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [true, true, true]",
            "<org.hibernate.metamodel.internal.EntityInstantiatorPojoStandard: java.lang.Object instantiate(org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [true, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, false]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.engine.spi.CollectionKey: boolean equals(java.lang.Object)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<org.hibernate.type.EntityType: boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [true, true, true, true]",
            "<org.hibernate.persister.entity.AbstractEntityPersister: java.lang.Object getIdentifier(java.lang.Object,org.hibernate.engine.spi.SharedSessionContractImplementor)> with actual argTypes: [java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor] and taint: [true, true, false]",
            "<org.hibernate.metamodel.mapping.internal.NonAggregatedIdentifierMappingImpl: java.lang.Object getIdentifier(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.hibernate.metamodel.mapping.internal.NonAggregatedIdentifierMappingImpl: java.lang.Object getIdentifier(java.lang.Object,org.hibernate.event.spi.MergeContext)> with actual argTypes: [java.lang.Object, null] and taint: [true, true, false]",
            "<org.hibernate.metamodel.internal.EmbeddableInstantiatorProxied: java.lang.Object instantiate(org.hibernate.metamodel.spi.ValueAccess,org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [org.hibernate.metamodel.spi.ValueAccess, org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [true, true, true]",
            "<org.hibernate.bytecode.internal.bytebuddy.BasicProxyFactoryImpl: java.lang.Object getProxy()> with actual argTypes: [] and taint: [true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, false]"
        ],
        [
            "<org.hibernate.internal.AbstractSharedSessionContract: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl: org.hibernate.resource.transaction.spi.TransactionCoordinator buildTransactionCoordinator(org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner,org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder$Options)> with actual argTypes: [org.hibernate.engine.jdbc.spi.JdbcCoordinator, org.hibernate.internal.AbstractSharedSessionContract] and taint: [true, true, true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: void <init>(org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder,org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner,boolean,org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform)> with actual argTypes: [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl, org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner, boolean, org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] and taint: [false, true, true, true, true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: void pulse()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform: boolean canRegisterSynchronization()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform: int getCurrentStatus()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform: jakarta.transaction.TransactionManager retrieveTransactionManager()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.JOnASJtaPlatform: jakarta.transaction.TransactionManager locateTransactionManager()> with actual argTypes: [] and taint: [true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [null, java.lang.Object[]] and taint: [true, false, false]"
        ],
        [
            "<org.hibernate.internal.AbstractSharedSessionContract: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl: org.hibernate.resource.transaction.spi.TransactionCoordinator buildTransactionCoordinator(org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner,org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder$Options)> with actual argTypes: [org.hibernate.engine.jdbc.spi.JdbcCoordinator, org.hibernate.internal.AbstractSharedSessionContract] and taint: [true, true, true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: void <init>(org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder,org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner,boolean,org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform)> with actual argTypes: [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl, org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner, boolean, org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] and taint: [false, true, true, true, true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: void pulse()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform: boolean canRegisterSynchronization()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform: int getCurrentStatus()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform: jakarta.transaction.TransactionManager retrieveTransactionManager()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.BitronixJtaPlatform: jakarta.transaction.TransactionManager locateTransactionManager()> with actual argTypes: [] and taint: [true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [null, java.lang.Object[]] and taint: [true, false, false]"
        ],
        [
            "<org.hibernate.internal.AbstractSharedSessionContract: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl: org.hibernate.resource.transaction.spi.TransactionCoordinator buildTransactionCoordinator(org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner,org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder$Options)> with actual argTypes: [org.hibernate.engine.jdbc.spi.JdbcCoordinator, org.hibernate.internal.AbstractSharedSessionContract] and taint: [true, true, true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: void <init>(org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder,org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner,boolean,org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform)> with actual argTypes: [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl, org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner, boolean, org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] and taint: [false, true, true, true, true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: void pulse()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform: boolean canRegisterSynchronization()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform: int getCurrentStatus()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform: jakarta.transaction.TransactionManager retrieveTransactionManager()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.JOTMJtaPlatform: jakarta.transaction.TransactionManager locateTransactionManager()> with actual argTypes: [] and taint: [true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [null, java.lang.Object[]] and taint: [true, false, false]"
        ],
        [
            "<org.hibernate.internal.AbstractSharedSessionContract: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl: org.hibernate.resource.transaction.spi.TransactionCoordinator buildTransactionCoordinator(org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner,org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder$Options)> with actual argTypes: [org.hibernate.engine.jdbc.spi.JdbcCoordinator, org.hibernate.internal.AbstractSharedSessionContract] and taint: [true, true, true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: void <init>(org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder,org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner,boolean,org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform)> with actual argTypes: [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl, org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner, boolean, org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] and taint: [false, true, true, true, true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: void pulse()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform: boolean canRegisterSynchronization()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform: int getCurrentStatus()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform: jakarta.transaction.TransactionManager retrieveTransactionManager()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.WildFlyStandAloneJtaPlatform: jakarta.transaction.TransactionManager locateTransactionManager()> with actual argTypes: [] and taint: [true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [null, java.lang.Object[]] and taint: [true, false, false]"
        ],
        [
            "<org.hibernate.internal.AbstractSharedSessionContract: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl: org.hibernate.resource.transaction.spi.TransactionCoordinator buildTransactionCoordinator(org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner,org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder$Options)> with actual argTypes: [org.hibernate.engine.jdbc.spi.JdbcCoordinator, org.hibernate.internal.AbstractSharedSessionContract] and taint: [true, true, true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: void <init>(org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder,org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner,boolean,org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform)> with actual argTypes: [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl, org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner, boolean, org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] and taint: [false, true, true, true, true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: void pulse()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform: boolean canRegisterSynchronization()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform: int getCurrentStatus()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform: jakarta.transaction.TransactionManager retrieveTransactionManager()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.JBossStandAloneJtaPlatform: jakarta.transaction.TransactionManager locateTransactionManager()> with actual argTypes: [] and taint: [true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [null, java.lang.Object[]] and taint: [true, false, false]"
        ],
        [
            "<org.hibernate.internal.AbstractSharedSessionContract: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl: org.hibernate.resource.transaction.spi.TransactionCoordinator buildTransactionCoordinator(org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner,org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder$Options)> with actual argTypes: [org.hibernate.engine.jdbc.spi.JdbcCoordinator, org.hibernate.internal.AbstractSharedSessionContract] and taint: [true, true, true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: void <init>(org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder,org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner,boolean,org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform)> with actual argTypes: [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl, org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner, boolean, org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] and taint: [false, true, true, true, true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: void pulse()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform: boolean canRegisterSynchronization()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform: int getCurrentStatus()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform: jakarta.transaction.TransactionManager retrieveTransactionManager()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform: jakarta.transaction.TransactionManager locateTransactionManager()> with actual argTypes: [] and taint: [true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [null, java.lang.Object[]] and taint: [true, false, false]"
        ],
        [
            "<org.hibernate.internal.AbstractSharedSessionContract: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl: org.hibernate.resource.transaction.spi.TransactionCoordinator buildTransactionCoordinator(org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner,org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder$Options)> with actual argTypes: [org.hibernate.engine.jdbc.spi.JdbcCoordinator, org.hibernate.internal.AbstractSharedSessionContract] and taint: [true, true, true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: void <init>(org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder,org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner,boolean,org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform)> with actual argTypes: [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl, org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner, boolean, org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] and taint: [false, true, true, true, true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: void pulse()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform: boolean canRegisterSynchronization()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform: int getCurrentStatus()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform: jakarta.transaction.TransactionManager retrieveTransactionManager()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform: jakarta.transaction.TransactionManager locateTransactionManager()> with actual argTypes: [] and taint: [true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [null, java.lang.Object[]] and taint: [true, false, false]"
        ],
        [
            "<org.hibernate.proxy.pojo.bytebuddy.SerializableProxy: java.lang.Object readResolve()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.proxy.pojo.bytebuddy.SerializableProxy: org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl retrieveByteBuddyBytecodeProvider(org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [false, true]",
            "<org.hibernate.service.internal.AbstractServiceRegistryImpl: org.hibernate.service.Service getService(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [true, false]",
            "<org.hibernate.service.internal.AbstractServiceRegistryImpl: org.hibernate.service.Service initializeService(org.hibernate.service.spi.ServiceBinding)> with actual argTypes: [org.hibernate.service.spi.ServiceBinding] and taint: [true, true]",
            "<org.hibernate.service.internal.AbstractServiceRegistryImpl: org.hibernate.service.Service createService(org.hibernate.service.spi.ServiceBinding)> with actual argTypes: [org.hibernate.service.spi.ServiceBinding] and taint: [true, true]",
            "<org.hibernate.boot.registry.internal.StandardServiceRegistryImpl: org.hibernate.service.Service initiateService(org.hibernate.service.spi.ServiceInitiator)> with actual argTypes: [org.hibernate.service.spi.ServiceInitiator] and taint: [true, true]",
            "<org.hibernate.engine.jdbc.batch.internal.BatchBuilderInitiator: org.hibernate.service.Service initiateService(java.util.Map,org.hibernate.service.spi.ServiceRegistryImplementor)> with actual argTypes: [java.util.Map, org.hibernate.boot.registry.internal.StandardServiceRegistryImpl] and taint: [true, true, true]",
            "<org.hibernate.engine.jdbc.batch.internal.BatchBuilderInitiator: org.hibernate.engine.jdbc.batch.spi.BatchBuilder initiateService(java.util.Map,org.hibernate.service.spi.ServiceRegistryImplementor)> with actual argTypes: [java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor] and taint: [true, true, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, false]"
        ],
        [
            "<org.hibernate.proxy.pojo.bytebuddy.SerializableProxy: java.lang.Object readResolve()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.proxy.pojo.bytebuddy.SerializableProxy: org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl retrieveByteBuddyBytecodeProvider(org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [false, true]",
            "<org.hibernate.service.internal.AbstractServiceRegistryImpl: org.hibernate.service.Service getService(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [true, false]",
            "<org.hibernate.service.internal.AbstractServiceRegistryImpl: org.hibernate.service.Service initializeService(org.hibernate.service.spi.ServiceBinding)> with actual argTypes: [org.hibernate.service.spi.ServiceBinding] and taint: [true, true]",
            "<org.hibernate.service.internal.AbstractServiceRegistryImpl: org.hibernate.service.Service createService(org.hibernate.service.spi.ServiceBinding)> with actual argTypes: [org.hibernate.service.spi.ServiceBinding] and taint: [true, true]",
            "<org.hibernate.boot.registry.internal.StandardServiceRegistryImpl: org.hibernate.service.Service initiateService(org.hibernate.service.spi.ServiceInitiator)> with actual argTypes: [org.hibernate.service.spi.ServiceInitiator] and taint: [true, true]",
            "<org.hibernate.engine.jdbc.mutation.internal.MutationExecutorServiceInitiator: org.hibernate.service.Service initiateService(java.util.Map,org.hibernate.service.spi.ServiceRegistryImplementor)> with actual argTypes: [java.util.Map, org.hibernate.boot.registry.internal.StandardServiceRegistryImpl] and taint: [true, true, true]",
            "<org.hibernate.engine.jdbc.mutation.internal.MutationExecutorServiceInitiator: org.hibernate.engine.jdbc.mutation.spi.MutationExecutorService initiateService(java.util.Map,org.hibernate.service.spi.ServiceRegistryImplementor)> with actual argTypes: [java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor] and taint: [true, true, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, false]"
        ],
        [
            "<org.hibernate.internal.AbstractSharedSessionContract: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl: org.hibernate.resource.transaction.spi.TransactionCoordinator buildTransactionCoordinator(org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner,org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder$Options)> with actual argTypes: [org.hibernate.engine.jdbc.spi.JdbcCoordinator, org.hibernate.internal.AbstractSharedSessionContract] and taint: [true, true, true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: void <init>(org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder,org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner,boolean,org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform)> with actual argTypes: [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl, org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner, boolean, org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] and taint: [false, true, true, true, true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: void pulse()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform: boolean canRegisterSynchronization()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform: int getCurrentStatus()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform: jakarta.transaction.TransactionManager retrieveTransactionManager()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.JBossStandAloneJtaPlatform: jakarta.transaction.TransactionManager locateTransactionManager()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.WildFlyStandAloneJtaPlatform: jakarta.transaction.TransactionManager locateTransactionManager()> with actual argTypes: [] and taint: [false]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [null, java.lang.Object[]] and taint: [false, false, false]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.reflect.Method, java.lang.Object[]] and taint: [true, true, true, true]",
            "<org.hibernate.engine.transaction.internal.TransactionImpl: org.hibernate.resource.transaction.spi.TransactionStatus getStatus()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: org.hibernate.resource.transaction.spi.TransactionCoordinator$TransactionDriver getTransactionDriverControl()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl$TransactionDriverControlImpl makePhysicalTransactionDelegate()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionAdapter makeUserTransactionAdapter()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform: jakarta.transaction.UserTransaction retrieveUserTransaction()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.WildFlyStandAloneJtaPlatform: jakarta.transaction.UserTransaction locateUserTransaction()> with actual argTypes: [] and taint: [true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [null, java.lang.Object[]] and taint: [true, false, false]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.reflect.Method, java.lang.Object[]] and taint: [true, true, true, true]",
            "<org.hibernate.engine.transaction.internal.TransactionImpl: org.hibernate.resource.transaction.spi.TransactionStatus getStatus()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: org.hibernate.resource.transaction.spi.TransactionCoordinator$TransactionDriver getTransactionDriverControl()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl$TransactionDriverControlImpl makePhysicalTransactionDelegate()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionAdapter makeUserTransactionAdapter()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform: jakarta.transaction.UserTransaction retrieveUserTransaction()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.JBossStandAloneJtaPlatform: jakarta.transaction.UserTransaction locateUserTransaction()> with actual argTypes: [] and taint: [true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [null, java.lang.Object[]] and taint: [true, false, false]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.internal.SessionFactoryImpl: void close()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.internal.SessionFactoryObserverChain: void sessionFactoryClosing(org.hibernate.SessionFactory)> with actual argTypes: [org.hibernate.internal.SessionFactoryImpl] and taint: [true, true]",
            "<org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport: void sessionFactoryClosing(org.hibernate.SessionFactory)> with actual argTypes: [org.hibernate.SessionFactory] and taint: [true, true]",
            "<org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl: void perform(org.hibernate.service.ServiceRegistry)> with actual argTypes: [org.hibernate.service.spi.ServiceRegistryImplementor] and taint: [true, true]",
            "<org.hibernate.tool.schema.internal.exec.GenerationTargetToScript: void prepare()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.tool.schema.internal.exec.ScriptTargetOutputToFile: void prepare()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.tool.schema.internal.exec.ScriptTargetOutputToFile: java.io.Writer toFileWriter(java.io.File,java.lang.String,boolean)> with actual argTypes: [java.io.File, java.lang.String, boolean] and taint: [false, true, true, true]",
            "<java.io.FileOutputStream: void <init>(java.io.File,boolean)> with actual argTypes: [java.io.File, boolean] and taint: [false, true, true]"
        ],
        [
            "<org.hibernate.proxy.pojo.bytebuddy.SerializableProxy: java.lang.Object readResolve()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.proxy.pojo.bytebuddy.SerializableProxy: org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl retrieveByteBuddyBytecodeProvider(org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [false, true]",
            "<org.hibernate.service.internal.AbstractServiceRegistryImpl: org.hibernate.service.Service getService(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [true, false]",
            "<org.hibernate.service.internal.AbstractServiceRegistryImpl: org.hibernate.service.Service initializeService(org.hibernate.service.spi.ServiceBinding)> with actual argTypes: [org.hibernate.service.spi.ServiceBinding] and taint: [true, true]",
            "<org.hibernate.service.internal.AbstractServiceRegistryImpl: org.hibernate.service.Service createService(org.hibernate.service.spi.ServiceBinding)> with actual argTypes: [org.hibernate.service.spi.ServiceBinding] and taint: [true, true]",
            "<org.hibernate.boot.registry.internal.StandardServiceRegistryImpl: org.hibernate.service.Service initiateService(org.hibernate.service.spi.ServiceInitiator)> with actual argTypes: [org.hibernate.service.spi.ServiceInitiator] and taint: [true, true]",
            "<org.hibernate.engine.jdbc.connections.internal.ConnectionProviderInitiator: org.hibernate.service.Service initiateService(java.util.Map,org.hibernate.service.spi.ServiceRegistryImplementor)> with actual argTypes: [java.util.Map, org.hibernate.boot.registry.internal.StandardServiceRegistryImpl] and taint: [true, true, true]",
            "<org.hibernate.engine.jdbc.connections.internal.ConnectionProviderInitiator: org.hibernate.engine.jdbc.connections.spi.ConnectionProvider initiateService(java.util.Map,org.hibernate.service.spi.ServiceRegistryImplementor)> with actual argTypes: [java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor] and taint: [true, true, true]",
            "<org.hibernate.engine.jdbc.connections.internal.ConnectionProviderInitiator: void lambda$initiateService$0(java.util.Map,org.hibernate.engine.jdbc.connections.spi.ConnectionProvider,java.beans.BeanInfo)> with actual argTypes: [java.util.Map, org.hibernate.engine.jdbc.connections.spi.ConnectionProvider, java.beans.BeanInfo] and taint: [false, false, false, false]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider, java.lang.Object[]] and taint: [false, false, false]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.query.internal.ScrollableResultsIterator: boolean hasNext()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.internal.FetchingScrollableResultsImpl: boolean next()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.internal.FetchingScrollableResultsImpl: boolean prepareCurrentRow()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.sql.results.internal.StandardRowReader: java.lang.Object readRow(org.hibernate.sql.results.jdbc.spi.RowProcessingState)> with actual argTypes: [org.hibernate.sql.results.internal.RowProcessingStateStandardImpl] and taint: [true, true]",
            "<org.hibernate.sql.results.internal.RowTransformerTupleTransformerAdapter: java.lang.Object transformRow(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, true]",
            "<org.hibernate.transform.AliasToBeanResultTransformer: java.lang.Object transformTuple(java.lang.Object[],java.lang.String[])> with actual argTypes: [java.lang.Object[], java.lang.String[]] and taint: [true, true, true]",
            "<org.hibernate.property.access.spi.SetterMethodImpl: void set(java.lang.Object,java.lang.Object)> with actual argTypes: [java.lang.Object, java.lang.Object] and taint: [true, true, true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [true, true, true]"
        ],
        [
            "<org.hibernate.internal.AbstractSharedSessionContract: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl: org.hibernate.resource.transaction.spi.TransactionCoordinator buildTransactionCoordinator(org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner,org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder$Options)> with actual argTypes: [org.hibernate.engine.jdbc.spi.JdbcCoordinator, org.hibernate.internal.AbstractSharedSessionContract] and taint: [true, true, true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: void <init>(org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder,org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner,boolean,org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform)> with actual argTypes: [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl, org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner, boolean, org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] and taint: [false, true, true, true, true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: void pulse()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform: boolean canRegisterSynchronization()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform: int getCurrentStatus()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform: jakarta.transaction.TransactionManager retrieveTransactionManager()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.JOnASJtaPlatform: jakarta.transaction.TransactionManager locateTransactionManager()> with actual argTypes: [] and taint: [true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [null, java.lang.Object[]] and taint: [false, false, false]"
        ],
        [
            "<org.hibernate.internal.AbstractSharedSessionContract: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl: org.hibernate.resource.transaction.spi.TransactionCoordinator buildTransactionCoordinator(org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner,org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder$Options)> with actual argTypes: [org.hibernate.engine.jdbc.spi.JdbcCoordinator, org.hibernate.internal.AbstractSharedSessionContract] and taint: [true, true, true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: void <init>(org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder,org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner,boolean,org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform)> with actual argTypes: [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl, org.hibernate.resource.transaction.spi.TransactionCoordinatorOwner, boolean, org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] and taint: [false, true, true, true, true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: void pulse()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform: boolean canRegisterSynchronization()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.WebSphereLibertyJtaPlatform: int getCurrentStatus()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform: jakarta.transaction.TransactionManager retrieveTransactionManager()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.JBossStandAloneJtaPlatform: jakarta.transaction.TransactionManager locateTransactionManager()> with actual argTypes: [] and taint: [true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [null, java.lang.Object[]] and taint: [false, false, false]"
        ],
        [
            "<org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.context.internal.ThreadLocalSessionContext: void doBind(org.hibernate.Session,org.hibernate.SessionFactory)> with actual argTypes: [org.hibernate.Session, org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [false, true, true]",
            "<org.hibernate.context.internal.ThreadLocalSessionContext: void terminateOrphanedSession(org.hibernate.Session)> with actual argTypes: [org.hibernate.Session] and taint: [false, true]",
            "<org.hibernate.engine.transaction.internal.TransactionImpl: org.hibernate.resource.transaction.spi.TransactionStatus getStatus()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: org.hibernate.resource.transaction.spi.TransactionCoordinator$TransactionDriver getTransactionDriverControl()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl$TransactionDriverControlImpl makePhysicalTransactionDelegate()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionAdapter makeUserTransactionAdapter()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform: jakarta.transaction.UserTransaction retrieveUserTransaction()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.WildFlyStandAloneJtaPlatform: jakarta.transaction.UserTransaction locateUserTransaction()> with actual argTypes: [] and taint: [true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [null, java.lang.Object[]] and taint: [true, false, false]"
        ],
        [
            "<org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.context.internal.ThreadLocalSessionContext: void doBind(org.hibernate.Session,org.hibernate.SessionFactory)> with actual argTypes: [org.hibernate.Session, org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [false, true, true]",
            "<org.hibernate.context.internal.ThreadLocalSessionContext: void terminateOrphanedSession(org.hibernate.Session)> with actual argTypes: [org.hibernate.Session] and taint: [false, true]",
            "<org.hibernate.engine.transaction.internal.TransactionImpl: org.hibernate.resource.transaction.spi.TransactionStatus getStatus()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: org.hibernate.resource.transaction.spi.TransactionCoordinator$TransactionDriver getTransactionDriverControl()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl$TransactionDriverControlImpl makePhysicalTransactionDelegate()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionAdapter makeUserTransactionAdapter()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform: jakarta.transaction.UserTransaction retrieveUserTransaction()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.JBossStandAloneJtaPlatform: jakarta.transaction.UserTransaction locateUserTransaction()> with actual argTypes: [] and taint: [true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [null, java.lang.Object[]] and taint: [false, false, false]"
        ],
        [
            "<org.hibernate.internal.SessionImpl: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.engine.internal.StatefulPersistenceContext: org.hibernate.engine.internal.StatefulPersistenceContext deserialize(java.io.ObjectInputStream,org.hibernate.engine.spi.SessionImplementor)> with actual argTypes: [java.io.ObjectInputStream, org.hibernate.internal.SessionImpl] and taint: [false, true, true]",
            "<org.hibernate.collection.spi.AbstractPersistentCollection: boolean setCurrentSession(org.hibernate.engine.spi.SharedSessionContractImplementor)> with actual argTypes: [org.hibernate.engine.spi.SessionImplementor] and taint: [true, true]",
            "<org.hibernate.collection.spi.AbstractPersistentCollection: java.lang.String generateUnexpectedSessionStateMessage(org.hibernate.engine.spi.SharedSessionContractImplementor)> with actual argTypes: [org.hibernate.engine.spi.SharedSessionContractImplementor] and taint: [true, true]",
            "<org.hibernate.pretty.MessageHelper: java.lang.String collectionInfoString(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.spi.PersistentCollection,java.lang.Object,org.hibernate.engine.spi.SharedSessionContractImplementor)> with actual argTypes: [org.hibernate.persister.collection.CollectionPersister, org.hibernate.collection.spi.AbstractPersistentCollection, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor] and taint: [false, true, true, true, true]",
            "<org.hibernate.type.internal.ConvertedBasicTypeImpl: java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [true, true, true]",
            "<org.hibernate.type.descriptor.java.JavaType: java.lang.String extractLoggableRepresentation(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.hibernate.type.descriptor.java.spi.FormatMapperBasedJavaType: java.lang.String toString(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.hibernate.type.format.jaxb.JaxbXmlFormatMapper: java.lang.String toString(java.lang.Object,org.hibernate.type.descriptor.java.JavaType,org.hibernate.type.descriptor.WrapperOptions)> with actual argTypes: [java.lang.Object, org.hibernate.type.descriptor.java.spi.FormatMapperBasedJavaType, org.hibernate.type.descriptor.WrapperOptions] and taint: [true, true, true, true]",
            "<org.hibernate.type.format.jaxb.JaxbXmlFormatMapper: org.hibernate.type.format.jaxb.JaxbXmlFormatMapper$JAXBElementTransformer createTransformer(org.hibernate.sql.ast.spi.StringBuilderSqlAppender,java.lang.Class,java.lang.String,java.lang.Object,jakarta.xml.bind.JAXBIntrospector,org.hibernate.type.descriptor.WrapperOptions)> with actual argTypes: [org.hibernate.sql.ast.spi.StringBuilderSqlAppender, java.lang.Class, java.lang.String, java.lang.Object, jakarta.xml.bind.JAXBIntrospector, org.hibernate.type.descriptor.WrapperOptions] and taint: [true, false, true, false, true, true, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, false]"
        ],
        [
            "<org.hibernate.internal.SessionImpl: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.engine.internal.StatefulPersistenceContext: org.hibernate.engine.internal.StatefulPersistenceContext deserialize(java.io.ObjectInputStream,org.hibernate.engine.spi.SessionImplementor)> with actual argTypes: [java.io.ObjectInputStream, org.hibernate.internal.SessionImpl] and taint: [false, true, true]",
            "<org.hibernate.collection.spi.AbstractPersistentCollection: boolean setCurrentSession(org.hibernate.engine.spi.SharedSessionContractImplementor)> with actual argTypes: [org.hibernate.engine.spi.SessionImplementor] and taint: [true, true]",
            "<org.hibernate.collection.spi.AbstractPersistentCollection: java.lang.String generateUnexpectedSessionStateMessage(org.hibernate.engine.spi.SharedSessionContractImplementor)> with actual argTypes: [org.hibernate.engine.spi.SharedSessionContractImplementor] and taint: [true, true]",
            "<org.hibernate.pretty.MessageHelper: java.lang.String collectionInfoString(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.spi.PersistentCollection,java.lang.Object,org.hibernate.engine.spi.SharedSessionContractImplementor)> with actual argTypes: [org.hibernate.persister.collection.CollectionPersister, org.hibernate.collection.spi.AbstractPersistentCollection, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor] and taint: [false, true, true, true, true]",
            "<org.hibernate.type.internal.ConvertedBasicTypeImpl: java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [java.lang.Object, org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [true, true, true]",
            "<org.hibernate.type.descriptor.java.JavaType: java.lang.String extractLoggableRepresentation(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.hibernate.type.descriptor.java.spi.FormatMapperBasedJavaType: java.lang.String toString(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.hibernate.type.format.jaxb.JaxbXmlFormatMapper: java.lang.String toString(java.lang.Object,org.hibernate.type.descriptor.java.JavaType,org.hibernate.type.descriptor.WrapperOptions)> with actual argTypes: [java.lang.Object, org.hibernate.type.descriptor.java.spi.FormatMapperBasedJavaType, org.hibernate.type.descriptor.WrapperOptions] and taint: [true, true, true, true]",
            "<org.hibernate.type.format.jaxb.JaxbXmlFormatMapper: org.hibernate.type.format.jaxb.JaxbXmlFormatMapper$JAXBElementTransformer createTransformer(org.hibernate.sql.ast.spi.StringBuilderSqlAppender,org.hibernate.type.descriptor.java.JavaType,java.lang.String,java.lang.Object,jakarta.xml.bind.JAXBIntrospector,org.hibernate.type.descriptor.WrapperOptions)> with actual argTypes: [org.hibernate.sql.ast.spi.StringBuilderSqlAppender, org.hibernate.type.descriptor.java.JavaType, java.lang.String, java.lang.Object, jakarta.xml.bind.JAXBIntrospector, org.hibernate.type.descriptor.WrapperOptions] and taint: [true, false, true, false, true, true, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, false]"
        ],
        [
            "<org.hibernate.internal.SessionImpl: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.internal.FilterImpl: void afterDeserialize(org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [true, true]",
            "<org.hibernate.internal.FilterImpl: void validate()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.internal.FilterImpl: boolean hasResolver(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<org.hibernate.internal.FilterImpl: java.util.function.Supplier getParameterResolver(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<org.hibernate.engine.spi.FilterDefinition: java.util.function.Supplier getParameterResolver(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl$ContainedBeanManagedBeanAdapter: java.lang.Object getBeanInstance()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.beans.container.internal.JpaCompliantLifecycleStrategy$BeanImpl: java.lang.Object getBeanInstance()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.beans.container.internal.JpaCompliantLifecycleStrategy$BeanImpl: void initialize()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.boot.model.TypeBeanInstanceProducer: java.lang.Object produceBeanInstance(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, true]"
        ],
        [
            "<org.hibernate.internal.SessionImpl: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.internal.FilterImpl: void afterDeserialize(org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [true, true]",
            "<org.hibernate.internal.FilterImpl: void validate()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.internal.FilterImpl: boolean hasResolver(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<org.hibernate.internal.FilterImpl: java.util.function.Supplier getParameterResolver(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<org.hibernate.engine.spi.FilterDefinition: java.util.function.Supplier getParameterResolver(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl$ContainedBeanManagedBeanAdapter: java.lang.Object getBeanInstance()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.beans.container.internal.JpaCompliantLifecycleStrategy$BeanImpl: java.lang.Object getBeanInstance()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.beans.container.internal.JpaCompliantLifecycleStrategy$BeanImpl: void initialize()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.boot.model.TypeBeanInstanceProducer: java.lang.Object produceBeanInstance(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, false]"
        ],
        [
            "<org.hibernate.internal.SessionImpl: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.internal.FilterImpl: void afterDeserialize(org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [true, true]",
            "<org.hibernate.internal.FilterImpl: void validate()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.internal.FilterImpl: boolean hasResolver(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<org.hibernate.internal.FilterImpl: java.util.function.Supplier getParameterResolver(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<org.hibernate.engine.spi.FilterDefinition: java.util.function.Supplier getParameterResolver(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl$ContainedBeanManagedBeanAdapter: java.lang.Object getBeanInstance()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.beans.container.internal.JpaCompliantLifecycleStrategy$BeanImpl: java.lang.Object getBeanInstance()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.beans.container.internal.JpaCompliantLifecycleStrategy$BeanImpl: void initialize()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.beans.internal.FallbackBeanInstanceProducer: java.lang.Object produceBeanInstance(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, false]"
        ],
        [
            "<org.hibernate.context.internal.ThreadLocalSessionContext$TransactionProtectionWrapper: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.context.internal.ThreadLocalSessionContext: void doBind(org.hibernate.Session,org.hibernate.SessionFactory)> with actual argTypes: [org.hibernate.Session, org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [false, true, true]",
            "<org.hibernate.context.internal.ThreadLocalSessionContext: void terminateOrphanedSession(org.hibernate.Session)> with actual argTypes: [org.hibernate.Session] and taint: [false, true]",
            "<org.hibernate.engine.transaction.internal.TransactionImpl: org.hibernate.resource.transaction.spi.TransactionStatus getStatus()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: org.hibernate.resource.transaction.spi.TransactionCoordinator$TransactionDriver getTransactionDriverControl()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl$TransactionDriverControlImpl makePhysicalTransactionDelegate()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorImpl: org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionAdapter makeUserTransactionAdapter()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform: jakarta.transaction.UserTransaction retrieveUserTransaction()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.JBossStandAloneJtaPlatform: jakarta.transaction.UserTransaction locateUserTransaction()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.engine.transaction.jta.platform.internal.WildFlyStandAloneJtaPlatform: jakarta.transaction.UserTransaction locateUserTransaction()> with actual argTypes: [] and taint: [false]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [null, java.lang.Object[]] and taint: [false, false, false]"
        ],
        [
            "<org.hibernate.proxy.pojo.bytebuddy.SerializableProxy: java.lang.Object readResolve()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.proxy.pojo.bytebuddy.SerializableProxy: org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl retrieveByteBuddyBytecodeProvider(org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [false, true]",
            "<org.hibernate.service.internal.AbstractServiceRegistryImpl: org.hibernate.service.Service getService(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [true, false]",
            "<org.hibernate.service.internal.AbstractServiceRegistryImpl: org.hibernate.service.Service initializeService(org.hibernate.service.spi.ServiceBinding)> with actual argTypes: [org.hibernate.service.spi.ServiceBinding] and taint: [true, true]",
            "<org.hibernate.service.internal.AbstractServiceRegistryImpl: org.hibernate.service.Service createService(org.hibernate.service.spi.ServiceBinding)> with actual argTypes: [org.hibernate.service.spi.ServiceBinding] and taint: [true, true]",
            "<org.hibernate.boot.registry.internal.StandardServiceRegistryImpl: org.hibernate.service.Service initiateService(org.hibernate.service.spi.ServiceInitiator)> with actual argTypes: [org.hibernate.service.spi.ServiceInitiator] and taint: [true, true]",
            "<org.hibernate.resource.beans.spi.ManagedBeanRegistryInitiator: org.hibernate.service.Service initiateService(java.util.Map,org.hibernate.service.spi.ServiceRegistryImplementor)> with actual argTypes: [java.util.Map, org.hibernate.boot.registry.internal.StandardServiceRegistryImpl] and taint: [true, true, true]",
            "<org.hibernate.resource.beans.spi.ManagedBeanRegistryInitiator: org.hibernate.resource.beans.spi.ManagedBeanRegistry initiateService(java.util.Map,org.hibernate.service.spi.ServiceRegistryImplementor)> with actual argTypes: [java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor] and taint: [true, true, true]",
            "<org.hibernate.resource.beans.spi.ManagedBeanRegistryInitiator: org.hibernate.resource.beans.container.spi.BeanContainer resolveBeanContainer(java.util.Map,org.hibernate.service.spi.ServiceRegistryImplementor)> with actual argTypes: [java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor] and taint: [true, true, true]",
            "<org.hibernate.resource.beans.container.internal.CdiBeanContainerBuilder: org.hibernate.resource.beans.container.spi.BeanContainer fromBeanManagerReference(java.lang.Object,org.hibernate.service.ServiceRegistry)> with actual argTypes: [java.lang.Object, org.hibernate.service.spi.ServiceRegistryImplementor] and taint: [false, true, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, true]"
        ],
        [
            "<org.hibernate.internal.SessionImpl: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.internal.FilterImpl: void afterDeserialize(org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [true, true]",
            "<org.hibernate.internal.FilterImpl: void validate()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.internal.FilterImpl: boolean hasResolver(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<org.hibernate.internal.FilterImpl: java.util.function.Supplier getParameterResolver(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<org.hibernate.engine.spi.FilterDefinition: java.util.function.Supplier getParameterResolver(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl$ContainedBeanManagedBeanAdapter: java.lang.Object getBeanInstance()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.beans.container.internal.JpaCompliantLifecycleStrategy$BeanImpl: java.lang.Object getBeanInstance()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.beans.container.internal.JpaCompliantLifecycleStrategy$BeanImpl: void initialize()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.boot.model.internal.GeneratorBinder$3: java.lang.Object produceBeanInstance(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<org.hibernate.boot.model.internal.GeneratorBinder: org.hibernate.generator.Generator instantiateGenerator(java.lang.annotation.Annotation,java.lang.reflect.Member,java.lang.Class,java.lang.Object,java.lang.Class,java.lang.Class)> with actual argTypes: [java.lang.annotation.Annotation, java.lang.reflect.Member, java.lang.Class, org.hibernate.id.factory.spi.CustomIdGeneratorCreationContext, java.lang.Class, java.lang.Class] and taint: [false, true, true, true, true, false, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, true]"
        ],
        [
            "<org.hibernate.internal.SessionImpl: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.internal.FilterImpl: void afterDeserialize(org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [true, true]",
            "<org.hibernate.internal.FilterImpl: void validate()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.internal.FilterImpl: boolean hasResolver(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<org.hibernate.internal.FilterImpl: java.util.function.Supplier getParameterResolver(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<org.hibernate.engine.spi.FilterDefinition: java.util.function.Supplier getParameterResolver(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl$ContainedBeanManagedBeanAdapter: java.lang.Object getBeanInstance()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.beans.container.internal.JpaCompliantLifecycleStrategy$BeanImpl: java.lang.Object getBeanInstance()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.beans.container.internal.JpaCompliantLifecycleStrategy$BeanImpl: void initialize()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.boot.model.internal.GeneratorBinder$3: java.lang.Object produceBeanInstance(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<org.hibernate.boot.model.internal.GeneratorBinder: org.hibernate.generator.Generator instantiateGenerator(java.lang.annotation.Annotation,java.lang.reflect.Member,java.lang.Class,java.lang.Object,java.lang.Class,java.lang.Class)> with actual argTypes: [java.lang.annotation.Annotation, java.lang.reflect.Member, java.lang.Class, org.hibernate.id.factory.spi.CustomIdGeneratorCreationContext, java.lang.Class, java.lang.Class] and taint: [false, true, true, true, true, false, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [false, false]"
        ],
        [
            "<org.hibernate.internal.SessionImpl: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.internal.FilterImpl: void afterDeserialize(org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [true, true]",
            "<org.hibernate.internal.FilterImpl: void validate()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.internal.FilterImpl: boolean hasResolver(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<org.hibernate.internal.FilterImpl: java.util.function.Supplier getParameterResolver(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<org.hibernate.engine.spi.FilterDefinition: java.util.function.Supplier getParameterResolver(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl$ContainedBeanManagedBeanAdapter: java.lang.Object getBeanInstance()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.beans.container.internal.JpaCompliantLifecycleStrategy$NamedBeanImpl: java.lang.Object getBeanInstance()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.beans.container.internal.JpaCompliantLifecycleStrategy$NamedBeanImpl: void initialize()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.boot.model.TypeBeanInstanceProducer: java.lang.Object produceBeanInstance(java.lang.String,java.lang.Class)> with actual argTypes: [java.lang.String, java.lang.Class] and taint: [true, true, true]",
            "<org.hibernate.boot.model.TypeBeanInstanceProducer: java.lang.Object produceBeanInstance(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, true]"
        ],
        [
            "<org.hibernate.internal.SessionImpl: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.internal.FilterImpl: void afterDeserialize(org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [true, true]",
            "<org.hibernate.internal.FilterImpl: void validate()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.internal.FilterImpl: boolean hasResolver(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<org.hibernate.internal.FilterImpl: java.util.function.Supplier getParameterResolver(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<org.hibernate.engine.spi.FilterDefinition: java.util.function.Supplier getParameterResolver(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl$ContainedBeanManagedBeanAdapter: java.lang.Object getBeanInstance()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.beans.container.internal.JpaCompliantLifecycleStrategy$NamedBeanImpl: java.lang.Object getBeanInstance()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.beans.container.internal.JpaCompliantLifecycleStrategy$NamedBeanImpl: void initialize()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.boot.model.TypeBeanInstanceProducer: java.lang.Object produceBeanInstance(java.lang.String,java.lang.Class)> with actual argTypes: [java.lang.String, java.lang.Class] and taint: [true, true, true]",
            "<org.hibernate.boot.model.TypeBeanInstanceProducer: java.lang.Object produceBeanInstance(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, false]"
        ],
        [
            "<org.hibernate.internal.SessionImpl: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.internal.FilterImpl: void afterDeserialize(org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [true, true]",
            "<org.hibernate.internal.FilterImpl: void validate()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.internal.FilterImpl: boolean hasResolver(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<org.hibernate.internal.FilterImpl: java.util.function.Supplier getParameterResolver(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<org.hibernate.engine.spi.FilterDefinition: java.util.function.Supplier getParameterResolver(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl$ContainedBeanManagedBeanAdapter: java.lang.Object getBeanInstance()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.beans.container.internal.JpaCompliantLifecycleStrategy$NamedBeanImpl: java.lang.Object getBeanInstance()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.beans.container.internal.JpaCompliantLifecycleStrategy$NamedBeanImpl: void initialize()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.beans.internal.FallbackBeanInstanceProducer: java.lang.Object produceBeanInstance(java.lang.String,java.lang.Class)> with actual argTypes: [java.lang.String, java.lang.Class] and taint: [true, true, true]",
            "<org.hibernate.resource.beans.internal.FallbackBeanInstanceProducer: java.lang.Object produceBeanInstance(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, false]"
        ],
        [
            "<java.awt.dnd.DragGestureEvent: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.collection.spi.PersistentIdentifierBag: boolean isEmpty()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.collection.spi.AbstractPersistentCollection: boolean readSize()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.collection.spi.AbstractPersistentCollection: java.lang.Object withTemporarySessionIfNeeded(org.hibernate.collection.spi.AbstractPersistentCollection$LazyInitializationWork)> with actual argTypes: [org.hibernate.collection.spi.AbstractPersistentCollection$LazyInitializationWork] and taint: [true, true]",
            "<org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl: void afterTransaction()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor: void afterTransaction()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl: void releaseResources()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.internal.JdbcObserverImpl: void jdbcReleaseRegistryResourcesStart()> with actual argTypes: [] and taint: [true]",
            "<javax.swing.JFormattedTextField$FocusLostHandler: void run()> with actual argTypes: [] and taint: [true]",
            "<javax.swing.JFormattedTextField: void commitEdit()> with actual argTypes: [] and taint: [true]",
            "<javax.swing.text.DefaultFormatter: java.lang.Object stringToValue(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, true]"
        ],
        [
            "<org.hibernate.internal.SessionImpl: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.internal.FilterImpl: void afterDeserialize(org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [true, true]",
            "<org.hibernate.internal.FilterImpl: void validate()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.internal.FilterImpl: boolean hasResolver(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<org.hibernate.internal.FilterImpl: java.util.function.Supplier getParameterResolver(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<org.hibernate.engine.spi.FilterDefinition: java.util.function.Supplier getParameterResolver(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<org.hibernate.boot.model.internal.DelayedParameterizedTypeBean: java.lang.Object getBeanInstance()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.type.EnumType: void setParameterValues(java.util.Properties)> with actual argTypes: [java.util.Properties] and taint: [true, true]",
            "<org.hibernate.type.descriptor.java.EnumJavaType: org.hibernate.type.descriptor.jdbc.JdbcType getRecommendedJdbcType(org.hibernate.type.descriptor.jdbc.JdbcTypeIndicators)> with actual argTypes: [org.hibernate.type.EnumType$LocalJdbcTypeIndicators] and taint: [true, false]",
            "<org.hibernate.type.descriptor.java.EnumJavaType: boolean hasManyValues()> with actual argTypes: [] and taint: [true]",
            "<java.lang.Class: java.lang.Object[] getEnumConstants()> with actual argTypes: [] and taint: [true]",
            "<java.lang.Class: java.lang.Object[] getEnumConstantsShared()> with actual argTypes: [] and taint: [true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [null, java.lang.Object[]] and taint: [true, false, false]"
        ],
        [
            "<java.awt.dnd.DragGestureEvent: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.collection.spi.PersistentIdentifierBag: boolean isEmpty()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.collection.spi.AbstractPersistentCollection: boolean readSize()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.collection.spi.AbstractPersistentCollection: java.lang.Object withTemporarySessionIfNeeded(org.hibernate.collection.spi.AbstractPersistentCollection$LazyInitializationWork)> with actual argTypes: [org.hibernate.collection.spi.AbstractPersistentCollection$LazyInitializationWork] and taint: [true, true]",
            "<org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl: void afterTransaction()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor: void afterTransaction()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl: void releaseResources()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.internal.JdbcObserverImpl: void jdbcReleaseRegistryResourcesStart()> with actual argTypes: [] and taint: [true]",
            "<java.util.concurrent.ForkJoinTask$AdaptedRunnableAction: void run()> with actual argTypes: [] and taint: [true]",
            "<java.util.concurrent.ForkJoinTask: java.lang.Object invoke()> with actual argTypes: [] and taint: [true]",
            "<java.util.concurrent.ForkJoinTask: void reportException(int)> with actual argTypes: [int] and taint: [true, true]",
            "<java.util.concurrent.ForkJoinTask: java.lang.Throwable getThrowableException()> with actual argTypes: [] and taint: [true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, true]"
        ],
        [
            "<java.awt.dnd.DragGestureEvent: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.collection.spi.PersistentIdentifierBag: boolean isEmpty()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.collection.spi.AbstractPersistentCollection: boolean readSize()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.collection.spi.AbstractPersistentCollection: java.lang.Object withTemporarySessionIfNeeded(org.hibernate.collection.spi.AbstractPersistentCollection$LazyInitializationWork)> with actual argTypes: [org.hibernate.collection.spi.AbstractPersistentCollection$LazyInitializationWork] and taint: [true, true]",
            "<org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl: void afterTransaction()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor: void afterTransaction()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl: void releaseResources()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.internal.JdbcObserverImpl: void jdbcReleaseRegistryResourcesStart()> with actual argTypes: [] and taint: [true]",
            "<java.util.concurrent.ForkJoinTask$AdaptedRunnableAction: void run()> with actual argTypes: [] and taint: [true]",
            "<java.util.concurrent.ForkJoinTask: java.lang.Object invoke()> with actual argTypes: [] and taint: [true]",
            "<java.util.concurrent.ForkJoinTask: void reportException(int)> with actual argTypes: [int] and taint: [true, true]",
            "<java.util.concurrent.ForkJoinTask: java.lang.Throwable getThrowableException()> with actual argTypes: [] and taint: [true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, false]"
        ],
        [
            "<org.hibernate.proxy.pojo.bytebuddy.SerializableProxy: java.lang.Object readResolve()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.proxy.pojo.bytebuddy.SerializableProxy: org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl retrieveByteBuddyBytecodeProvider(org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [false, true]",
            "<org.hibernate.service.internal.AbstractServiceRegistryImpl: org.hibernate.service.Service getService(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [true, false]",
            "<org.hibernate.service.internal.AbstractServiceRegistryImpl: org.hibernate.service.Service initializeService(org.hibernate.service.spi.ServiceBinding)> with actual argTypes: [org.hibernate.service.spi.ServiceBinding] and taint: [true, true]",
            "<org.hibernate.service.internal.AbstractServiceRegistryImpl: org.hibernate.service.Service createService(org.hibernate.service.spi.ServiceBinding)> with actual argTypes: [org.hibernate.service.spi.ServiceBinding] and taint: [true, true]",
            "<org.hibernate.boot.registry.internal.StandardServiceRegistryImpl: org.hibernate.service.Service initiateService(org.hibernate.service.spi.ServiceInitiator)> with actual argTypes: [org.hibernate.service.spi.ServiceInitiator] and taint: [true, true]",
            "<org.hibernate.cache.internal.RegionFactoryInitiator: org.hibernate.service.Service initiateService(java.util.Map,org.hibernate.service.spi.ServiceRegistryImplementor)> with actual argTypes: [java.util.Map, org.hibernate.boot.registry.internal.StandardServiceRegistryImpl] and taint: [true, true, true]",
            "<org.hibernate.cache.internal.RegionFactoryInitiator: org.hibernate.cache.spi.RegionFactory initiateService(java.util.Map,org.hibernate.service.spi.ServiceRegistryImplementor)> with actual argTypes: [java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor] and taint: [true, true, true]",
            "<org.hibernate.cache.internal.RegionFactoryInitiator: org.hibernate.cache.spi.RegionFactory resolveRegionFactory(java.util.Map,org.hibernate.service.spi.ServiceRegistryImplementor)> with actual argTypes: [java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor] and taint: [true, true, true]",
            "<org.hibernate.boot.registry.selector.internal.StrategySelectorImpl: java.lang.Object resolveStrategy(java.lang.Class,java.lang.Object,java.lang.Object,org.hibernate.boot.registry.selector.spi.StrategyCreator)> with actual argTypes: [java.lang.Class, java.lang.Object, org.hibernate.cache.spi.RegionFactory, org.hibernate.cache.internal.StrategyCreatorRegionFactoryImpl] and taint: [true, false, true, false, false]",
            "<org.hibernate.boot.registry.selector.internal.StrategySelectorImpl: java.lang.Object resolveStrategy(java.lang.Class,java.lang.Object,java.util.concurrent.Callable,org.hibernate.boot.registry.selector.spi.StrategyCreator)> with actual argTypes: [java.lang.Class, java.lang.Object, java.util.concurrent.Callable, org.hibernate.boot.registry.selector.spi.StrategyCreator] and taint: [true, false, true, false, false]",
            "<org.hibernate.cache.internal.StrategyCreatorRegionFactoryImpl: java.lang.Object create(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [false, true]",
            "<org.hibernate.cache.internal.StrategyCreatorRegionFactoryImpl: org.hibernate.cache.spi.RegionFactory create(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [false, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, false]"
        ],
        [
            "<org.hibernate.proxy.pojo.bytebuddy.SerializableProxy: java.lang.Object readResolve()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.proxy.pojo.bytebuddy.SerializableProxy: org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl retrieveByteBuddyBytecodeProvider(org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [false, true]",
            "<org.hibernate.service.internal.AbstractServiceRegistryImpl: org.hibernate.service.Service getService(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [true, false]",
            "<org.hibernate.service.internal.AbstractServiceRegistryImpl: org.hibernate.service.Service initializeService(org.hibernate.service.spi.ServiceBinding)> with actual argTypes: [org.hibernate.service.spi.ServiceBinding] and taint: [true, true]",
            "<org.hibernate.service.internal.AbstractServiceRegistryImpl: org.hibernate.service.Service createService(org.hibernate.service.spi.ServiceBinding)> with actual argTypes: [org.hibernate.service.spi.ServiceBinding] and taint: [true, true]",
            "<org.hibernate.boot.registry.internal.StandardServiceRegistryImpl: org.hibernate.service.Service initiateService(org.hibernate.service.spi.ServiceInitiator)> with actual argTypes: [org.hibernate.service.spi.ServiceInitiator] and taint: [true, true]",
            "<org.hibernate.cache.internal.RegionFactoryInitiator: org.hibernate.service.Service initiateService(java.util.Map,org.hibernate.service.spi.ServiceRegistryImplementor)> with actual argTypes: [java.util.Map, org.hibernate.boot.registry.internal.StandardServiceRegistryImpl] and taint: [true, true, true]",
            "<org.hibernate.cache.internal.RegionFactoryInitiator: org.hibernate.cache.spi.RegionFactory initiateService(java.util.Map,org.hibernate.service.spi.ServiceRegistryImplementor)> with actual argTypes: [java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor] and taint: [true, true, true]",
            "<org.hibernate.cache.internal.RegionFactoryInitiator: org.hibernate.cache.spi.RegionFactory resolveRegionFactory(java.util.Map,org.hibernate.service.spi.ServiceRegistryImplementor)> with actual argTypes: [java.util.Map, org.hibernate.service.spi.ServiceRegistryImplementor] and taint: [true, true, true]",
            "<org.hibernate.boot.registry.selector.internal.StrategySelectorImpl: java.lang.Object resolveStrategy(java.lang.Class,java.lang.Object,java.lang.Object,org.hibernate.boot.registry.selector.spi.StrategyCreator)> with actual argTypes: [java.lang.Class, java.lang.Object, org.hibernate.cache.spi.RegionFactory, org.hibernate.cache.internal.StrategyCreatorRegionFactoryImpl] and taint: [true, false, true, false, false]",
            "<org.hibernate.boot.registry.selector.internal.StrategySelectorImpl: java.lang.Object resolveStrategy(java.lang.Class,java.lang.Object,java.util.concurrent.Callable,org.hibernate.boot.registry.selector.spi.StrategyCreator)> with actual argTypes: [java.lang.Class, java.lang.Object, java.util.concurrent.Callable, org.hibernate.boot.registry.selector.spi.StrategyCreator] and taint: [true, false, true, false, false]",
            "<org.hibernate.cache.internal.StrategyCreatorRegionFactoryImpl: java.lang.Object create(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [false, true]",
            "<org.hibernate.cache.internal.StrategyCreatorRegionFactoryImpl: org.hibernate.cache.spi.RegionFactory create(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [false, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [false, false]"
        ],
        [
            "<java.awt.dnd.DragGestureEvent: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.collection.spi.PersistentIdentifierBag: boolean isEmpty()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.collection.spi.AbstractPersistentCollection: boolean readSize()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.collection.spi.AbstractPersistentCollection: java.lang.Boolean lambda$readSize$0()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.persister.collection.AbstractCollectionPersister: int getSize(java.lang.Object,org.hibernate.engine.spi.SharedSessionContractImplementor)> with actual argTypes: [java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor] and taint: [false, false, false]",
            "<org.hibernate.type.internal.ConvertedBasicTypeImpl: void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.spi.SharedSessionContractImplementor)> with actual argTypes: [java.sql.PreparedStatement, java.lang.Object, int, org.hibernate.engine.spi.SharedSessionContractImplementor] and taint: [false, false, false, false, false]",
            "<org.hibernate.type.descriptor.jdbc.BasicBinder: void bind(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.type.descriptor.WrapperOptions)> with actual argTypes: [java.sql.PreparedStatement, java.lang.Object, int, org.hibernate.engine.spi.SharedSessionContractImplementor] and taint: [false, false, false, false, false]",
            "<org.hibernate.type.descriptor.jdbc.TimeUtcAsOffsetTimeJdbcType$1: void doBind(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.type.descriptor.WrapperOptions)> with actual argTypes: [java.sql.PreparedStatement, java.lang.Object, int, org.hibernate.type.descriptor.WrapperOptions] and taint: [false, false, false, false, false]",
            "<org.hibernate.type.descriptor.java.PrimitiveCharacterArrayJavaType: java.lang.Object unwrap(java.lang.Object,java.lang.Class,org.hibernate.type.descriptor.WrapperOptions)> with actual argTypes: [java.lang.Object, java.lang.Class, org.hibernate.type.descriptor.WrapperOptions] and taint: [false, false, false, false]",
            "<org.hibernate.type.descriptor.java.PrimitiveCharacterArrayJavaType: java.lang.Object unwrap(char[],java.lang.Class,org.hibernate.type.descriptor.WrapperOptions)> with actual argTypes: [char[], java.lang.Class, org.hibernate.type.descriptor.WrapperOptions] and taint: [false, false, false, false]",
            "<org.hibernate.engine.jdbc.NonContextualLobCreator: java.sql.NClob createNClob(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [false, false]",
            "<org.hibernate.engine.jdbc.NClobProxy: java.sql.NClob generateProxy(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [false, false]",
            "<java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)> with actual argTypes: [java.lang.ClassLoader, java.lang.Class[], org.hibernate.engine.jdbc.NClobProxy] and taint: [false, false, false, false]",
            "<java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.Class,java.lang.reflect.Constructor,java.lang.reflect.InvocationHandler)> with actual argTypes: [java.lang.Class, java.lang.reflect.Constructor, java.lang.reflect.InvocationHandler] and taint: [false, false, false, false]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [false, false]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.query.internal.ScrollableResultsIterator: boolean hasNext()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.internal.FetchingScrollableResultsImpl: boolean next()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.internal.FetchingScrollableResultsImpl: boolean prepareCurrentRow()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.sql.results.internal.StandardRowReader: java.lang.Object readRow(org.hibernate.sql.results.jdbc.spi.RowProcessingState)> with actual argTypes: [org.hibernate.sql.results.internal.RowProcessingStateStandardImpl] and taint: [true, true]",
            "<org.hibernate.sql.results.graph.tuple.TupleResultAssembler: java.lang.Object assemble(org.hibernate.sql.results.jdbc.spi.RowProcessingState)> with actual argTypes: [org.hibernate.sql.results.jdbc.spi.RowProcessingState] and taint: [true, true]",
            "<org.hibernate.sql.results.graph.tuple.TupleResultAssembler: java.lang.Object[] extractRawValue(org.hibernate.sql.results.jdbc.spi.RowProcessingState)> with actual argTypes: [org.hibernate.sql.results.jdbc.spi.RowProcessingState] and taint: [true, true]",
            "<org.hibernate.sql.results.internal.RowProcessingStateStandardImpl: java.lang.Object getJdbcValue(int)> with actual argTypes: [int] and taint: [true, true]",
            "<org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl: java.lang.Object getCurrentRowValue(int)> with actual argTypes: [int] and taint: [true, true]",
            "<org.hibernate.type.descriptor.jdbc.BasicExtractor: java.lang.Object extract(java.sql.ResultSet,int,org.hibernate.type.descriptor.WrapperOptions)> with actual argTypes: [java.sql.ResultSet, int, org.hibernate.engine.spi.SharedSessionContractImplementor] and taint: [true, true, true, true]",
            "<org.hibernate.dialect.StructJdbcType$2: java.lang.Object doExtract(java.sql.ResultSet,int,org.hibernate.type.descriptor.WrapperOptions)> with actual argTypes: [java.sql.ResultSet, int, org.hibernate.type.descriptor.WrapperOptions] and taint: [true, true, true, true]",
            "<org.hibernate.dialect.StructJdbcType$2: java.lang.Object getValue(java.lang.Object,org.hibernate.type.descriptor.WrapperOptions)> with actual argTypes: [java.lang.Object, org.hibernate.type.descriptor.WrapperOptions] and taint: [true, true, true]",
            "<org.hibernate.dialect.StructJdbcType: int wrapRawJdbcValues(org.hibernate.metamodel.mapping.EmbeddableMappingType,java.lang.Object[],int,org.hibernate.type.descriptor.WrapperOptions)> with actual argTypes: [org.hibernate.metamodel.mapping.EmbeddableMappingType, java.lang.Object[], int, org.hibernate.type.descriptor.WrapperOptions] and taint: [true, true, true, false, true]",
            "<org.hibernate.dialect.StructJdbcType: void wrapRawJdbcValue(org.hibernate.metamodel.mapping.JdbcMapping,java.lang.Object[],int,org.hibernate.type.descriptor.WrapperOptions)> with actual argTypes: [org.hibernate.metamodel.mapping.JdbcMapping, java.lang.Object[], int, org.hibernate.type.descriptor.WrapperOptions] and taint: [true, true, true, true, true]",
            "<org.hibernate.dialect.OracleReflectionStructJdbcType: java.lang.Object transformRawJdbcValue(java.lang.Object,org.hibernate.type.descriptor.WrapperOptions)> with actual argTypes: [java.lang.Object, org.hibernate.type.descriptor.WrapperOptions] and taint: [true, true, true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [true, true, true]"
        ],
        [
            "<java.awt.dnd.DragGestureEvent: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.collection.spi.PersistentIdentifierBag: boolean isEmpty()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.collection.spi.AbstractPersistentCollection: boolean readSize()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.collection.spi.AbstractPersistentCollection: java.lang.Boolean lambda$readSize$0()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.persister.collection.AbstractCollectionPersister: int getSize(java.lang.Object,org.hibernate.engine.spi.SharedSessionContractImplementor)> with actual argTypes: [java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor] and taint: [false, false, false]",
            "<org.hibernate.type.EntityType: void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.spi.SharedSessionContractImplementor)> with actual argTypes: [java.sql.PreparedStatement, java.lang.Object, int, org.hibernate.engine.spi.SharedSessionContractImplementor] and taint: [false, false, false, false, false]",
            "<org.hibernate.type.EntityType: org.hibernate.type.Type requireIdentifierOrUniqueKeyType(org.hibernate.engine.spi.Mapping)> with actual argTypes: [org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [false, false]",
            "<org.hibernate.type.EntityType: org.hibernate.type.Type getIdentifierOrUniqueKeyType(org.hibernate.engine.spi.Mapping)> with actual argTypes: [org.hibernate.engine.spi.Mapping] and taint: [false, false]",
            "<org.hibernate.boot.internal.MetadataImpl: org.hibernate.type.Type getReferencedPropertyType(java.lang.String,java.lang.String)> with actual argTypes: [java.lang.String, java.lang.String] and taint: [false, false, false]",
            "<org.hibernate.mapping.Property: org.hibernate.type.Type getType()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.mapping.Component: org.hibernate.type.Type getType()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.mapping.Component: org.hibernate.type.CompositeType getType()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.mapping.Component: int[] sortProperties(boolean)> with actual argTypes: [int] and taint: [false, false]",
            "<org.hibernate.mapping.Component: boolean isSimpleRecord()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.internal.util.ReflectHelper: java.lang.String[] getRecordComponentNames(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [false, false]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Class, java.lang.Object[]] and taint: [false, false, false]"
        ],
        [
            "<java.awt.dnd.DragGestureEvent: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.collection.spi.PersistentIdentifierBag: boolean isEmpty()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.collection.spi.AbstractPersistentCollection: boolean readSize()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.collection.spi.AbstractPersistentCollection: java.lang.Boolean lambda$readSize$0()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.persister.collection.AbstractCollectionPersister: int getSize(java.lang.Object,org.hibernate.engine.spi.SharedSessionContractImplementor)> with actual argTypes: [java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor] and taint: [false, false, false]",
            "<org.hibernate.type.EntityType: void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.spi.SharedSessionContractImplementor)> with actual argTypes: [java.sql.PreparedStatement, java.lang.Object, int, org.hibernate.engine.spi.SharedSessionContractImplementor] and taint: [false, false, false, false, false]",
            "<org.hibernate.type.EntityType: org.hibernate.type.Type requireIdentifierOrUniqueKeyType(org.hibernate.engine.spi.Mapping)> with actual argTypes: [org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [false, false]",
            "<org.hibernate.type.EntityType: org.hibernate.type.Type getIdentifierOrUniqueKeyType(org.hibernate.engine.spi.Mapping)> with actual argTypes: [org.hibernate.engine.spi.Mapping] and taint: [false, false]",
            "<org.hibernate.boot.internal.MetadataImpl: org.hibernate.type.Type getReferencedPropertyType(java.lang.String,java.lang.String)> with actual argTypes: [java.lang.String, java.lang.String] and taint: [false, false, false]",
            "<org.hibernate.mapping.Property: org.hibernate.type.Type getType()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.mapping.Component: org.hibernate.type.Type getType()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.mapping.Component: org.hibernate.type.CompositeType getType()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.mapping.Component: int[] sortProperties(boolean)> with actual argTypes: [int] and taint: [false, false]",
            "<org.hibernate.mapping.Component: boolean isSimpleRecord()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.internal.util.ReflectHelper: java.lang.String[] getRecordComponentNames(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [false, false]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [false, false, false]"
        ],
        [
            "<java.awt.dnd.DragGestureEvent: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.collection.spi.PersistentIdentifierBag: boolean isEmpty()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.collection.spi.AbstractPersistentCollection: boolean readSize()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.collection.spi.AbstractPersistentCollection: java.lang.Boolean lambda$readSize$0()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.persister.collection.AbstractCollectionPersister: int getSize(java.lang.Object,org.hibernate.engine.spi.SharedSessionContractImplementor)> with actual argTypes: [java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor] and taint: [false, false, false]",
            "<org.hibernate.type.EntityType: void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.spi.SharedSessionContractImplementor)> with actual argTypes: [java.sql.PreparedStatement, java.lang.Object, int, org.hibernate.engine.spi.SharedSessionContractImplementor] and taint: [false, false, false, false, false]",
            "<org.hibernate.type.EntityType: org.hibernate.type.Type requireIdentifierOrUniqueKeyType(org.hibernate.engine.spi.Mapping)> with actual argTypes: [org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [false, false]",
            "<org.hibernate.type.EntityType: org.hibernate.type.Type getIdentifierOrUniqueKeyType(org.hibernate.engine.spi.Mapping)> with actual argTypes: [org.hibernate.engine.spi.Mapping] and taint: [false, false]",
            "<org.hibernate.boot.internal.MetadataImpl: org.hibernate.type.Type getReferencedPropertyType(java.lang.String,java.lang.String)> with actual argTypes: [java.lang.String, java.lang.String] and taint: [false, false, false]",
            "<org.hibernate.mapping.Property: org.hibernate.type.Type getType()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.mapping.Collection: org.hibernate.type.Type getType()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.mapping.Collection: org.hibernate.type.CollectionType getCollectionType()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.mapping.Collection: org.hibernate.type.CollectionType resolveCollectionType()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.mapping.Set: org.hibernate.type.CollectionType getDefaultCollectionType()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.mapping.Collection: java.util.Comparator getComparator()> with actual argTypes: [] and taint: [false]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [false, false]"
        ],
        [
            "<java.awt.dnd.DragGestureEvent: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.collection.spi.PersistentIdentifierBag: boolean isEmpty()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.collection.spi.AbstractPersistentCollection: boolean readSize()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.collection.spi.AbstractPersistentCollection: java.lang.Boolean lambda$readSize$0()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.persister.collection.AbstractCollectionPersister: int getSize(java.lang.Object,org.hibernate.engine.spi.SharedSessionContractImplementor)> with actual argTypes: [java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor] and taint: [false, false, false]",
            "<org.hibernate.type.EntityType: void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.spi.SharedSessionContractImplementor)> with actual argTypes: [java.sql.PreparedStatement, java.lang.Object, int, org.hibernate.engine.spi.SharedSessionContractImplementor] and taint: [false, false, false, false, false]",
            "<org.hibernate.type.EntityType: org.hibernate.type.Type requireIdentifierOrUniqueKeyType(org.hibernate.engine.spi.Mapping)> with actual argTypes: [org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [false, false]",
            "<org.hibernate.type.EntityType: org.hibernate.type.Type getIdentifierOrUniqueKeyType(org.hibernate.engine.spi.Mapping)> with actual argTypes: [org.hibernate.engine.spi.Mapping] and taint: [false, false]",
            "<org.hibernate.boot.internal.MetadataImpl: org.hibernate.type.Type getReferencedPropertyType(java.lang.String,java.lang.String)> with actual argTypes: [java.lang.String, java.lang.String] and taint: [false, false, false]",
            "<org.hibernate.mapping.Property: org.hibernate.type.Type getType()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.mapping.Collection: org.hibernate.type.Type getType()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.mapping.Collection: org.hibernate.type.CollectionType getCollectionType()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.mapping.Collection: org.hibernate.type.CollectionType resolveCollectionType()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.mapping.Map: org.hibernate.type.CollectionType getDefaultCollectionType()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.mapping.Collection: java.util.Comparator getComparator()> with actual argTypes: [] and taint: [false]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [false, false]"
        ],
        [
            "<java.awt.dnd.DragGestureEvent: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.collection.spi.PersistentIdentifierBag: boolean isEmpty()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.collection.spi.AbstractPersistentCollection: boolean readSize()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.collection.spi.AbstractPersistentCollection: java.lang.Object withTemporarySessionIfNeeded(org.hibernate.collection.spi.AbstractPersistentCollection$LazyInitializationWork)> with actual argTypes: [org.hibernate.collection.spi.AbstractPersistentCollection$LazyInitializationWork] and taint: [true, true]",
            "<org.hibernate.collection.spi.AbstractPersistentCollection$1ExtraLazyElementByIndexReader: java.lang.Object doWork()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.persister.collection.AbstractCollectionPersister: java.lang.Object getElementByIndex(java.lang.Object,java.lang.Object,org.hibernate.engine.spi.SharedSessionContractImplementor,java.lang.Object)> with actual argTypes: [java.lang.Object, java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object] and taint: [true, true, true, true, true]",
            "<org.hibernate.loader.ast.internal.CollectionElementLoaderByIndex: void <init>(org.hibernate.metamodel.mapping.PluralAttributeMapping,org.hibernate.engine.spi.LoadQueryInfluencers,org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [org.hibernate.metamodel.mapping.PluralAttributeMapping, org.hibernate.engine.spi.LoadQueryInfluencers, org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [false, true, true, true]",
            "<org.hibernate.loader.ast.internal.CollectionElementLoaderByIndex: void <init>(org.hibernate.metamodel.mapping.PluralAttributeMapping,int,org.hibernate.engine.spi.LoadQueryInfluencers,org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [org.hibernate.metamodel.mapping.PluralAttributeMapping, int, org.hibernate.engine.spi.LoadQueryInfluencers, org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [false, true, true, true, true]",
            "<org.hibernate.loader.ast.internal.LoaderSelectBuilder: org.hibernate.sql.ast.tree.select.SelectStatement createSelect(org.hibernate.loader.ast.spi.Loadable,java.util.List,java.util.List,org.hibernate.sql.results.graph.DomainResult,int,org.hibernate.engine.spi.LoadQueryInfluencers,org.hibernate.LockOptions,java.util.function.Consumer,org.hibernate.engine.spi.SessionFactoryImplementor)> with actual argTypes: [org.hibernate.metamodel.mapping.PluralAttributeMapping, java.util.ArrayList, java.util.ArrayList, null, int, org.hibernate.engine.spi.LoadQueryInfluencers, org.hibernate.LockOptions, java.util.function.Consumer, org.hibernate.engine.spi.SessionFactoryImplementor] and taint: [false, true, false, false, false, false, true, false, true, true]",
            "<org.hibernate.loader.ast.internal.LoaderSelectBuilder: org.hibernate.sql.ast.tree.select.SelectStatement generateSelect()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.persister.entity.AbstractEntityPersister: org.hibernate.sql.results.graph.DomainResult createDomainResult(org.hibernate.spi.NavigablePath,org.hibernate.sql.ast.tree.from.TableGroup,java.lang.String,org.hibernate.sql.results.graph.DomainResultCreationState)> with actual argTypes: [org.hibernate.spi.NavigablePath, org.hibernate.sql.ast.tree.from.TableGroup, null, org.hibernate.loader.ast.internal.LoaderSqlAstCreationState] and taint: [false, false, false, false, false]",
            "<org.hibernate.sql.results.graph.entity.AbstractEntityResultGraphNode: void afterInitialize(org.hibernate.sql.results.graph.FetchParent,org.hibernate.sql.results.graph.DomainResultCreationState)> with actual argTypes: [org.hibernate.sql.results.graph.entity.internal.EntityResultImpl, org.hibernate.sql.results.graph.DomainResultCreationState] and taint: [false, false, false]",
            "<org.hibernate.query.results.DomainResultCreationStateImpl: org.hibernate.sql.results.graph.Fetch visitIdentifierFetch(org.hibernate.sql.results.graph.entity.EntityResultGraphNode)> with actual argTypes: [org.hibernate.sql.results.graph.entity.EntityResultGraphNode] and taint: [false, false]",
            "<org.hibernate.query.results.BasicValuedFetchBuilder: org.hibernate.sql.results.graph.Fetch buildFetch(org.hibernate.sql.results.graph.FetchParent,org.hibernate.spi.NavigablePath,org.hibernate.sql.results.jdbc.spi.JdbcValuesMetadata,java.util.function.BiFunction,org.hibernate.sql.results.graph.DomainResultCreationState)> with actual argTypes: [org.hibernate.sql.results.graph.entity.EntityResultGraphNode, org.hibernate.spi.EntityIdentifierNavigablePath, org.hibernate.sql.results.jdbc.spi.JdbcValuesMetadata, java.util.function.BiFunction, org.hibernate.query.results.DomainResultCreationStateImpl] and taint: [false, false, false, false, false, false]",
            "<org.hibernate.query.results.complete.CompleteFetchBuilderBasicPart: org.hibernate.sql.results.graph.basic.BasicFetch buildFetch(org.hibernate.sql.results.graph.FetchParent,org.hibernate.spi.NavigablePath,org.hibernate.sql.results.jdbc.spi.JdbcValuesMetadata,java.util.function.BiFunction,org.hibernate.sql.results.graph.DomainResultCreationState)> with actual argTypes: [org.hibernate.sql.results.graph.FetchParent, org.hibernate.spi.NavigablePath, org.hibernate.sql.results.jdbc.spi.JdbcValuesMetadata, java.util.function.BiFunction, org.hibernate.sql.results.graph.DomainResultCreationState] and taint: [false, false, false, false, false, false]",
            "<org.hibernate.sql.results.jdbc.internal.ResultSetAccess: java.lang.String resolveColumnName(int)> with actual argTypes: [int] and taint: [false, false]",
            "<com.sun.rowset.JdbcRowSetImpl: java.sql.ResultSetMetaData getMetaData()> with actual argTypes: [] and taint: [false]",
            "<com.sun.rowset.JdbcRowSetImpl: java.sql.PreparedStatement prepare()> with actual argTypes: [] and taint: [false]",
            "<com.sun.rowset.JdbcRowSetImpl: java.sql.Connection connect()> with actual argTypes: [] and taint: [false]",
            "<javax.naming.InitialContext: java.lang.Object lookup(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [false, false]",
            "<javax.naming.Context: java.lang.Object lookup(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [false, false]"
        ],
        [
            "<java.net.SocketPermissionCollection: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.collection.spi.PersistentMap: java.lang.Object put(java.lang.Object,java.lang.Object)> with actual argTypes: [java.lang.String, java.net.SocketPermission] and taint: [true, true, true]",
            "<org.hibernate.collection.spi.AbstractPersistentCollection: void initialize(boolean)> with actual argTypes: [int] and taint: [true, false]",
            "<org.hibernate.collection.spi.AbstractPersistentCollection: java.lang.Object lambda$initialize$3(boolean)> with actual argTypes: [boolean] and taint: [false, false]",
            "<org.hibernate.internal.StatelessSessionImpl: void initializeCollection(org.hibernate.collection.spi.PersistentCollection,boolean)> with actual argTypes: [org.hibernate.collection.spi.AbstractPersistentCollection, boolean] and taint: [false, false, false]",
            "<org.hibernate.persister.collection.AbstractCollectionPersister: void initialize(java.lang.Object,org.hibernate.engine.spi.SharedSessionContractImplementor)> with actual argTypes: [java.lang.Object, org.hibernate.internal.StatelessSessionImpl] and taint: [false, false, false]",
            "<org.hibernate.loader.ast.internal.CollectionLoaderNamedQuery: org.hibernate.collection.spi.PersistentCollection load(java.lang.Object,org.hibernate.engine.spi.SharedSessionContractImplementor)> with actual argTypes: [java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor] and taint: [false, false, false]",
            "<org.hibernate.procedure.internal.ProcedureCallImpl: java.util.List getResultList()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.procedure.internal.ProcedureCallImpl: org.hibernate.procedure.ProcedureOutputs outputs()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.procedure.internal.ProcedureCallImpl: org.hibernate.procedure.ProcedureOutputs getOutputs()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.procedure.internal.ProcedureCallImpl: org.hibernate.procedure.internal.ProcedureOutputsImpl buildOutputs()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter$IdGeneratorParameter: void bindParameterValue(java.sql.PreparedStatement,int,org.hibernate.sql.exec.spi.JdbcParameterBindings,org.hibernate.sql.exec.spi.ExecutionContext)> with actual argTypes: [java.sql.CallableStatement, int, org.hibernate.sql.exec.internal.JdbcParameterBindingsImpl, org.hibernate.result.internal.OutputsExecutionContext] and taint: [false, false, false, false, false]",
            "<org.hibernate.id.IdentifierGenerator: java.lang.Object generate(org.hibernate.engine.spi.SharedSessionContractImplementor,java.lang.Object,java.lang.Object,org.hibernate.generator.EventType)> with actual argTypes: [org.hibernate.engine.spi.SharedSessionContractImplementor, null, null, org.hibernate.generator.EventType] and taint: [false, false, false, false, false]",
            "<org.hibernate.id.ForeignGenerator: java.lang.Object generate(org.hibernate.engine.spi.SharedSessionContractImplementor,java.lang.Object)> with actual argTypes: [org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object] and taint: [false, false, false]",
            "<org.hibernate.internal.StatelessSessionImpl: java.lang.Object insert(java.lang.String,java.lang.Object)> with actual argTypes: [java.lang.String, java.lang.Object] and taint: [false, false, false]",
            "<org.hibernate.internal.StatelessSessionImpl: void firePostInsert(java.lang.Object,java.lang.Object,java.lang.Object[],org.hibernate.persister.entity.EntityPersister)> with actual argTypes: [java.lang.Object, java.lang.Object, java.lang.Object[], org.hibernate.persister.entity.EntityPersister] and taint: [false, false, false, false, false]",
            "<org.hibernate.event.internal.PostInsertEventListenerStandardImpl: void onPostInsert(org.hibernate.event.spi.PostInsertEvent)> with actual argTypes: [org.hibernate.event.spi.PostInsertEvent] and taint: [false, false]",
            "<org.hibernate.jpa.event.internal.CallbackRegistryImpl: void postCreate(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [false, false]",
            "<org.hibernate.jpa.event.internal.CallbackRegistryImpl: boolean callback(org.hibernate.jpa.event.spi.Callback[],java.lang.Object)> with actual argTypes: [org.hibernate.jpa.event.spi.Callback[], java.lang.Object] and taint: [false, false, false]",
            "<org.hibernate.jpa.event.internal.ListenerCallback: boolean performCallback(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [false, false]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [false, false, false]"
        ],
        [
            "<java.net.SocketPermissionCollection: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.collection.spi.PersistentMap: java.lang.Object put(java.lang.Object,java.lang.Object)> with actual argTypes: [java.lang.String, java.net.SocketPermission] and taint: [true, true, true]",
            "<org.hibernate.collection.spi.AbstractPersistentCollection: void initialize(boolean)> with actual argTypes: [int] and taint: [true, false]",
            "<org.hibernate.collection.spi.AbstractPersistentCollection: java.lang.Object lambda$initialize$3(boolean)> with actual argTypes: [boolean] and taint: [false, false]",
            "<org.hibernate.internal.StatelessSessionImpl: void initializeCollection(org.hibernate.collection.spi.PersistentCollection,boolean)> with actual argTypes: [org.hibernate.collection.spi.AbstractPersistentCollection, boolean] and taint: [false, false, false]",
            "<org.hibernate.persister.collection.AbstractCollectionPersister: void initialize(java.lang.Object,org.hibernate.engine.spi.SharedSessionContractImplementor)> with actual argTypes: [java.lang.Object, org.hibernate.internal.StatelessSessionImpl] and taint: [false, false, false]",
            "<org.hibernate.loader.ast.internal.CollectionLoaderNamedQuery: org.hibernate.collection.spi.PersistentCollection load(java.lang.Object,org.hibernate.engine.spi.SharedSessionContractImplementor)> with actual argTypes: [java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor] and taint: [false, false, false]",
            "<org.hibernate.procedure.internal.ProcedureCallImpl: java.util.List getResultList()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.procedure.internal.ProcedureCallImpl: org.hibernate.procedure.ProcedureOutputs outputs()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.procedure.internal.ProcedureCallImpl: org.hibernate.procedure.ProcedureOutputs getOutputs()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.procedure.internal.ProcedureCallImpl: org.hibernate.procedure.internal.ProcedureOutputsImpl buildOutputs()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter$IdGeneratorParameter: void bindParameterValue(java.sql.PreparedStatement,int,org.hibernate.sql.exec.spi.JdbcParameterBindings,org.hibernate.sql.exec.spi.ExecutionContext)> with actual argTypes: [java.sql.CallableStatement, int, org.hibernate.sql.exec.internal.JdbcParameterBindingsImpl, org.hibernate.result.internal.OutputsExecutionContext] and taint: [false, false, false, false, false]",
            "<org.hibernate.id.IdentifierGenerator: java.lang.Object generate(org.hibernate.engine.spi.SharedSessionContractImplementor,java.lang.Object,java.lang.Object,org.hibernate.generator.EventType)> with actual argTypes: [org.hibernate.engine.spi.SharedSessionContractImplementor, null, null, org.hibernate.generator.EventType] and taint: [false, false, false, false, false]",
            "<org.hibernate.id.ForeignGenerator: java.lang.Object generate(org.hibernate.engine.spi.SharedSessionContractImplementor,java.lang.Object)> with actual argTypes: [org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object] and taint: [false, false, false]",
            "<org.hibernate.internal.StatelessSessionImpl: java.lang.Object insert(java.lang.String,java.lang.Object)> with actual argTypes: [java.lang.String, java.lang.Object] and taint: [false, false, false]",
            "<org.hibernate.internal.StatelessSessionImpl: void firePostInsert(java.lang.Object,java.lang.Object,java.lang.Object[],org.hibernate.persister.entity.EntityPersister)> with actual argTypes: [java.lang.Object, java.lang.Object, java.lang.Object[], org.hibernate.persister.entity.EntityPersister] and taint: [false, false, false, false, false]",
            "<org.hibernate.event.internal.PostInsertEventListenerStandardImpl: void onPostInsert(org.hibernate.event.spi.PostInsertEvent)> with actual argTypes: [org.hibernate.event.spi.PostInsertEvent] and taint: [false, false]",
            "<org.hibernate.jpa.event.internal.CallbackRegistryImpl: void postCreate(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [false, false]",
            "<org.hibernate.jpa.event.internal.CallbackRegistryImpl: boolean callback(org.hibernate.jpa.event.spi.Callback[],java.lang.Object)> with actual argTypes: [org.hibernate.jpa.event.spi.Callback[], java.lang.Object] and taint: [false, false, false]",
            "<org.hibernate.jpa.event.internal.EmbeddableCallback: boolean performCallback(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [false, false]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [false, false, false]"
        ],
        [
            "<java.net.SocketPermissionCollection: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.hibernate.collection.spi.PersistentMap: java.lang.Object put(java.lang.Object,java.lang.Object)> with actual argTypes: [java.lang.String, java.net.SocketPermission] and taint: [true, true, true]",
            "<org.hibernate.collection.spi.AbstractPersistentCollection: void initialize(boolean)> with actual argTypes: [int] and taint: [true, false]",
            "<org.hibernate.collection.spi.AbstractPersistentCollection: java.lang.Object lambda$initialize$3(boolean)> with actual argTypes: [boolean] and taint: [false, false]",
            "<org.hibernate.internal.StatelessSessionImpl: void initializeCollection(org.hibernate.collection.spi.PersistentCollection,boolean)> with actual argTypes: [org.hibernate.collection.spi.AbstractPersistentCollection, boolean] and taint: [false, false, false]",
            "<org.hibernate.persister.collection.AbstractCollectionPersister: void initialize(java.lang.Object,org.hibernate.engine.spi.SharedSessionContractImplementor)> with actual argTypes: [java.lang.Object, org.hibernate.internal.StatelessSessionImpl] and taint: [false, false, false]",
            "<org.hibernate.loader.ast.internal.CollectionLoaderNamedQuery: org.hibernate.collection.spi.PersistentCollection load(java.lang.Object,org.hibernate.engine.spi.SharedSessionContractImplementor)> with actual argTypes: [java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor] and taint: [false, false, false]",
            "<org.hibernate.procedure.internal.ProcedureCallImpl: java.util.List getResultList()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.procedure.internal.ProcedureCallImpl: org.hibernate.procedure.ProcedureOutputs outputs()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.procedure.internal.ProcedureCallImpl: org.hibernate.procedure.ProcedureOutputs getOutputs()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.procedure.internal.ProcedureCallImpl: org.hibernate.procedure.internal.ProcedureOutputsImpl buildOutputs()> with actual argTypes: [] and taint: [false]",
            "<org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter$IdGeneratorParameter: void bindParameterValue(java.sql.PreparedStatement,int,org.hibernate.sql.exec.spi.JdbcParameterBindings,org.hibernate.sql.exec.spi.ExecutionContext)> with actual argTypes: [java.sql.CallableStatement, int, org.hibernate.sql.exec.internal.JdbcParameterBindingsImpl, org.hibernate.result.internal.OutputsExecutionContext] and taint: [false, false, false, false, false]",
            "<org.hibernate.id.IdentifierGenerator: java.lang.Object generate(org.hibernate.engine.spi.SharedSessionContractImplementor,java.lang.Object,java.lang.Object,org.hibernate.generator.EventType)> with actual argTypes: [org.hibernate.engine.spi.SharedSessionContractImplementor, null, null, org.hibernate.generator.EventType] and taint: [false, false, false, false, false]",
            "<org.hibernate.id.ForeignGenerator: java.lang.Object generate(org.hibernate.engine.spi.SharedSessionContractImplementor,java.lang.Object)> with actual argTypes: [org.hibernate.engine.spi.SharedSessionContractImplementor, java.lang.Object] and taint: [false, false, false]",
            "<org.hibernate.internal.StatelessSessionImpl: java.lang.Object insert(java.lang.String,java.lang.Object)> with actual argTypes: [java.lang.String, java.lang.Object] and taint: [false, false, false]",
            "<org.hibernate.internal.StatelessSessionImpl: void firePostInsert(java.lang.Object,java.lang.Object,java.lang.Object[],org.hibernate.persister.entity.EntityPersister)> with actual argTypes: [java.lang.Object, java.lang.Object, java.lang.Object[], org.hibernate.persister.entity.EntityPersister] and taint: [false, false, false, false, false]",
            "<org.hibernate.event.internal.PostInsertEventListenerStandardImpl: void onPostInsert(org.hibernate.event.spi.PostInsertEvent)> with actual argTypes: [org.hibernate.event.spi.PostInsertEvent] and taint: [false, false]",
            "<org.hibernate.jpa.event.internal.CallbackRegistryImpl: void postCreate(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [false, false]",
            "<org.hibernate.jpa.event.internal.CallbackRegistryImpl: boolean callback(org.hibernate.jpa.event.spi.Callback[],java.lang.Object)> with actual argTypes: [org.hibernate.jpa.event.spi.Callback[], java.lang.Object] and taint: [false, false, false]",
            "<org.hibernate.jpa.event.internal.EntityCallback: boolean performCallback(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [false, false]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [false, false, false]"
        ]
    ]
}