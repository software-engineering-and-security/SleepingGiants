{
    "tabby": [],
    "androChain": [
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.input.MemoryMappedFileInputStream: void close()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.input.MemoryMappedFileInputStream: void cleanBuffer()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.input.ByteBufferCleaner: void clean(java.nio.ByteBuffer)> with actual argTypes: [java.nio.ByteBuffer] and taint: [false, true]",
            "<org.apache.commons.io.input.ByteBufferCleaner$Java8Cleaner: void clean(java.nio.ByteBuffer)> with actual argTypes: [java.nio.ByteBuffer] and taint: [false, true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.nio.ByteBuffer, java.lang.Object[]] and taint: [false, true, false]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.input.MemoryMappedFileInputStream: void close()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.input.MemoryMappedFileInputStream: void cleanBuffer()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.input.ByteBufferCleaner: void clean(java.nio.ByteBuffer)> with actual argTypes: [java.nio.ByteBuffer] and taint: [false, true]",
            "<org.apache.commons.io.input.ByteBufferCleaner$Java8Cleaner: void clean(java.nio.ByteBuffer)> with actual argTypes: [java.nio.ByteBuffer] and taint: [false, true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [false, true, false]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.input.MemoryMappedFileInputStream: void close()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.input.MemoryMappedFileInputStream: void cleanBuffer()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.input.ByteBufferCleaner: void clean(java.nio.ByteBuffer)> with actual argTypes: [java.nio.ByteBuffer] and taint: [false, true]",
            "<org.apache.commons.io.input.ByteBufferCleaner$Java9Cleaner: void clean(java.nio.ByteBuffer)> with actual argTypes: [java.nio.ByteBuffer] and taint: [false, true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [false, false, true]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.file.CountingPathVisitor: java.nio.file.FileVisitResult visitFile(java.lang.Object,java.nio.file.attribute.BasicFileAttributes)> with actual argTypes: [java.lang.Object, java.nio.file.attribute.BasicFileAttributes] and taint: [true, true, true]",
            "<org.apache.commons.io.file.CopyDirectoryVisitor: java.nio.file.FileVisitResult visitFile(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes)> with actual argTypes: [java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes] and taint: [true, true, true]",
            "<org.apache.commons.io.file.CopyDirectoryVisitor: void copy(java.nio.file.Path,java.nio.file.Path)> with actual argTypes: [java.nio.file.Path, java.nio.file.Path] and taint: [true, true, true]",
            "<java.nio.file.Files: java.nio.file.Path copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])> with actual argTypes: [java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption[]] and taint: [false, true, true, true]",
            "<java.nio.file.CopyMoveHelper: void copyToForeignTarget(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])> with actual argTypes: [java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption[]] and taint: [false, true, true, true]",
            "<java.nio.file.Files: long copy(java.io.InputStream,java.nio.file.Path,java.nio.file.CopyOption[])> with actual argTypes: [java.io.InputStream, java.nio.file.Path, java.nio.file.CopyOption[]] and taint: [false, true, true, false]",
            "<java.nio.file.Files: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])> with actual argTypes: [java.nio.file.Path, java.nio.file.OpenOption[]] and taint: [false, true, false]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.filefilter.PathVisitorFileFilter: boolean accept(java.io.File,java.lang.String)> with actual argTypes: [java.io.File, java.lang.String] and taint: [true, true, true]",
            "<org.apache.commons.io.filefilter.PathVisitorFileFilter: java.nio.file.FileVisitResult accept(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes)> with actual argTypes: [java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes] and taint: [true, true, true]",
            "<org.apache.commons.io.filefilter.AbstractFileFilter: java.nio.file.FileVisitResult get(org.apache.commons.io.function.IOSupplier)> with actual argTypes: [org.apache.commons.io.function.IOSupplier] and taint: [true, true]",
            "<org.apache.commons.io.output.WriterOutputStream$Builder: java.lang.Object get()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.output.WriterOutputStream$Builder: org.apache.commons.io.output.WriterOutputStream get()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.build.AbstractStreamBuilder: java.io.Writer getWriter()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.build.AbstractOrigin: java.io.Writer getWriter(java.nio.charset.Charset,java.nio.file.OpenOption[])> with actual argTypes: [java.nio.charset.Charset, java.nio.file.OpenOption[]] and taint: [true, true, true]",
            "<java.nio.file.Files: java.io.BufferedWriter newBufferedWriter(java.nio.file.Path,java.nio.charset.Charset,java.nio.file.OpenOption[])> with actual argTypes: [java.nio.file.Path, java.nio.charset.Charset, java.nio.file.OpenOption[]] and taint: [false, true, true, true]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.filefilter.PathVisitorFileFilter: boolean accept(java.io.File,java.lang.String)> with actual argTypes: [java.io.File, java.lang.String] and taint: [true, true, true]",
            "<org.apache.commons.io.filefilter.PathVisitorFileFilter: java.nio.file.FileVisitResult accept(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes)> with actual argTypes: [java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes] and taint: [true, true, true]",
            "<org.apache.commons.io.filefilter.AbstractFileFilter: java.nio.file.FileVisitResult get(org.apache.commons.io.function.IOSupplier)> with actual argTypes: [org.apache.commons.io.function.IOSupplier] and taint: [true, true]",
            "<org.apache.commons.io.output.ChunkedOutputStream$Builder: java.lang.Object get()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.output.ChunkedOutputStream$Builder: org.apache.commons.io.output.ChunkedOutputStream get()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.build.AbstractStreamBuilder: java.io.OutputStream getOutputStream()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.build.AbstractOrigin: java.io.OutputStream getOutputStream(java.nio.file.OpenOption[])> with actual argTypes: [java.nio.file.OpenOption[]] and taint: [true, true]",
            "<java.nio.file.Files: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])> with actual argTypes: [java.nio.file.Path, java.nio.file.OpenOption[]] and taint: [false, true, true]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.filefilter.PathVisitorFileFilter: boolean accept(java.io.File,java.lang.String)> with actual argTypes: [java.io.File, java.lang.String] and taint: [true, true, true]",
            "<org.apache.commons.io.filefilter.PathVisitorFileFilter: java.nio.file.FileVisitResult accept(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes)> with actual argTypes: [java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes] and taint: [true, true, true]",
            "<org.apache.commons.io.filefilter.AbstractFileFilter: java.nio.file.FileVisitResult get(org.apache.commons.io.function.IOSupplier)> with actual argTypes: [org.apache.commons.io.function.IOSupplier] and taint: [true, true]",
            "<org.apache.commons.io.input.ReadAheadInputStream$Builder: java.lang.Object get()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.input.ReadAheadInputStream$Builder: org.apache.commons.io.input.ReadAheadInputStream get()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.build.AbstractStreamBuilder: java.io.InputStream getInputStream()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.build.AbstractOrigin$URIOrigin: java.io.InputStream getInputStream(java.nio.file.OpenOption[])> with actual argTypes: [java.nio.file.OpenOption[]] and taint: [true, true]",
            "<java.net.URL: java.io.InputStream openStream()> with actual argTypes: [] and taint: [true]"
        ],
        [
            "<javax.management.ImmutableDescriptor: java.lang.Object readResolve()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.lang.Object,java.lang.Object)> with actual argTypes: [java.lang.String, java.lang.String] and taint: [false, true, true]",
            "<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)> with actual argTypes: [java.io.File, java.io.File] and taint: [false, true, true]",
            "<org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)> with actual argTypes: [java.io.File] and taint: [false, true]",
            "<org.apache.commons.io.function.Uncheck: java.lang.Object get(org.apache.commons.io.function.IOSupplier)> with actual argTypes: [org.apache.commons.io.function.IOSupplier] and taint: [false, true]",
            "<org.apache.commons.io.output.WriterOutputStream$Builder: java.lang.Object get()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.output.WriterOutputStream$Builder: org.apache.commons.io.output.WriterOutputStream get()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.build.AbstractStreamBuilder: java.io.Writer getWriter()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.build.AbstractOrigin: java.io.Writer getWriter(java.nio.charset.Charset,java.nio.file.OpenOption[])> with actual argTypes: [java.nio.charset.Charset, java.nio.file.OpenOption[]] and taint: [true, true, true]",
            "<java.nio.file.Files: java.io.BufferedWriter newBufferedWriter(java.nio.file.Path,java.nio.charset.Charset,java.nio.file.OpenOption[])> with actual argTypes: [java.nio.file.Path, java.nio.charset.Charset, java.nio.file.OpenOption[]] and taint: [false, true, true, true]"
        ],
        [
            "<javax.management.ImmutableDescriptor: java.lang.Object readResolve()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.lang.Object,java.lang.Object)> with actual argTypes: [java.lang.String, java.lang.String] and taint: [false, true, true]",
            "<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)> with actual argTypes: [java.io.File, java.io.File] and taint: [false, true, true]",
            "<org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)> with actual argTypes: [java.io.File] and taint: [false, true]",
            "<org.apache.commons.io.function.Uncheck: java.lang.Object get(org.apache.commons.io.function.IOSupplier)> with actual argTypes: [org.apache.commons.io.function.IOSupplier] and taint: [false, true]",
            "<org.apache.commons.io.output.ChunkedOutputStream$Builder: java.lang.Object get()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.output.ChunkedOutputStream$Builder: org.apache.commons.io.output.ChunkedOutputStream get()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.build.AbstractStreamBuilder: java.io.OutputStream getOutputStream()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.build.AbstractOrigin: java.io.OutputStream getOutputStream(java.nio.file.OpenOption[])> with actual argTypes: [java.nio.file.OpenOption[]] and taint: [true, true]",
            "<java.nio.file.Files: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])> with actual argTypes: [java.nio.file.Path, java.nio.file.OpenOption[]] and taint: [false, true, true]"
        ],
        [
            "<javax.management.ImmutableDescriptor: java.lang.Object readResolve()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.lang.Object,java.lang.Object)> with actual argTypes: [java.lang.String, java.lang.String] and taint: [false, true, true]",
            "<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)> with actual argTypes: [java.io.File, java.io.File] and taint: [false, true, true]",
            "<org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)> with actual argTypes: [java.io.File] and taint: [false, true]",
            "<org.apache.commons.io.function.Uncheck: java.lang.Object get(org.apache.commons.io.function.IOSupplier)> with actual argTypes: [org.apache.commons.io.function.IOSupplier] and taint: [false, true]",
            "<org.apache.commons.io.input.ReadAheadInputStream$Builder: java.lang.Object get()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.input.ReadAheadInputStream$Builder: org.apache.commons.io.input.ReadAheadInputStream get()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.build.AbstractStreamBuilder: java.io.InputStream getInputStream()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.build.AbstractOrigin$URIOrigin: java.io.InputStream getInputStream(java.nio.file.OpenOption[])> with actual argTypes: [java.nio.file.OpenOption[]] and taint: [true, true]",
            "<java.net.URL: java.io.InputStream openStream()> with actual argTypes: [] and taint: [true]"
        ],
        [
            "<javax.management.ImmutableDescriptor: java.lang.Object readResolve()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.lang.Object,java.lang.Object)> with actual argTypes: [java.lang.String, java.lang.String] and taint: [false, true, true]",
            "<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)> with actual argTypes: [java.io.File, java.io.File] and taint: [false, true, true]",
            "<org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)> with actual argTypes: [java.io.File] and taint: [false, true]",
            "<org.apache.commons.io.function.Uncheck: java.lang.Object get(org.apache.commons.io.function.IOSupplier)> with actual argTypes: [org.apache.commons.io.function.IOSupplier] and taint: [false, true]",
            "<org.apache.commons.io.output.FileWriterWithEncoding$Builder: java.lang.Object get()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.output.FileWriterWithEncoding$Builder: org.apache.commons.io.output.FileWriterWithEncoding get()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.OutputStreamWriter access$000(java.io.File,java.lang.Object,boolean)> with actual argTypes: [java.io.File, java.lang.Object, boolean] and taint: [false, true, true, true]",
            "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.OutputStreamWriter initWriter(java.io.File,java.lang.Object,boolean)> with actual argTypes: [java.io.File, java.lang.Object, boolean] and taint: [false, true, true, true]",
            "<org.apache.commons.io.FileUtils: boolean deleteQuietly(java.io.File)> with actual argTypes: [java.io.File] and taint: [false, false]",
            "<java.io.File: boolean delete()> with actual argTypes: [] and taint: [false]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<java.time.chrono.ChronoLocalDateImpl: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<java.time.chrono.HijrahDate: long toEpochDay()> with actual argTypes: [] and taint: [true]",
            "<java.time.chrono.HijrahChronology: long getEpochDay(int,int,int)> with actual argTypes: [int, int, int] and taint: [true, true, true, true]",
            "<java.time.chrono.HijrahChronology: void checkCalendarInit()> with actual argTypes: [] and taint: [true]",
            "<java.time.chrono.HijrahChronology: void loadCalendarData()> with actual argTypes: [] and taint: [true]",
            "<java.time.chrono.HijrahChronology: java.util.Properties readConfigProperties(java.lang.String,java.lang.String)> with actual argTypes: [java.lang.String, java.lang.String] and taint: [false, true, true]",
            "<org.apache.commons.io.input.MemoryMappedFileInputStream: void close()> with actual argTypes: [] and taint: [false]",
            "<org.apache.commons.io.input.MemoryMappedFileInputStream: void cleanBuffer()> with actual argTypes: [] and taint: [false]",
            "<org.apache.commons.io.input.ByteBufferCleaner: void clean(java.nio.ByteBuffer)> with actual argTypes: [java.nio.ByteBuffer] and taint: [false, false]",
            "<org.apache.commons.io.input.ByteBufferCleaner$Java8Cleaner: void clean(java.nio.ByteBuffer)> with actual argTypes: [java.nio.ByteBuffer] and taint: [false, false]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.nio.ByteBuffer, java.lang.Object[]] and taint: [false, false, false]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<java.time.chrono.ChronoLocalDateImpl: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<java.time.chrono.HijrahDate: long toEpochDay()> with actual argTypes: [] and taint: [true]",
            "<java.time.chrono.HijrahChronology: long getEpochDay(int,int,int)> with actual argTypes: [int, int, int] and taint: [true, true, true, true]",
            "<java.time.chrono.HijrahChronology: void checkCalendarInit()> with actual argTypes: [] and taint: [true]",
            "<java.time.chrono.HijrahChronology: void loadCalendarData()> with actual argTypes: [] and taint: [true]",
            "<java.time.chrono.HijrahChronology: java.util.Properties readConfigProperties(java.lang.String,java.lang.String)> with actual argTypes: [java.lang.String, java.lang.String] and taint: [false, true, true]",
            "<org.apache.commons.io.input.MemoryMappedFileInputStream: void close()> with actual argTypes: [] and taint: [false]",
            "<org.apache.commons.io.input.MemoryMappedFileInputStream: void cleanBuffer()> with actual argTypes: [] and taint: [false]",
            "<org.apache.commons.io.input.ByteBufferCleaner: void clean(java.nio.ByteBuffer)> with actual argTypes: [java.nio.ByteBuffer] and taint: [false, false]",
            "<org.apache.commons.io.input.ByteBufferCleaner$Java8Cleaner: void clean(java.nio.ByteBuffer)> with actual argTypes: [java.nio.ByteBuffer] and taint: [false, false]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [false, false, false]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<java.time.chrono.ChronoLocalDateImpl: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<java.time.chrono.HijrahDate: long toEpochDay()> with actual argTypes: [] and taint: [true]",
            "<java.time.chrono.HijrahChronology: long getEpochDay(int,int,int)> with actual argTypes: [int, int, int] and taint: [true, true, true, true]",
            "<java.time.chrono.HijrahChronology: void checkCalendarInit()> with actual argTypes: [] and taint: [true]",
            "<java.time.chrono.HijrahChronology: void loadCalendarData()> with actual argTypes: [] and taint: [true]",
            "<java.time.chrono.HijrahChronology: java.util.Properties readConfigProperties(java.lang.String,java.lang.String)> with actual argTypes: [java.lang.String, java.lang.String] and taint: [false, true, true]",
            "<org.apache.commons.io.input.MemoryMappedFileInputStream: void close()> with actual argTypes: [] and taint: [false]",
            "<org.apache.commons.io.input.MemoryMappedFileInputStream: void cleanBuffer()> with actual argTypes: [] and taint: [false]",
            "<org.apache.commons.io.input.ByteBufferCleaner: void clean(java.nio.ByteBuffer)> with actual argTypes: [java.nio.ByteBuffer] and taint: [false, false]",
            "<org.apache.commons.io.input.ByteBufferCleaner$Java9Cleaner: void clean(java.nio.ByteBuffer)> with actual argTypes: [java.nio.ByteBuffer] and taint: [false, false]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [false, false, false]"
        ],
        [
            "<javax.management.ImmutableDescriptor: java.lang.Object readResolve()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.lang.Object,java.lang.Object)> with actual argTypes: [java.lang.String, java.lang.String] and taint: [false, true, true]",
            "<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)> with actual argTypes: [java.io.File, java.io.File] and taint: [false, true, true]",
            "<org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)> with actual argTypes: [java.io.File] and taint: [false, true]",
            "<org.apache.commons.io.function.Uncheck: java.lang.Object get(org.apache.commons.io.function.IOSupplier)> with actual argTypes: [org.apache.commons.io.function.IOSupplier] and taint: [false, true]",
            "<org.apache.commons.io.output.FileWriterWithEncoding$Builder: java.lang.Object get()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.output.FileWriterWithEncoding$Builder: org.apache.commons.io.output.FileWriterWithEncoding get()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.OutputStreamWriter access$000(java.io.File,java.lang.Object,boolean)> with actual argTypes: [java.io.File, java.lang.Object, boolean] and taint: [false, true, true, true]",
            "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.OutputStreamWriter initWriter(java.io.File,java.lang.Object,boolean)> with actual argTypes: [java.io.File, java.lang.Object, boolean] and taint: [false, true, true, true]",
            "<org.apache.commons.io.FileUtils: java.io.OutputStream newOutputStream(java.io.File,boolean)> with actual argTypes: [java.io.File, boolean] and taint: [false, true, true]",
            "<org.apache.commons.io.file.PathUtils: java.io.OutputStream newOutputStream(java.nio.file.Path,boolean)> with actual argTypes: [java.nio.file.Path, boolean] and taint: [false, true, true]",
            "<org.apache.commons.io.file.PathUtils: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.LinkOption[],java.nio.file.OpenOption[])> with actual argTypes: [java.nio.file.Path, java.nio.file.LinkOption[], java.nio.file.OpenOption[]] and taint: [false, true, false, false]",
            "<java.nio.file.Files: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])> with actual argTypes: [java.nio.file.Path, java.nio.file.OpenOption[]] and taint: [false, true, false]"
        ],
        [
            "<javax.management.ImmutableDescriptor: java.lang.Object readResolve()> with actual argTypes: [] and taint: [true]",
            "<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.lang.Object,java.lang.Object)> with actual argTypes: [java.lang.String, java.lang.String] and taint: [false, true, true]",
            "<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)> with actual argTypes: [java.io.File, java.io.File] and taint: [false, true, true]",
            "<org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)> with actual argTypes: [java.io.File] and taint: [false, true]",
            "<org.apache.commons.io.FileUtils: java.lang.Long lambda$sizeOfDirectory$17(java.io.File)> with actual argTypes: [java.io.File] and taint: [false, false]",
            "<org.apache.commons.io.file.PathUtils: long sizeOfDirectory(java.nio.file.Path)> with actual argTypes: [java.nio.file.Path] and taint: [false, false]",
            "<org.apache.commons.io.file.PathUtils: org.apache.commons.io.file.Counters$PathCounters countDirectory(java.nio.file.Path)> with actual argTypes: [java.nio.file.Path] and taint: [false, false]",
            "<org.apache.commons.io.file.PathUtils: java.nio.file.FileVisitor visitFileTree(java.nio.file.FileVisitor,java.nio.file.Path)> with actual argTypes: [org.apache.commons.io.file.CountingPathVisitor, java.nio.file.Path] and taint: [false, false, false]",
            "<java.nio.file.Files: java.nio.file.Path walkFileTree(java.nio.file.Path,java.nio.file.FileVisitor)> with actual argTypes: [java.nio.file.Path, java.nio.file.FileVisitor] and taint: [false, false, false]",
            "<java.nio.file.Files: java.nio.file.Path walkFileTree(java.nio.file.Path,java.util.Set,int,java.nio.file.FileVisitor)> with actual argTypes: [java.nio.file.Path, java.util.EnumSet, int, java.nio.file.FileVisitor] and taint: [false, false, false, false, false]",
            "<org.apache.commons.io.file.CountingPathVisitor: java.nio.file.FileVisitResult visitFile(java.lang.Object,java.nio.file.attribute.BasicFileAttributes)> with actual argTypes: [java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes] and taint: [false, false, false]",
            "<org.apache.commons.io.file.CopyDirectoryVisitor: java.nio.file.FileVisitResult visitFile(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes)> with actual argTypes: [java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes] and taint: [false, false, false]",
            "<org.apache.commons.io.file.CopyDirectoryVisitor: void copy(java.nio.file.Path,java.nio.file.Path)> with actual argTypes: [java.nio.file.Path, java.nio.file.Path] and taint: [false, false, false]",
            "<java.nio.file.Files: java.nio.file.Path copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])> with actual argTypes: [java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption[]] and taint: [false, false, false, false]",
            "<java.nio.file.CopyMoveHelper: void copyToForeignTarget(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])> with actual argTypes: [java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption[]] and taint: [false, false, false, false]",
            "<java.nio.file.Files: long copy(java.io.InputStream,java.nio.file.Path,java.nio.file.CopyOption[])> with actual argTypes: [java.io.InputStream, java.nio.file.Path, java.nio.file.CopyOption[]] and taint: [false, false, false, false]",
            "<java.nio.file.Files: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])> with actual argTypes: [java.nio.file.Path, java.nio.file.OpenOption[]] and taint: [false, false, false]"
        ]
    ]
}