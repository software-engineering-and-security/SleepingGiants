{
    "tabby": [
        [
            "java.util.logging.LogRecord#readObject",
            "-[CALL]-> java.util.ResourceBundle#getBundle",
            "-[CALL]-> java.util.ResourceBundle#getBundleImpl",
            "-[CALL]-> java.util.ResourceBundle#getLoader",
            "-[CALL]-> java.security.PrivilegedAction#run -[ALIAS]-> org.hibernate.validator.internal.util.privilegedactions.GetAnnotationAttribute#run",
            "-[CALL]-> java.lang.reflect.Method#invoke"
        ]
    ],
    "androChain": [
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.hibernate.validator.internal.util.annotation.AnnotationProxy: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.reflect.Method, java.lang.Object[]] and taint: [true, true, true, true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [org.hibernate.validator.internal.util.annotation.AnnotationProxy, java.lang.Object[]] and taint: [true, true, true]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<com.sun.jersey.json.impl.writer.Stax2JacksonWriter: void writeEndElement()> with actual argTypes: [] and taint: [true]",
            "<com.sun.jersey.json.impl.writer.Stax2JacksonWriter: void cleanlyEndObject(com.sun.jersey.json.impl.writer.Stax2JacksonWriter$ProcessingInfo)> with actual argTypes: [com.sun.jersey.json.impl.writer.Stax2JacksonWriter$ProcessingInfo] and taint: [true, true]",
            "<com.sun.jersey.json.impl.JaxbJdkXmlStructure: boolean isArrayCollection()> with actual argTypes: [] and taint: [true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [true, true, false]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<com.sun.jersey.json.impl.writer.Stax2JacksonWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> with actual argTypes: [java.lang.String, java.lang.String, java.lang.String, java.lang.String] and taint: [true, true, true, true, true]",
            "<com.sun.jersey.json.impl.writer.Stax2JacksonWriter: void pushPropInfo(java.lang.String,java.lang.String,java.lang.String)> with actual argTypes: [java.lang.String, java.lang.String, java.lang.String] and taint: [true, true, true, true]",
            "<com.sun.jersey.json.impl.JaxbJdkXmlStructure: java.lang.reflect.Type getEntityType(javax.xml.namespace.QName,boolean)> with actual argTypes: [javax.xml.namespace.QName, boolean] and taint: [true, false, true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [true, true, false]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<com.sun.jersey.json.impl.writer.Stax2JacksonWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> with actual argTypes: [java.lang.String, java.lang.String, java.lang.String, java.lang.String] and taint: [true, true, true, true, true]",
            "<com.sun.jersey.json.impl.writer.Stax2JacksonWriter: void pushPropInfo(java.lang.String,java.lang.String,java.lang.String)> with actual argTypes: [java.lang.String, java.lang.String, java.lang.String] and taint: [true, true, true, true]",
            "<com.sun.jersey.json.impl.JaxbJdkXmlStructure: java.lang.reflect.Type getIndividualType()> with actual argTypes: [] and taint: [true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [true, true, false]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<com.sun.jersey.json.impl.writer.Stax2JacksonWriter: void writeEndElement()> with actual argTypes: [] and taint: [true]",
            "<com.sun.jersey.json.impl.writer.Stax2JacksonWriter: void cleanlyEndObject(com.sun.jersey.json.impl.writer.Stax2JacksonWriter$ProcessingInfo)> with actual argTypes: [com.sun.jersey.json.impl.writer.Stax2JacksonWriter$ProcessingInfo] and taint: [true, true]",
            "<com.sun.jersey.json.impl.JaxbJdkXmlStructure: boolean isArrayCollection()> with actual argTypes: [] and taint: [true]",
            "<com.sun.jersey.json.impl.JaxbJdkXmlStructure: java.lang.Object getCurrentElementRuntimePropertyInfo()> with actual argTypes: [] and taint: [true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [null, java.lang.Object[]] and taint: [true, false, false]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<com.sun.jersey.json.impl.writer.Stax2JacksonWriter: void writeEndElement()> with actual argTypes: [] and taint: [true]",
            "<com.sun.jersey.json.impl.writer.Stax2JacksonWriter: void cleanlyEndObject(com.sun.jersey.json.impl.writer.Stax2JacksonWriter$ProcessingInfo)> with actual argTypes: [com.sun.jersey.json.impl.writer.Stax2JacksonWriter$ProcessingInfo] and taint: [true, true]",
            "<com.sun.jersey.json.impl.JaxbJdkXmlStructure: boolean isArrayCollection()> with actual argTypes: [] and taint: [true]",
            "<com.sun.jersey.json.impl.JaxbJdkXmlStructure: java.lang.Object getCurrentElementRuntimePropertyInfo()> with actual argTypes: [] and taint: [true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [true, true, false]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<com.sun.jersey.json.impl.writer.Stax2JacksonWriter: void writeEndElement()> with actual argTypes: [] and taint: [true]",
            "<com.sun.jersey.json.impl.writer.Stax2JacksonWriter: void cleanlyEndObject(com.sun.jersey.json.impl.writer.Stax2JacksonWriter$ProcessingInfo)> with actual argTypes: [com.sun.jersey.json.impl.writer.Stax2JacksonWriter$ProcessingInfo] and taint: [true, true]",
            "<com.sun.jersey.json.impl.JaxbJdkXmlStructure: boolean isArrayCollection()> with actual argTypes: [] and taint: [true]",
            "<com.sun.jersey.json.impl.JaxbJdkXmlStructure: boolean isWildcardElement(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [true, true, false]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<com.sun.jersey.json.impl.writer.Stax2JacksonWriter: void writeEndElement()> with actual argTypes: [] and taint: [true]",
            "<com.sun.jersey.json.impl.writer.Stax2JacksonWriter: void cleanlyEndObject(com.sun.jersey.json.impl.writer.Stax2JacksonWriter$ProcessingInfo)> with actual argTypes: [com.sun.jersey.json.impl.writer.Stax2JacksonWriter$ProcessingInfo] and taint: [true, true]",
            "<com.sun.jersey.json.impl.JaxbJdkXmlStructure: boolean hasSubElements()> with actual argTypes: [] and taint: [true]",
            "<com.sun.jersey.json.impl.JaxbJdkXmlStructure: java.util.Collection getExpectedElements()> with actual argTypes: [] and taint: [true]",
            "<com.sun.jersey.json.impl.JaxbJdkXmlStructure: java.util.Collection getExpectedEntities(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [null, java.lang.Object[]] and taint: [true, false, false]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<com.sun.jersey.json.impl.writer.Stax2JacksonWriter: void writeEndElement()> with actual argTypes: [] and taint: [true]",
            "<com.sun.jersey.json.impl.writer.Stax2JacksonWriter: void cleanlyEndObject(com.sun.jersey.json.impl.writer.Stax2JacksonWriter$ProcessingInfo)> with actual argTypes: [com.sun.jersey.json.impl.writer.Stax2JacksonWriter$ProcessingInfo] and taint: [true, true]",
            "<com.sun.jersey.json.impl.JaxbJdkXmlStructure: boolean hasSubElements()> with actual argTypes: [] and taint: [true]",
            "<com.sun.jersey.json.impl.JaxbJdkXmlStructure: java.util.Collection getExpectedElements()> with actual argTypes: [] and taint: [true]",
            "<com.sun.jersey.json.impl.JaxbJdkXmlStructure: java.util.Collection getExpectedEntities(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [true, true, false]"
        ],
        [
            "<java.security.SignedObject: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<com.sun.jersey.server.impl.application.WebApplicationImpl: java.lang.Object clone()> with actual argTypes: [] and taint: [true]",
            "<com.sun.jersey.server.impl.application.WebApplicationImpl: com.sun.jersey.spi.container.WebApplication clone()> with actual argTypes: [] and taint: [true]",
            "<com.sun.jersey.server.impl.application.WebApplicationImpl: void initiate(com.sun.jersey.api.core.ResourceConfig,com.sun.jersey.core.spi.component.ioc.IoCComponentProviderFactory)> with actual argTypes: [com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.core.spi.component.ioc.IoCComponentProviderFactory] and taint: [false, true, true]",
            "<com.sun.jersey.spi.inject.Errors: java.lang.Object processWithErrors(com.sun.jersey.spi.inject.Errors$Closure)> with actual argTypes: [com.sun.jersey.server.impl.application.WebApplicationImpl$13] and taint: [false, false]",
            "<com.sun.jersey.server.impl.application.WebApplicationImpl$13: java.lang.Object f()> with actual argTypes: [] and taint: [false]",
            "<com.sun.jersey.server.impl.application.WebApplicationImpl$13: java.lang.Void f()> with actual argTypes: [] and taint: [false]",
            "<com.sun.jersey.server.impl.application.WebApplicationImpl: void access$700(com.sun.jersey.server.impl.application.WebApplicationImpl,com.sun.jersey.api.core.ResourceConfig,com.sun.jersey.core.spi.component.ioc.IoCComponentProviderFactory)> with actual argTypes: [com.sun.jersey.server.impl.application.WebApplicationImpl, com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.core.spi.component.ioc.IoCComponentProviderFactory] and taint: [false, false, false, false]",
            "<com.sun.jersey.server.impl.application.WebApplicationImpl: void _initiate(com.sun.jersey.api.core.ResourceConfig,com.sun.jersey.core.spi.component.ioc.IoCComponentProviderFactory)> with actual argTypes: [com.sun.jersey.api.core.ResourceConfig, com.sun.jersey.core.spi.component.ioc.IoCComponentProviderFactory] and taint: [false, false, false]",
            "<com.sun.jersey.server.impl.application.WebApplicationImpl: void createAbstractResourceModelStructures()> with actual argTypes: [] and taint: [false]",
            "<com.sun.jersey.server.impl.application.WebApplicationImpl: com.sun.jersey.api.model.AbstractResource getAbstractResource(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [false, false]",
            "<com.sun.jersey.server.impl.modelapi.annotation.IntrospectionModeller: com.sun.jersey.api.model.AbstractResource createResource(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [false, false]",
            "<com.sun.jersey.server.impl.modelapi.annotation.IntrospectionModeller: void workOutFieldsList(com.sun.jersey.api.model.AbstractResource,boolean)> with actual argTypes: [com.sun.jersey.api.model.AbstractResource, boolean] and taint: [false, false, false]",
            "<com.sun.jersey.server.impl.modelapi.annotation.IntrospectionModeller: com.sun.jersey.api.model.Parameter createParameter(java.lang.Class,java.lang.Class,boolean,java.lang.Class,java.lang.reflect.Type,java.lang.annotation.Annotation[])> with actual argTypes: [java.lang.Class, java.lang.Class, boolean, java.lang.Class, java.lang.reflect.Type, java.lang.annotation.Annotation[]] and taint: [false, false, false, false, false, false, false]",
            "<com.sun.jersey.server.impl.modelapi.annotation.IntrospectionModeller: java.lang.String getValue(java.lang.annotation.Annotation)> with actual argTypes: [java.lang.annotation.Annotation] and taint: [false, false]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.annotation.Annotation, java.lang.Object[]] and taint: [false, false, false]"
        ],
        [
            "<javax.swing.text.StyleContext$NamedStyle: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<javax.swing.text.StyleContext: void readAttributeSet(java.io.ObjectInputStream,javax.swing.text.MutableAttributeSet)> with actual argTypes: [java.io.ObjectInputStream, javax.swing.text.StyleContext$NamedStyle] and taint: [false, true, true]",
            "<javax.swing.text.StyleContext$NamedStyle: void addAttribute(java.lang.Object,java.lang.Object)> with actual argTypes: [java.lang.Object, java.lang.Object] and taint: [true, true, true]",
            "<javax.swing.text.StyleContext$NamedStyle: void fireStateChanged()> with actual argTypes: [] and taint: [true]",
            "<javax.swing.JTabbedPane$ModelListener: void stateChanged(javax.swing.event.ChangeEvent)> with actual argTypes: [javax.swing.event.ChangeEvent] and taint: [true, true]",
            "<javax.swing.JTabbedPane: void fireStateChanged()> with actual argTypes: [] and taint: [true]",
            "<sun.tools.jconsole.SheetDialog$SheetOptionPane: void setVisible(boolean)> with actual argTypes: [int] and taint: [true, false]",
            "<sun.tools.jconsole.SheetDialog$SlideAndFadeGlassPane: void show(sun.tools.jconsole.SheetDialog$SheetOptionPane)> with actual argTypes: [sun.tools.jconsole.SheetDialog$SheetOptionPane] and taint: [true, true]",
            "<java.awt.Container: void removeAll()> with actual argTypes: [] and taint: [true]",
            "<java.awt.Component: void dispatchEvent(java.awt.AWTEvent)> with actual argTypes: [java.awt.event.ContainerEvent] and taint: [true, false]",
            "<java.awt.Component: void dispatchEventImpl(java.awt.AWTEvent)> with actual argTypes: [java.awt.AWTEvent] and taint: [true, false]",
            "<java.awt.Component: void processEvent(java.awt.AWTEvent)> with actual argTypes: [java.awt.AWTEvent] and taint: [true, false]",
            "<java.awt.Component: void processMouseEvent(java.awt.event.MouseEvent)> with actual argTypes: [java.awt.event.MouseEvent] and taint: [true, false]",
            "<javax.swing.text.DefaultCaret: void mouseClicked(java.awt.event.MouseEvent)> with actual argTypes: [java.awt.event.MouseEvent] and taint: [true, false]",
            "<javax.swing.plaf.basic.BasicTextUI$TextTransferHandler: boolean importData(javax.swing.JComponent,java.awt.datatransfer.Transferable)> with actual argTypes: [javax.swing.text.JTextComponent, java.awt.datatransfer.Transferable] and taint: [false, false, false]",
            "<javax.swing.plaf.basic.BasicTextUI$TextTransferHandler: void handleReaderImport(java.io.Reader,javax.swing.text.JTextComponent,boolean)> with actual argTypes: [java.io.Reader, javax.swing.text.JTextComponent, boolean] and taint: [false, false, false, false]",
            "<org.codehaus.jackson.io.UTF32Reader: int read(char[],int,int)> with actual argTypes: [char[], int, int] and taint: [false, false, false, false]",
            "<org.codehaus.jackson.io.UTF32Reader: boolean loadMore(int)> with actual argTypes: [int] and taint: [false, false]",
            "<com.sun.jersey.json.impl.FilteringInputStream: int read(byte[],int,int)> with actual argTypes: [byte[], int, int] and taint: [false, false, false, false]",
            "<com.sun.jersey.json.impl.FilteringInputStream: void getNextBytesIfNothingAvailable()> with actual argTypes: [] and taint: [false]",
            "<com.sun.jersey.json.impl.JsonRootEatingInputStreamFilter: byte[] nextBytes()> with actual argTypes: [] and taint: [false]",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void copyCurrentEvent(org.codehaus.jackson.JsonParser)> with actual argTypes: [org.codehaus.jackson.JsonParser] and taint: [false, false]",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void writeObject(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [false, false]",
            "<org.codehaus.jackson.map.ObjectMapper: void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)> with actual argTypes: [org.codehaus.jackson.impl.JsonGeneratorBase, java.lang.Object] and taint: [false, false, false]",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory)> with actual argTypes: [org.codehaus.jackson.map.SerializationConfig, org.codehaus.jackson.JsonGenerator, java.lang.Object, org.codehaus.jackson.map.SerializerFactory] and taint: [false, false, false, false, false]",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: void _serializeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)> with actual argTypes: [org.codehaus.jackson.JsonGenerator, java.lang.Object] and taint: [false, false, false]",
            "<org.codehaus.jackson.map.ser.std.JsonValueSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)> with actual argTypes: [java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.ser.StdSerializerProvider] and taint: [false, false, false, false]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [false, false, false]"
        ],
        [
            "<javax.swing.text.StyleContext$NamedStyle: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<javax.swing.text.StyleContext: void readAttributeSet(java.io.ObjectInputStream,javax.swing.text.MutableAttributeSet)> with actual argTypes: [java.io.ObjectInputStream, javax.swing.text.StyleContext$NamedStyle] and taint: [false, true, true]",
            "<javax.swing.text.StyleContext$NamedStyle: void addAttribute(java.lang.Object,java.lang.Object)> with actual argTypes: [java.lang.Object, java.lang.Object] and taint: [true, true, true]",
            "<javax.swing.text.StyleContext$NamedStyle: void fireStateChanged()> with actual argTypes: [] and taint: [true]",
            "<javax.swing.JTabbedPane$ModelListener: void stateChanged(javax.swing.event.ChangeEvent)> with actual argTypes: [javax.swing.event.ChangeEvent] and taint: [true, true]",
            "<javax.swing.JTabbedPane: void fireStateChanged()> with actual argTypes: [] and taint: [true]",
            "<sun.tools.jconsole.SheetDialog$SheetOptionPane: void setVisible(boolean)> with actual argTypes: [int] and taint: [true, false]",
            "<sun.tools.jconsole.SheetDialog$SlideAndFadeGlassPane: void show(sun.tools.jconsole.SheetDialog$SheetOptionPane)> with actual argTypes: [sun.tools.jconsole.SheetDialog$SheetOptionPane] and taint: [true, true]",
            "<java.awt.Container: void removeAll()> with actual argTypes: [] and taint: [true]",
            "<java.awt.Component: void dispatchEvent(java.awt.AWTEvent)> with actual argTypes: [java.awt.event.ContainerEvent] and taint: [true, false]",
            "<java.awt.Component: void dispatchEventImpl(java.awt.AWTEvent)> with actual argTypes: [java.awt.AWTEvent] and taint: [true, false]",
            "<java.awt.Component: void processEvent(java.awt.AWTEvent)> with actual argTypes: [java.awt.AWTEvent] and taint: [true, false]",
            "<java.awt.Component: void processMouseEvent(java.awt.event.MouseEvent)> with actual argTypes: [java.awt.event.MouseEvent] and taint: [true, false]",
            "<javax.swing.text.DefaultCaret: void mouseClicked(java.awt.event.MouseEvent)> with actual argTypes: [java.awt.event.MouseEvent] and taint: [true, false]",
            "<javax.swing.plaf.basic.BasicTextUI$TextTransferHandler: boolean importData(javax.swing.JComponent,java.awt.datatransfer.Transferable)> with actual argTypes: [javax.swing.text.JTextComponent, java.awt.datatransfer.Transferable] and taint: [false, false, false]",
            "<javax.swing.plaf.basic.BasicTextUI$TextTransferHandler: void handleReaderImport(java.io.Reader,javax.swing.text.JTextComponent,boolean)> with actual argTypes: [java.io.Reader, javax.swing.text.JTextComponent, boolean] and taint: [false, false, false, false]",
            "<org.codehaus.jackson.io.UTF32Reader: int read(char[],int,int)> with actual argTypes: [char[], int, int] and taint: [false, false, false, false]",
            "<org.codehaus.jackson.io.UTF32Reader: boolean loadMore(int)> with actual argTypes: [int] and taint: [false, false]",
            "<com.sun.jersey.json.impl.FilteringInputStream: int read(byte[],int,int)> with actual argTypes: [byte[], int, int] and taint: [false, false, false, false]",
            "<com.sun.jersey.json.impl.FilteringInputStream: void getNextBytesIfNothingAvailable()> with actual argTypes: [] and taint: [false]",
            "<com.sun.jersey.json.impl.JsonRootEatingInputStreamFilter: byte[] nextBytes()> with actual argTypes: [] and taint: [false]",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void copyCurrentEvent(org.codehaus.jackson.JsonParser)> with actual argTypes: [org.codehaus.jackson.JsonParser] and taint: [false, false]",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void writeObject(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [false, false]",
            "<org.codehaus.jackson.map.ObjectMapper: void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)> with actual argTypes: [org.codehaus.jackson.impl.JsonGeneratorBase, java.lang.Object] and taint: [false, false, false]",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory)> with actual argTypes: [org.codehaus.jackson.map.SerializationConfig, org.codehaus.jackson.JsonGenerator, java.lang.Object, org.codehaus.jackson.map.SerializerFactory] and taint: [false, false, false, false, false]",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: void _serializeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)> with actual argTypes: [org.codehaus.jackson.JsonGenerator, java.lang.Object] and taint: [false, false, false]",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)> with actual argTypes: [java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.ser.StdSerializerProvider] and taint: [false, false, false, false]",
            "<org.codehaus.jackson.map.ser.std.JsonValueSerializer: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)> with actual argTypes: [java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider, org.codehaus.jackson.map.TypeSerializer] and taint: [false, false, false, false, false]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [false, false, false]"
        ],
        [
            "<javax.swing.text.StyleContext$NamedStyle: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<javax.swing.text.StyleContext: void readAttributeSet(java.io.ObjectInputStream,javax.swing.text.MutableAttributeSet)> with actual argTypes: [java.io.ObjectInputStream, javax.swing.text.StyleContext$NamedStyle] and taint: [false, true, true]",
            "<javax.swing.text.StyleContext$NamedStyle: void addAttribute(java.lang.Object,java.lang.Object)> with actual argTypes: [java.lang.Object, java.lang.Object] and taint: [true, true, true]",
            "<javax.swing.text.StyleContext$NamedStyle: void fireStateChanged()> with actual argTypes: [] and taint: [true]",
            "<javax.swing.JTabbedPane$ModelListener: void stateChanged(javax.swing.event.ChangeEvent)> with actual argTypes: [javax.swing.event.ChangeEvent] and taint: [true, true]",
            "<javax.swing.JTabbedPane: void fireStateChanged()> with actual argTypes: [] and taint: [true]",
            "<sun.tools.jconsole.SheetDialog$SheetOptionPane: void setVisible(boolean)> with actual argTypes: [int] and taint: [true, false]",
            "<sun.tools.jconsole.SheetDialog$SlideAndFadeGlassPane: void show(sun.tools.jconsole.SheetDialog$SheetOptionPane)> with actual argTypes: [sun.tools.jconsole.SheetDialog$SheetOptionPane] and taint: [true, true]",
            "<java.awt.Container: void removeAll()> with actual argTypes: [] and taint: [true]",
            "<java.awt.Component: void dispatchEvent(java.awt.AWTEvent)> with actual argTypes: [java.awt.event.ContainerEvent] and taint: [true, false]",
            "<java.awt.Component: void dispatchEventImpl(java.awt.AWTEvent)> with actual argTypes: [java.awt.AWTEvent] and taint: [true, false]",
            "<java.awt.Component: void processEvent(java.awt.AWTEvent)> with actual argTypes: [java.awt.AWTEvent] and taint: [true, false]",
            "<java.awt.Component: void processMouseEvent(java.awt.event.MouseEvent)> with actual argTypes: [java.awt.event.MouseEvent] and taint: [true, false]",
            "<javax.swing.text.DefaultCaret: void mouseClicked(java.awt.event.MouseEvent)> with actual argTypes: [java.awt.event.MouseEvent] and taint: [true, false]",
            "<javax.swing.plaf.basic.BasicTextUI$TextTransferHandler: boolean importData(javax.swing.JComponent,java.awt.datatransfer.Transferable)> with actual argTypes: [javax.swing.text.JTextComponent, java.awt.datatransfer.Transferable] and taint: [false, false, false]",
            "<javax.swing.plaf.basic.BasicTextUI$TextTransferHandler: void handleReaderImport(java.io.Reader,javax.swing.text.JTextComponent,boolean)> with actual argTypes: [java.io.Reader, javax.swing.text.JTextComponent, boolean] and taint: [false, false, false, false]",
            "<org.codehaus.jackson.io.UTF32Reader: int read(char[],int,int)> with actual argTypes: [char[], int, int] and taint: [false, false, false, false]",
            "<org.codehaus.jackson.io.UTF32Reader: boolean loadMore(int)> with actual argTypes: [int] and taint: [false, false]",
            "<com.sun.jersey.json.impl.FilteringInputStream: int read(byte[],int,int)> with actual argTypes: [byte[], int, int] and taint: [false, false, false, false]",
            "<com.sun.jersey.json.impl.FilteringInputStream: void getNextBytesIfNothingAvailable()> with actual argTypes: [] and taint: [false]",
            "<com.sun.jersey.json.impl.JsonRootEatingInputStreamFilter: byte[] nextBytes()> with actual argTypes: [] and taint: [false]",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void copyCurrentEvent(org.codehaus.jackson.JsonParser)> with actual argTypes: [org.codehaus.jackson.JsonParser] and taint: [false, false]",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void writeObject(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [false, false]",
            "<org.codehaus.jackson.map.ObjectMapper: void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)> with actual argTypes: [org.codehaus.jackson.impl.JsonGeneratorBase, java.lang.Object] and taint: [false, false, false]",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory)> with actual argTypes: [org.codehaus.jackson.map.SerializationConfig, org.codehaus.jackson.JsonGenerator, java.lang.Object, org.codehaus.jackson.map.SerializerFactory] and taint: [false, false, false, false, false]",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: void _serializeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)> with actual argTypes: [org.codehaus.jackson.JsonGenerator, java.lang.Object] and taint: [false, false, false]",
            "<org.codehaus.jackson.map.ser.impl.UnwrappingBeanSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)> with actual argTypes: [java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.ser.StdSerializerProvider] and taint: [false, false, false, false]",
            "<org.codehaus.jackson.map.ser.std.BeanSerializerBase: void serializeFields(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)> with actual argTypes: [java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider] and taint: [false, false, false, false]",
            "<org.codehaus.jackson.map.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)> with actual argTypes: [java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider] and taint: [false, false, false, false]",
            "<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.Object get(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [false, false]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [false, false, false]"
        ],
        [
            "<javax.swing.text.StyleContext$NamedStyle: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<javax.swing.text.StyleContext: void readAttributeSet(java.io.ObjectInputStream,javax.swing.text.MutableAttributeSet)> with actual argTypes: [java.io.ObjectInputStream, javax.swing.text.StyleContext$NamedStyle] and taint: [false, true, true]",
            "<javax.swing.text.StyleContext$NamedStyle: void addAttribute(java.lang.Object,java.lang.Object)> with actual argTypes: [java.lang.Object, java.lang.Object] and taint: [true, true, true]",
            "<javax.swing.text.StyleContext$NamedStyle: void fireStateChanged()> with actual argTypes: [] and taint: [true]",
            "<javax.swing.JTabbedPane$ModelListener: void stateChanged(javax.swing.event.ChangeEvent)> with actual argTypes: [javax.swing.event.ChangeEvent] and taint: [true, true]",
            "<javax.swing.JTabbedPane: void fireStateChanged()> with actual argTypes: [] and taint: [true]",
            "<sun.tools.jconsole.SheetDialog$SheetOptionPane: void setVisible(boolean)> with actual argTypes: [int] and taint: [true, false]",
            "<sun.tools.jconsole.SheetDialog$SlideAndFadeGlassPane: void show(sun.tools.jconsole.SheetDialog$SheetOptionPane)> with actual argTypes: [sun.tools.jconsole.SheetDialog$SheetOptionPane] and taint: [true, true]",
            "<java.awt.Container: void removeAll()> with actual argTypes: [] and taint: [true]",
            "<java.awt.Component: void dispatchEvent(java.awt.AWTEvent)> with actual argTypes: [java.awt.event.ContainerEvent] and taint: [true, false]",
            "<java.awt.Component: void dispatchEventImpl(java.awt.AWTEvent)> with actual argTypes: [java.awt.AWTEvent] and taint: [true, false]",
            "<java.awt.Component: void processEvent(java.awt.AWTEvent)> with actual argTypes: [java.awt.AWTEvent] and taint: [true, false]",
            "<java.awt.Component: void processMouseEvent(java.awt.event.MouseEvent)> with actual argTypes: [java.awt.event.MouseEvent] and taint: [true, false]",
            "<javax.swing.text.DefaultCaret: void mouseClicked(java.awt.event.MouseEvent)> with actual argTypes: [java.awt.event.MouseEvent] and taint: [true, false]",
            "<javax.swing.plaf.basic.BasicTextUI$TextTransferHandler: boolean importData(javax.swing.JComponent,java.awt.datatransfer.Transferable)> with actual argTypes: [javax.swing.text.JTextComponent, java.awt.datatransfer.Transferable] and taint: [false, false, false]",
            "<javax.swing.plaf.basic.BasicTextUI$TextTransferHandler: void handleReaderImport(java.io.Reader,javax.swing.text.JTextComponent,boolean)> with actual argTypes: [java.io.Reader, javax.swing.text.JTextComponent, boolean] and taint: [false, false, false, false]",
            "<org.codehaus.jackson.io.UTF32Reader: int read(char[],int,int)> with actual argTypes: [char[], int, int] and taint: [false, false, false, false]",
            "<org.codehaus.jackson.io.UTF32Reader: boolean loadMore(int)> with actual argTypes: [int] and taint: [false, false]",
            "<com.sun.jersey.json.impl.FilteringInputStream: int read(byte[],int,int)> with actual argTypes: [byte[], int, int] and taint: [false, false, false, false]",
            "<com.sun.jersey.json.impl.FilteringInputStream: void getNextBytesIfNothingAvailable()> with actual argTypes: [] and taint: [false]",
            "<com.sun.jersey.json.impl.JsonRootEatingInputStreamFilter: byte[] nextBytes()> with actual argTypes: [] and taint: [false]",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void copyCurrentEvent(org.codehaus.jackson.JsonParser)> with actual argTypes: [org.codehaus.jackson.JsonParser] and taint: [false, false]",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void writeObject(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [false, false]",
            "<org.codehaus.jackson.map.ObjectMapper: void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)> with actual argTypes: [org.codehaus.jackson.impl.JsonGeneratorBase, java.lang.Object] and taint: [false, false, false]",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory)> with actual argTypes: [org.codehaus.jackson.map.SerializationConfig, org.codehaus.jackson.JsonGenerator, java.lang.Object, org.codehaus.jackson.map.SerializerFactory] and taint: [false, false, false, false, false]",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: void _serializeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)> with actual argTypes: [org.codehaus.jackson.JsonGenerator, java.lang.Object] and taint: [false, false, false]",
            "<org.codehaus.jackson.map.ser.impl.UnwrappingBeanSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)> with actual argTypes: [java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.ser.StdSerializerProvider] and taint: [false, false, false, false]",
            "<org.codehaus.jackson.map.ser.std.BeanSerializerBase: void serializeFields(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)> with actual argTypes: [java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider] and taint: [false, false, false, false]",
            "<org.codehaus.jackson.map.ser.impl.UnwrappingBeanPropertyWriter: void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)> with actual argTypes: [java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider] and taint: [false, false, false, false]",
            "<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.Object get(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [false, false]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [false, false, false]"
        ],
        [
            "<javax.swing.text.StyleContext$NamedStyle: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<javax.swing.text.StyleContext: void readAttributeSet(java.io.ObjectInputStream,javax.swing.text.MutableAttributeSet)> with actual argTypes: [java.io.ObjectInputStream, javax.swing.text.StyleContext$NamedStyle] and taint: [false, true, true]",
            "<javax.swing.text.StyleContext$NamedStyle: void addAttribute(java.lang.Object,java.lang.Object)> with actual argTypes: [java.lang.Object, java.lang.Object] and taint: [true, true, true]",
            "<javax.swing.text.StyleContext$NamedStyle: void fireStateChanged()> with actual argTypes: [] and taint: [true]",
            "<javax.swing.JTabbedPane$ModelListener: void stateChanged(javax.swing.event.ChangeEvent)> with actual argTypes: [javax.swing.event.ChangeEvent] and taint: [true, true]",
            "<javax.swing.JTabbedPane: void fireStateChanged()> with actual argTypes: [] and taint: [true]",
            "<sun.tools.jconsole.SheetDialog$SheetOptionPane: void setVisible(boolean)> with actual argTypes: [int] and taint: [true, false]",
            "<sun.tools.jconsole.SheetDialog$SlideAndFadeGlassPane: void show(sun.tools.jconsole.SheetDialog$SheetOptionPane)> with actual argTypes: [sun.tools.jconsole.SheetDialog$SheetOptionPane] and taint: [true, true]",
            "<java.awt.Container: void removeAll()> with actual argTypes: [] and taint: [true]",
            "<java.awt.Component: void dispatchEvent(java.awt.AWTEvent)> with actual argTypes: [java.awt.event.ContainerEvent] and taint: [true, false]",
            "<java.awt.Component: void dispatchEventImpl(java.awt.AWTEvent)> with actual argTypes: [java.awt.AWTEvent] and taint: [true, false]",
            "<java.awt.Component: void processEvent(java.awt.AWTEvent)> with actual argTypes: [java.awt.AWTEvent] and taint: [true, false]",
            "<java.awt.Component: void processMouseEvent(java.awt.event.MouseEvent)> with actual argTypes: [java.awt.event.MouseEvent] and taint: [true, false]",
            "<javax.swing.text.DefaultCaret: void mouseClicked(java.awt.event.MouseEvent)> with actual argTypes: [java.awt.event.MouseEvent] and taint: [true, false]",
            "<javax.swing.plaf.basic.BasicTextUI$TextTransferHandler: boolean importData(javax.swing.JComponent,java.awt.datatransfer.Transferable)> with actual argTypes: [javax.swing.text.JTextComponent, java.awt.datatransfer.Transferable] and taint: [false, false, false]",
            "<javax.swing.plaf.basic.BasicTextUI$TextTransferHandler: void handleReaderImport(java.io.Reader,javax.swing.text.JTextComponent,boolean)> with actual argTypes: [java.io.Reader, javax.swing.text.JTextComponent, boolean] and taint: [false, false, false, false]",
            "<org.codehaus.jackson.io.UTF32Reader: int read(char[],int,int)> with actual argTypes: [char[], int, int] and taint: [false, false, false, false]",
            "<org.codehaus.jackson.io.UTF32Reader: boolean loadMore(int)> with actual argTypes: [int] and taint: [false, false]",
            "<com.sun.jersey.json.impl.FilteringInputStream: int read(byte[],int,int)> with actual argTypes: [byte[], int, int] and taint: [false, false, false, false]",
            "<com.sun.jersey.json.impl.FilteringInputStream: void getNextBytesIfNothingAvailable()> with actual argTypes: [] and taint: [false]",
            "<com.sun.jersey.json.impl.JsonRootEatingInputStreamFilter: byte[] nextBytes()> with actual argTypes: [] and taint: [false]",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void copyCurrentEvent(org.codehaus.jackson.JsonParser)> with actual argTypes: [org.codehaus.jackson.JsonParser] and taint: [false, false]",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void writeObject(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [false, false]",
            "<org.codehaus.jackson.map.ObjectMapper: void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)> with actual argTypes: [org.codehaus.jackson.impl.JsonGeneratorBase, java.lang.Object] and taint: [false, false, false]",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory)> with actual argTypes: [org.codehaus.jackson.map.SerializationConfig, org.codehaus.jackson.JsonGenerator, java.lang.Object, org.codehaus.jackson.map.SerializerFactory] and taint: [false, false, false, false, false]",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: void _serializeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)> with actual argTypes: [org.codehaus.jackson.JsonGenerator, java.lang.Object] and taint: [false, false, false]",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean,org.codehaus.jackson.map.BeanProperty)> with actual argTypes: [java.lang.Class, int, null] and taint: [false, false, false, false]",
            "<org.codehaus.jackson.map.ser.BasicSerializerFactory: org.codehaus.jackson.map.TypeSerializer createTypeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)> with actual argTypes: [org.codehaus.jackson.map.SerializationConfig, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.BeanProperty] and taint: [false, false, false, false]",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: org.codehaus.jackson.map.jsontype.TypeResolverBuilder findTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.type.JavaType)> with actual argTypes: [org.codehaus.jackson.map.SerializationConfig, org.codehaus.jackson.map.introspect.AnnotatedClass, org.codehaus.jackson.type.JavaType] and taint: [false, false, false, false]",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: org.codehaus.jackson.map.jsontype.TypeResolverBuilder _findTypeResolver(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType)> with actual argTypes: [org.codehaus.jackson.map.MapperConfig, org.codehaus.jackson.map.introspect.AnnotatedClass, org.codehaus.jackson.type.JavaType] and taint: [false, false, false, false]",
            "<org.codehaus.jackson.map.MapperConfig: org.codehaus.jackson.map.jsontype.TypeResolverBuilder typeResolverBuilderInstance(org.codehaus.jackson.map.introspect.Annotated,java.lang.Class)> with actual argTypes: [org.codehaus.jackson.map.introspect.Annotated, java.lang.Class] and taint: [false, false, false]",
            "<org.codehaus.jackson.map.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)> with actual argTypes: [java.lang.Class, boolean] and taint: [false, false, false]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [false, false]"
        ]
    ]
}