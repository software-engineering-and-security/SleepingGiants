{
    "tabby": [],
    "androChain": [
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.io.util.RewindableDataInputStreamPlus: void close()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.io.util.RewindableDataInputStreamPlus: void close(boolean)> with actual argTypes: [int] and taint: [true, false]",
            "<java.io.File: boolean delete()> with actual argTypes: [] and taint: [true]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.concurrent.SEPWorker: void run()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.utils.JVMStabilityInspector: void inspectThrowable(java.lang.Throwable)> with actual argTypes: [java.lang.Throwable] and taint: [false, false]",
            "<org.apache.cassandra.utils.JVMStabilityInspector: void inspectThrowable(java.lang.Throwable,java.util.function.Consumer)> with actual argTypes: [java.lang.Throwable, java.util.function.Consumer] and taint: [false, false, false]",
            "<org.apache.cassandra.utils.HeapUtils: void logHeapHistogram()> with actual argTypes: [] and taint: [false]",
            "<java.lang.Runtime: java.lang.Process exec(java.lang.String[])> with actual argTypes: [java.lang.String[]] and taint: [false, false]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.io.sstable.SSTableSimpleWriter: void close()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.io.sstable.SSTableTxnWriter: java.util.Collection finish(boolean)> with actual argTypes: [int] and taint: [true, false]",
            "<org.apache.cassandra.utils.concurrent.Transactional$AbstractTransactional: java.lang.Object finish()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.utils.concurrent.Transactional$AbstractTransactional: void prepareToCommit()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.io.compress.CompressionMetadata$Writer: void doPrepare()> with actual argTypes: [] and taint: [true]",
            "<java.io.FileOutputStream: void <init>(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [false, true]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.utils.WrappedRunnable: void run()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.db.compaction.CompactionManager$7: void runMayThrow()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.db.compaction.CompactionManager: void performAnticompaction(org.apache.cassandra.db.ColumnFamilyStore,java.util.Collection,org.apache.cassandra.utils.concurrent.Refs,org.apache.cassandra.db.lifecycle.LifecycleTransaction,long,java.util.UUID)> with actual argTypes: [org.apache.cassandra.db.ColumnFamilyStore, java.util.Collection, org.apache.cassandra.utils.concurrent.Refs, org.apache.cassandra.db.lifecycle.LifecycleTransaction, long, java.util.UUID] and taint: [true, true, true, true, true, true, true]",
            "<org.apache.cassandra.io.sstable.metadata.MetadataSerializer: void mutateRepairedAt(org.apache.cassandra.io.sstable.Descriptor,long)> with actual argTypes: [org.apache.cassandra.io.sstable.Descriptor, long] and taint: [true, true, true]",
            "<org.apache.cassandra.io.sstable.metadata.MetadataSerializer: void rewriteSSTableMetadata(org.apache.cassandra.io.sstable.Descriptor,java.util.Map)> with actual argTypes: [org.apache.cassandra.io.sstable.Descriptor, java.util.Map] and taint: [true, true, true]",
            "<java.io.FileOutputStream: void <init>(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [false, true]"
        ],
        [
            "<javax.management.ImmutableDescriptor: java.lang.Object readResolve()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.db.marshal.AbstractType: int compare(java.lang.Object,java.lang.Object)> with actual argTypes: [java.lang.String, java.lang.String] and taint: [false, true, true]",
            "<org.apache.cassandra.db.marshal.AbstractType: int compare(java.nio.ByteBuffer,java.nio.ByteBuffer)> with actual argTypes: [java.nio.ByteBuffer, java.nio.ByteBuffer] and taint: [false, true, true]",
            "<org.apache.cassandra.db.marshal.AbstractCompositeType: int compareCustom(java.nio.ByteBuffer,java.nio.ByteBuffer)> with actual argTypes: [java.nio.ByteBuffer, java.nio.ByteBuffer] and taint: [false, true, true]",
            "<org.apache.cassandra.db.marshal.ColumnToCollectionType: int compareCollectionMembers(java.nio.ByteBuffer,java.nio.ByteBuffer,java.nio.ByteBuffer)> with actual argTypes: [java.nio.ByteBuffer, java.nio.ByteBuffer, java.nio.ByteBuffer] and taint: [true, true, true, true]",
            "<org.apache.cassandra.utils.ByteBufferUtil: java.lang.String bytesToHex(java.nio.ByteBuffer)> with actual argTypes: [java.nio.ByteBuffer] and taint: [false, true]",
            "<org.apache.cassandra.utils.Hex: java.lang.String wrapCharArray(char[])> with actual argTypes: [char[]] and taint: [false, false]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [false, false]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.io.sstable.SSTableSimpleWriter: void close()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.io.sstable.SSTableTxnWriter: java.util.Collection finish(boolean)> with actual argTypes: [int] and taint: [true, false]",
            "<org.apache.cassandra.utils.concurrent.Transactional$AbstractTransactional: java.lang.Object finish()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.utils.concurrent.Transactional$AbstractTransactional: void prepareToCommit()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.io.sstable.format.big.BigTableWriter$IndexWriter: void doPrepare()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.io.sstable.format.big.BigTableWriter$IndexWriter: void flushBf()> with actual argTypes: [] and taint: [true]",
            "<java.io.FileOutputStream: void <init>(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [false, true]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.utils.WrappedRunnable: void run()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.db.compaction.CompactionManager$7: void runMayThrow()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.db.compaction.CompactionManager: void performAnticompaction(org.apache.cassandra.db.ColumnFamilyStore,java.util.Collection,org.apache.cassandra.utils.concurrent.Refs,org.apache.cassandra.db.lifecycle.LifecycleTransaction,long,java.util.UUID)> with actual argTypes: [org.apache.cassandra.db.ColumnFamilyStore, java.util.Collection, org.apache.cassandra.utils.concurrent.Refs, org.apache.cassandra.db.lifecycle.LifecycleTransaction, long, java.util.UUID] and taint: [true, true, true, true, true, true, true]",
            "<org.apache.cassandra.io.sstable.metadata.MetadataSerializer: void mutateRepairedAt(org.apache.cassandra.io.sstable.Descriptor,long)> with actual argTypes: [org.apache.cassandra.io.sstable.Descriptor, long] and taint: [true, true, true]",
            "<org.apache.cassandra.io.sstable.metadata.MetadataSerializer: void rewriteSSTableMetadata(org.apache.cassandra.io.sstable.Descriptor,java.util.Map)> with actual argTypes: [org.apache.cassandra.io.sstable.Descriptor, java.util.Map] and taint: [true, true, true]",
            "<org.apache.cassandra.io.util.FileUtils: boolean delete(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [false, true]",
            "<java.io.File: boolean delete()> with actual argTypes: [] and taint: [false]"
        ],
        [
            "<javax.management.ImmutableDescriptor: java.lang.Object readResolve()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.db.marshal.AbstractType: int compare(java.lang.Object,java.lang.Object)> with actual argTypes: [java.lang.String, java.lang.String] and taint: [false, true, true]",
            "<org.apache.cassandra.db.marshal.AbstractType: int compare(java.nio.ByteBuffer,java.nio.ByteBuffer)> with actual argTypes: [java.nio.ByteBuffer, java.nio.ByteBuffer] and taint: [false, true, true]",
            "<org.apache.cassandra.db.marshal.AbstractCompositeType: int compareCustom(java.nio.ByteBuffer,java.nio.ByteBuffer)> with actual argTypes: [java.nio.ByteBuffer, java.nio.ByteBuffer] and taint: [false, true, true]",
            "<org.apache.cassandra.db.marshal.DynamicCompositeType: org.apache.cassandra.db.marshal.AbstractType getComparator(int,java.nio.ByteBuffer,java.nio.ByteBuffer)> with actual argTypes: [int, java.nio.ByteBuffer, java.nio.ByteBuffer] and taint: [false, false, true, true]",
            "<org.apache.cassandra.db.marshal.DynamicCompositeType: org.apache.cassandra.db.marshal.AbstractType getComparator(java.nio.ByteBuffer)> with actual argTypes: [java.nio.ByteBuffer] and taint: [false, true]",
            "<org.apache.cassandra.db.marshal.TypeParser: org.apache.cassandra.db.marshal.AbstractType parse(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [false, true]",
            "<org.apache.cassandra.db.marshal.TypeParser: org.apache.cassandra.db.marshal.AbstractType getAbstractType(java.lang.String,org.apache.cassandra.db.marshal.TypeParser)> with actual argTypes: [java.lang.String, org.apache.cassandra.db.marshal.TypeParser] and taint: [false, true, false]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [null, java.lang.Object[]] and taint: [true, false, false]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.streaming.ConnectionHandler$IncomingMessageHandler: void run()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.streaming.messages.StreamMessage: org.apache.cassandra.streaming.messages.StreamMessage deserialize(java.nio.channels.ReadableByteChannel,int,org.apache.cassandra.streaming.StreamSession)> with actual argTypes: [java.nio.channels.ReadableByteChannel, int, org.apache.cassandra.streaming.StreamSession] and taint: [false, true, true, true]",
            "<org.apache.cassandra.streaming.messages.PrepareMessage$1: org.apache.cassandra.streaming.messages.StreamMessage deserialize(java.nio.channels.ReadableByteChannel,int,org.apache.cassandra.streaming.StreamSession)> with actual argTypes: [java.nio.channels.ReadableByteChannel, int, org.apache.cassandra.streaming.StreamSession] and taint: [false, true, true, true]",
            "<org.apache.cassandra.streaming.messages.PrepareMessage$1: org.apache.cassandra.streaming.messages.PrepareMessage deserialize(java.nio.channels.ReadableByteChannel,int,org.apache.cassandra.streaming.StreamSession)> with actual argTypes: [java.nio.channels.ReadableByteChannel, int, org.apache.cassandra.streaming.StreamSession] and taint: [false, true, true, true]",
            "<org.apache.cassandra.utils.IntervalTree$Serializer: java.lang.Object deserialize(org.apache.cassandra.io.util.DataInputPlus,int)> with actual argTypes: [org.apache.cassandra.io.util.DataInputPlus$DataInputStreamPlus, int] and taint: [false, false, true]",
            "<org.apache.cassandra.utils.IntervalTree$Serializer: org.apache.cassandra.utils.IntervalTree deserialize(org.apache.cassandra.io.util.DataInputPlus,int)> with actual argTypes: [org.apache.cassandra.io.util.DataInputPlus, int] and taint: [false, false, true]",
            "<org.apache.cassandra.utils.IntervalTree$Serializer: org.apache.cassandra.utils.IntervalTree deserialize(org.apache.cassandra.io.util.DataInputPlus,int,java.util.Comparator)> with actual argTypes: [org.apache.cassandra.io.util.DataInputPlus, int, null] and taint: [false, false, true, false]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [false, false]"
        ],
        [
            "<javax.management.ImmutableDescriptor: java.lang.Object readResolve()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.db.marshal.AbstractType: int compare(java.lang.Object,java.lang.Object)> with actual argTypes: [java.lang.String, java.lang.String] and taint: [false, true, true]",
            "<org.apache.cassandra.db.marshal.AbstractType: int compare(java.nio.ByteBuffer,java.nio.ByteBuffer)> with actual argTypes: [java.nio.ByteBuffer, java.nio.ByteBuffer] and taint: [false, true, true]",
            "<org.apache.cassandra.db.marshal.AbstractCompositeType: int compareCustom(java.nio.ByteBuffer,java.nio.ByteBuffer)> with actual argTypes: [java.nio.ByteBuffer, java.nio.ByteBuffer] and taint: [false, true, true]",
            "<org.apache.cassandra.db.marshal.DynamicCompositeType: org.apache.cassandra.db.marshal.AbstractType getComparator(int,java.nio.ByteBuffer,java.nio.ByteBuffer)> with actual argTypes: [int, java.nio.ByteBuffer, java.nio.ByteBuffer] and taint: [false, false, true, true]",
            "<org.apache.cassandra.db.marshal.DynamicCompositeType: org.apache.cassandra.db.marshal.AbstractType getComparator(java.nio.ByteBuffer)> with actual argTypes: [java.nio.ByteBuffer] and taint: [false, true]",
            "<org.apache.cassandra.db.marshal.TypeParser: org.apache.cassandra.db.marshal.AbstractType parse(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [false, true]",
            "<org.apache.cassandra.db.marshal.TypeParser: org.apache.cassandra.db.marshal.AbstractType getAbstractType(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [false, true]",
            "<org.apache.cassandra.db.marshal.TypeParser: org.apache.cassandra.db.marshal.AbstractType getRawAbstractType(java.lang.Class,org.apache.cassandra.db.marshal.TypeParser)> with actual argTypes: [java.lang.Class, org.apache.cassandra.db.marshal.TypeParser] and taint: [false, false, false]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [null, java.lang.Object[]] and taint: [false, false, false]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.apache.cassandra.db.transform.BasePartitions: boolean hasNext()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.utils.Throwables: java.lang.Throwable close(java.lang.Throwable,java.lang.Iterable)> with actual argTypes: [java.lang.Throwable, java.util.Set] and taint: [false, false, false]",
            "<org.apache.cassandra.io.util.RewindableDataInputStreamPlus: void close()> with actual argTypes: [] and taint: [false]",
            "<org.apache.cassandra.io.util.RewindableDataInputStreamPlus: void close(boolean)> with actual argTypes: [int] and taint: [false, false]",
            "<java.io.File: boolean delete()> with actual argTypes: [] and taint: [false]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.apache.cassandra.db.transform.BasePartitions: boolean hasNext()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.utils.Throwables: java.lang.Throwable close(java.lang.Throwable,java.lang.Iterable)> with actual argTypes: [java.lang.Throwable, java.util.Set] and taint: [false, false, false]",
            "<org.apache.cassandra.db.partitions.PartitionIterators$1: void close()> with actual argTypes: [] and taint: [false]",
            "<javax.swing.JFormattedTextField$FocusLostHandler: void run()> with actual argTypes: [] and taint: [false]",
            "<javax.swing.JFormattedTextField: void commitEdit()> with actual argTypes: [] and taint: [false]",
            "<javax.swing.text.DefaultFormatter: java.lang.Object stringToValue(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [false, false]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [false, false]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.apache.cassandra.db.transform.BasePartitions: boolean hasNext()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.utils.Throwables: java.lang.Throwable close(java.lang.Throwable,java.lang.Iterable)> with actual argTypes: [java.lang.Throwable, java.util.Set] and taint: [false, false, false]",
            "<org.apache.cassandra.db.partitions.PartitionIterators$1: void close()> with actual argTypes: [] and taint: [false]",
            "<java.util.concurrent.ForkJoinTask$AdaptedRunnableAction: void run()> with actual argTypes: [] and taint: [false]",
            "<java.util.concurrent.ForkJoinTask: java.lang.Object invoke()> with actual argTypes: [] and taint: [false]",
            "<java.util.concurrent.ForkJoinTask: void reportException(int)> with actual argTypes: [int] and taint: [false, false]",
            "<java.util.concurrent.ForkJoinTask: java.lang.Throwable getThrowableException()> with actual argTypes: [] and taint: [false]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [false, false]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.apache.cassandra.db.transform.BasePartitions: boolean hasNext()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.utils.Throwables: java.lang.Throwable close(java.lang.Throwable,java.lang.Iterable)> with actual argTypes: [java.lang.Throwable, java.util.Set] and taint: [false, false, false]",
            "<org.apache.cassandra.db.partitions.PartitionIterators$1: void close()> with actual argTypes: [] and taint: [false]",
            "<org.apache.cassandra.concurrent.SEPWorker: void run()> with actual argTypes: [] and taint: [false]",
            "<org.apache.cassandra.utils.JVMStabilityInspector: void inspectThrowable(java.lang.Throwable)> with actual argTypes: [java.lang.Throwable] and taint: [false, false]",
            "<org.apache.cassandra.utils.JVMStabilityInspector: void inspectThrowable(java.lang.Throwable,java.util.function.Consumer)> with actual argTypes: [java.lang.Throwable, java.util.function.Consumer] and taint: [false, false, false]",
            "<org.apache.cassandra.utils.HeapUtils: void logHeapHistogram()> with actual argTypes: [] and taint: [false]",
            "<java.lang.Runtime: java.lang.Process exec(java.lang.String[])> with actual argTypes: [java.lang.String[]] and taint: [false, false]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.apache.cassandra.db.transform.BasePartitions: boolean hasNext()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.utils.Throwables: java.lang.Throwable close(java.lang.Throwable,java.lang.Iterable)> with actual argTypes: [java.lang.Throwable, java.util.Set] and taint: [false, false, false]",
            "<org.apache.cassandra.io.sstable.SSTableSimpleWriter: void close()> with actual argTypes: [] and taint: [false]",
            "<org.apache.cassandra.io.sstable.SSTableTxnWriter: java.util.Collection finish(boolean)> with actual argTypes: [int] and taint: [false, false]",
            "<org.apache.cassandra.utils.concurrent.Transactional$AbstractTransactional: java.lang.Object finish()> with actual argTypes: [] and taint: [false]",
            "<org.apache.cassandra.utils.concurrent.Transactional$AbstractTransactional: void prepareToCommit()> with actual argTypes: [] and taint: [false]",
            "<org.apache.cassandra.io.compress.CompressionMetadata$Writer: void doPrepare()> with actual argTypes: [] and taint: [false]",
            "<java.io.FileOutputStream: void <init>(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [false, false]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.apache.cassandra.db.transform.BasePartitions: boolean hasNext()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.utils.Throwables: java.lang.Throwable close(java.lang.Throwable,java.lang.Iterable)> with actual argTypes: [java.lang.Throwable, java.util.Set] and taint: [false, false, false]",
            "<org.apache.cassandra.db.partitions.PartitionIterators$1: void close()> with actual argTypes: [] and taint: [false]",
            "<org.apache.cassandra.utils.WrappedRunnable: void run()> with actual argTypes: [] and taint: [false]",
            "<org.apache.cassandra.db.compaction.CompactionManager$7: void runMayThrow()> with actual argTypes: [] and taint: [false]",
            "<org.apache.cassandra.db.compaction.CompactionManager: void performAnticompaction(org.apache.cassandra.db.ColumnFamilyStore,java.util.Collection,org.apache.cassandra.utils.concurrent.Refs,org.apache.cassandra.db.lifecycle.LifecycleTransaction,long,java.util.UUID)> with actual argTypes: [org.apache.cassandra.db.ColumnFamilyStore, java.util.Collection, org.apache.cassandra.utils.concurrent.Refs, org.apache.cassandra.db.lifecycle.LifecycleTransaction, long, java.util.UUID] and taint: [false, false, false, false, false, false, false]",
            "<org.apache.cassandra.io.sstable.metadata.MetadataSerializer: void mutateRepairedAt(org.apache.cassandra.io.sstable.Descriptor,long)> with actual argTypes: [org.apache.cassandra.io.sstable.Descriptor, long] and taint: [false, false, false]",
            "<org.apache.cassandra.io.sstable.metadata.MetadataSerializer: void rewriteSSTableMetadata(org.apache.cassandra.io.sstable.Descriptor,java.util.Map)> with actual argTypes: [org.apache.cassandra.io.sstable.Descriptor, java.util.Map] and taint: [false, false, false]",
            "<java.io.FileOutputStream: void <init>(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [false, false]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.apache.cassandra.db.transform.BasePartitions: boolean hasNext()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.utils.Throwables: java.lang.Throwable close(java.lang.Throwable,java.lang.Iterable)> with actual argTypes: [java.lang.Throwable, java.util.Set] and taint: [false, false, false]",
            "<org.apache.cassandra.io.sstable.SSTableSimpleWriter: void close()> with actual argTypes: [] and taint: [false]",
            "<org.apache.cassandra.io.sstable.SSTableTxnWriter: java.util.Collection finish(boolean)> with actual argTypes: [int] and taint: [false, false]",
            "<org.apache.cassandra.utils.concurrent.Transactional$AbstractTransactional: java.lang.Object finish()> with actual argTypes: [] and taint: [false]",
            "<org.apache.cassandra.utils.concurrent.Transactional$AbstractTransactional: void prepareToCommit()> with actual argTypes: [] and taint: [false]",
            "<org.apache.cassandra.io.sstable.format.big.BigTableWriter$IndexWriter: void doPrepare()> with actual argTypes: [] and taint: [false]",
            "<org.apache.cassandra.io.sstable.format.big.BigTableWriter$IndexWriter: void flushBf()> with actual argTypes: [] and taint: [false]",
            "<java.io.FileOutputStream: void <init>(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [false, false]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.apache.cassandra.db.transform.BasePartitions: boolean hasNext()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.utils.Throwables: java.lang.Throwable close(java.lang.Throwable,java.lang.Iterable)> with actual argTypes: [java.lang.Throwable, java.util.Set] and taint: [false, false, false]",
            "<org.apache.cassandra.db.partitions.PartitionIterators$1: void close()> with actual argTypes: [] and taint: [false]",
            "<org.apache.cassandra.utils.WrappedRunnable: void run()> with actual argTypes: [] and taint: [false]",
            "<org.apache.cassandra.db.compaction.CompactionManager$7: void runMayThrow()> with actual argTypes: [] and taint: [false]",
            "<org.apache.cassandra.db.compaction.CompactionManager: void performAnticompaction(org.apache.cassandra.db.ColumnFamilyStore,java.util.Collection,org.apache.cassandra.utils.concurrent.Refs,org.apache.cassandra.db.lifecycle.LifecycleTransaction,long,java.util.UUID)> with actual argTypes: [org.apache.cassandra.db.ColumnFamilyStore, java.util.Collection, org.apache.cassandra.utils.concurrent.Refs, org.apache.cassandra.db.lifecycle.LifecycleTransaction, long, java.util.UUID] and taint: [false, false, false, false, false, false, false]",
            "<org.apache.cassandra.io.sstable.metadata.MetadataSerializer: void mutateRepairedAt(org.apache.cassandra.io.sstable.Descriptor,long)> with actual argTypes: [org.apache.cassandra.io.sstable.Descriptor, long] and taint: [false, false, false]",
            "<org.apache.cassandra.io.sstable.metadata.MetadataSerializer: void rewriteSSTableMetadata(org.apache.cassandra.io.sstable.Descriptor,java.util.Map)> with actual argTypes: [org.apache.cassandra.io.sstable.Descriptor, java.util.Map] and taint: [false, false, false]",
            "<org.apache.cassandra.io.util.FileUtils: boolean delete(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [false, false]",
            "<java.io.File: boolean delete()> with actual argTypes: [] and taint: [false]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.apache.cassandra.db.transform.BasePartitions: boolean hasNext()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.utils.Throwables: java.lang.Throwable close(java.lang.Throwable,java.lang.Iterable)> with actual argTypes: [java.lang.Throwable, java.util.Set] and taint: [false, false, false]",
            "<org.apache.cassandra.db.partitions.PartitionIterators$1: void close()> with actual argTypes: [] and taint: [false]",
            "<org.apache.cassandra.streaming.ConnectionHandler$IncomingMessageHandler: void run()> with actual argTypes: [] and taint: [false]",
            "<org.apache.cassandra.streaming.messages.StreamMessage: org.apache.cassandra.streaming.messages.StreamMessage deserialize(java.nio.channels.ReadableByteChannel,int,org.apache.cassandra.streaming.StreamSession)> with actual argTypes: [java.nio.channels.ReadableByteChannel, int, org.apache.cassandra.streaming.StreamSession] and taint: [false, false, false, false]",
            "<org.apache.cassandra.streaming.messages.PrepareMessage$1: org.apache.cassandra.streaming.messages.StreamMessage deserialize(java.nio.channels.ReadableByteChannel,int,org.apache.cassandra.streaming.StreamSession)> with actual argTypes: [java.nio.channels.ReadableByteChannel, int, org.apache.cassandra.streaming.StreamSession] and taint: [false, false, false, false]",
            "<org.apache.cassandra.streaming.messages.PrepareMessage$1: org.apache.cassandra.streaming.messages.PrepareMessage deserialize(java.nio.channels.ReadableByteChannel,int,org.apache.cassandra.streaming.StreamSession)> with actual argTypes: [java.nio.channels.ReadableByteChannel, int, org.apache.cassandra.streaming.StreamSession] and taint: [false, false, false, false]",
            "<org.apache.cassandra.utils.IntervalTree$Serializer: java.lang.Object deserialize(org.apache.cassandra.io.util.DataInputPlus,int)> with actual argTypes: [org.apache.cassandra.io.util.DataInputPlus$DataInputStreamPlus, int] and taint: [false, false, false]",
            "<org.apache.cassandra.utils.IntervalTree$Serializer: org.apache.cassandra.utils.IntervalTree deserialize(org.apache.cassandra.io.util.DataInputPlus,int)> with actual argTypes: [org.apache.cassandra.io.util.DataInputPlus, int] and taint: [false, false, false]",
            "<org.apache.cassandra.utils.IntervalTree$Serializer: org.apache.cassandra.utils.IntervalTree deserialize(org.apache.cassandra.io.util.DataInputPlus,int,java.util.Comparator)> with actual argTypes: [org.apache.cassandra.io.util.DataInputPlus, int, null] and taint: [false, false, false, false]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [false, false]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.apache.cassandra.db.transform.BasePartitions: boolean hasNext()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.utils.Throwables: java.lang.Throwable close(java.lang.Throwable,java.lang.Iterable)> with actual argTypes: [java.lang.Throwable, java.util.Set] and taint: [false, false, false]",
            "<org.apache.cassandra.db.partitions.PartitionIterators$1: void close()> with actual argTypes: [] and taint: [false]",
            "<org.apache.cassandra.streaming.ConnectionHandler$IncomingMessageHandler: void run()> with actual argTypes: [] and taint: [false]",
            "<org.apache.cassandra.streaming.messages.StreamMessage: org.apache.cassandra.streaming.messages.StreamMessage deserialize(java.nio.channels.ReadableByteChannel,int,org.apache.cassandra.streaming.StreamSession)> with actual argTypes: [java.nio.channels.ReadableByteChannel, int, org.apache.cassandra.streaming.StreamSession] and taint: [false, false, false, false]",
            "<org.apache.cassandra.streaming.messages.PrepareMessage$1: org.apache.cassandra.streaming.messages.StreamMessage deserialize(java.nio.channels.ReadableByteChannel,int,org.apache.cassandra.streaming.StreamSession)> with actual argTypes: [java.nio.channels.ReadableByteChannel, int, org.apache.cassandra.streaming.StreamSession] and taint: [false, false, false, false]",
            "<org.apache.cassandra.streaming.messages.PrepareMessage$1: org.apache.cassandra.streaming.messages.PrepareMessage deserialize(java.nio.channels.ReadableByteChannel,int,org.apache.cassandra.streaming.StreamSession)> with actual argTypes: [java.nio.channels.ReadableByteChannel, int, org.apache.cassandra.streaming.StreamSession] and taint: [false, false, false, false]",
            "<org.apache.cassandra.db.CounterMutation$CounterMutationSerializer: java.lang.Object deserialize(org.apache.cassandra.io.util.DataInputPlus,int)> with actual argTypes: [org.apache.cassandra.io.util.DataInputPlus$DataInputStreamPlus, int] and taint: [false, false, false]",
            "<org.apache.cassandra.db.CounterMutation$CounterMutationSerializer: org.apache.cassandra.db.CounterMutation deserialize(org.apache.cassandra.io.util.DataInputPlus,int)> with actual argTypes: [org.apache.cassandra.io.util.DataInputPlus, int] and taint: [false, false, false]",
            "<java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)> with actual argTypes: [java.lang.Class, java.lang.String] and taint: [false, false, false]",
            "<java.lang.Class: java.util.Map enumConstantDirectory()> with actual argTypes: [] and taint: [false]",
            "<java.lang.Class: java.lang.Object[] getEnumConstantsShared()> with actual argTypes: [] and taint: [false]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [null, java.lang.Object[]] and taint: [false, false, false]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.apache.cassandra.db.transform.BasePartitions: boolean hasNext()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.utils.Throwables: java.lang.Throwable close(java.lang.Throwable,java.lang.Iterable)> with actual argTypes: [java.lang.Throwable, java.util.Set] and taint: [false, false, false]",
            "<org.apache.cassandra.db.partitions.PartitionIterators$1: void close()> with actual argTypes: [] and taint: [false]",
            "<org.apache.cassandra.utils.WrappedRunnable: void run()> with actual argTypes: [] and taint: [false]",
            "<org.apache.cassandra.db.compaction.CompactionManager$7: void runMayThrow()> with actual argTypes: [] and taint: [false]",
            "<org.apache.cassandra.db.compaction.CompactionManager: void performAnticompaction(org.apache.cassandra.db.ColumnFamilyStore,java.util.Collection,org.apache.cassandra.utils.concurrent.Refs,org.apache.cassandra.db.lifecycle.LifecycleTransaction,long,java.util.UUID)> with actual argTypes: [org.apache.cassandra.db.ColumnFamilyStore, java.util.Collection, org.apache.cassandra.utils.concurrent.Refs, org.apache.cassandra.db.lifecycle.LifecycleTransaction, long, java.util.UUID] and taint: [false, false, false, false, false, false, false]",
            "<org.apache.cassandra.io.sstable.metadata.MetadataSerializer: void mutateRepairedAt(org.apache.cassandra.io.sstable.Descriptor,long)> with actual argTypes: [org.apache.cassandra.io.sstable.Descriptor, long] and taint: [false, false, false]",
            "<org.apache.cassandra.io.sstable.metadata.MetadataSerializer: void rewriteSSTableMetadata(org.apache.cassandra.io.sstable.Descriptor,java.util.Map)> with actual argTypes: [org.apache.cassandra.io.sstable.Descriptor, java.util.Map] and taint: [false, false, false]",
            "<org.apache.cassandra.io.util.FileUtils: void renameWithConfirm(java.lang.String,java.lang.String)> with actual argTypes: [java.lang.String, java.lang.String] and taint: [false, false, false]",
            "<org.apache.cassandra.io.util.FileUtils: void renameWithConfirm(java.io.File,java.io.File)> with actual argTypes: [java.io.File, java.io.File] and taint: [false, false, false]",
            "<org.apache.cassandra.io.util.FileUtils: void atomicMoveWithFallback(java.nio.file.Path,java.nio.file.Path)> with actual argTypes: [java.nio.file.Path, java.nio.file.Path] and taint: [false, false, false]",
            "<java.nio.file.Files: java.nio.file.Path move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])> with actual argTypes: [java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption[]] and taint: [false, false, false, false]",
            "<java.nio.file.CopyMoveHelper: void moveToForeignTarget(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])> with actual argTypes: [java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption[]] and taint: [false, false, false, false]",
            "<java.nio.file.CopyMoveHelper: void copyToForeignTarget(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])> with actual argTypes: [java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption[]] and taint: [false, false, false, false]",
            "<java.nio.file.Files: long copy(java.io.InputStream,java.nio.file.Path,java.nio.file.CopyOption[])> with actual argTypes: [java.io.InputStream, java.nio.file.Path, java.nio.file.CopyOption[]] and taint: [false, false, false, false]",
            "<java.nio.file.Files: java.io.OutputStream newOutputStream(java.nio.file.Path,java.nio.file.OpenOption[])> with actual argTypes: [java.nio.file.Path, java.nio.file.OpenOption[]] and taint: [false, false, false]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.apache.cassandra.db.transform.BasePartitions: boolean hasNext()> with actual argTypes: [] and taint: [true]",
            "<org.apache.cassandra.utils.Throwables: java.lang.Throwable close(java.lang.Throwable,java.lang.Iterable)> with actual argTypes: [java.lang.Throwable, java.util.Set] and taint: [false, false, false]",
            "<org.apache.cassandra.db.partitions.PartitionIterators$1: void close()> with actual argTypes: [] and taint: [false]",
            "<org.apache.cassandra.utils.WrappedRunnable: void run()> with actual argTypes: [] and taint: [false]",
            "<org.apache.cassandra.db.DefinitionsUpdateVerbHandler$1: void runMayThrow()> with actual argTypes: [] and taint: [false]",
            "<org.apache.cassandra.schema.SchemaKeyspace: void mergeSchemaAndAnnounceVersion(java.util.Collection)> with actual argTypes: [java.util.Collection] and taint: [false, false]",
            "<org.apache.cassandra.schema.SchemaKeyspace: void mergeSchema(java.util.Collection)> with actual argTypes: [java.util.Collection] and taint: [false, false]",
            "<org.apache.cassandra.schema.SchemaKeyspace: org.apache.cassandra.schema.Keyspaces fetchKeyspacesOnly(java.util.Set)> with actual argTypes: [java.util.Set] and taint: [false, false]",
            "<org.apache.cassandra.schema.SchemaKeyspace: org.apache.cassandra.schema.KeyspaceMetadata fetchKeyspace(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [false, false]",
            "<org.apache.cassandra.schema.SchemaKeyspace: org.apache.cassandra.schema.Tables fetchTables(java.lang.String,org.apache.cassandra.schema.Types)> with actual argTypes: [java.lang.String, org.apache.cassandra.schema.Types] and taint: [false, false, false]",
            "<org.apache.cassandra.schema.SchemaKeyspace: org.apache.cassandra.config.CFMetaData fetchTable(java.lang.String,java.lang.String,org.apache.cassandra.schema.Types)> with actual argTypes: [java.lang.String, java.lang.String, org.apache.cassandra.schema.Types] and taint: [false, false, false, false]",
            "<org.apache.cassandra.schema.SchemaKeyspace: org.apache.cassandra.schema.TableParams createTableParamsFromRow(org.apache.cassandra.cql3.UntypedResultSet$Row)> with actual argTypes: [org.apache.cassandra.cql3.UntypedResultSet$Row] and taint: [false, false]",
            "<org.apache.cassandra.schema.CompactionParams: org.apache.cassandra.schema.CompactionParams fromMap(java.util.Map)> with actual argTypes: [java.util.Map] and taint: [false, false]",
            "<org.apache.cassandra.schema.CompactionParams: org.apache.cassandra.schema.CompactionParams create(java.lang.Class,java.util.Map)> with actual argTypes: [java.lang.Class, java.util.HashMap] and taint: [false, false, false]",
            "<org.apache.cassandra.schema.CompactionParams: boolean supportsThresholdParams(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [false, false]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [null, java.lang.Object[]] and taint: [false, false, false]"
        ]
    ]
}