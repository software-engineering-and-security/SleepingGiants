{
    "tabby": [],
    "androChain": [
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.RecordMapper: java.lang.Object apply(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.jooq.RecordMapper: java.lang.Object apply(org.jooq.Record)> with actual argTypes: [org.jooq.Record] and taint: [true, true]",
            "<org.jooq.impl.DefaultRecordMapper$ImmutablePOJOMapper: java.lang.Object map(org.jooq.Record)> with actual argTypes: [org.jooq.Record] and taint: [true, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, true]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.RecordMapper: java.lang.Object apply(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.jooq.RecordMapper: java.lang.Object apply(org.jooq.Record)> with actual argTypes: [org.jooq.Record] and taint: [true, true]",
            "<org.jooq.impl.DefaultRecordMapper$MutablePOJOMapper: java.lang.Object map(org.jooq.Record)> with actual argTypes: [org.jooq.Record] and taint: [true, true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [true, true, true]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<com.sun.rowset.JdbcRowSetImpl: java.sql.ResultSetMetaData getMetaData()> with actual argTypes: [] and taint: [true]",
            "<com.sun.rowset.JdbcRowSetImpl: java.sql.PreparedStatement prepare()> with actual argTypes: [] and taint: [false]",
            "<com.sun.rowset.JdbcRowSetImpl: java.sql.Connection connect()> with actual argTypes: [] and taint: [false]",
            "<javax.naming.InitialContext: java.lang.Object lookup(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [false, false]",
            "<javax.naming.Context: java.lang.Object lookup(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [false, false]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.RecordMapper: java.lang.Object apply(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.jooq.RecordMapper: java.lang.Object apply(org.jooq.Record)> with actual argTypes: [org.jooq.Record] and taint: [true, true]",
            "<org.jooq.impl.DefaultRecordMapper$MutablePOJOMapper: java.lang.Object map(org.jooq.Record)> with actual argTypes: [org.jooq.Record] and taint: [true, true]",
            "<org.jooq.impl.DefaultRecordMapper$MutablePOJOMapper: org.jooq.impl.AbstractRecord lambda$map$3(java.util.Map$Entry,org.jooq.Record,org.jooq.RecordMapper,java.lang.String,java.lang.Object,org.jooq.impl.AbstractRecord)> with actual argTypes: [java.util.Map$Entry, org.jooq.Record, org.jooq.RecordMapper, java.lang.String, java.lang.Object, org.jooq.impl.AbstractRecord] and taint: [false, false, false, false, false, false, false]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [false, false, false]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.RecordMapper: java.lang.Object apply(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.jooq.RecordMapper: java.lang.Object apply(org.jooq.Record)> with actual argTypes: [org.jooq.Record] and taint: [true, true]",
            "<org.jooq.impl.DefaultRecordMapper$ProxyMapper: java.lang.Object map(org.jooq.Record)> with actual argTypes: [org.jooq.Record] and taint: [true, true]",
            "<org.jooq.impl.DefaultRecordMapper$MutablePOJOMapper: java.lang.Object map(org.jooq.Record)> with actual argTypes: [org.jooq.Record] and taint: [true, true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [true, true, true]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.tools.jdbc.LoggingStatement: boolean execute(java.lang.String,int)> with actual argTypes: [java.lang.String, int] and taint: [true, true, true]",
            "<org.jooq.tools.JooqLogger: void debug(java.lang.Object,java.lang.Object)> with actual argTypes: [java.lang.String, java.lang.String] and taint: [false, true, true]",
            "<org.jooq.tools.JooqLogger: void decrementLimitAndDo(java.lang.Runnable)> with actual argTypes: [java.lang.Runnable] and taint: [false, true]",
            "<javax.swing.JFormattedTextField$FocusLostHandler: void run()> with actual argTypes: [] and taint: [true]",
            "<javax.swing.JFormattedTextField: void commitEdit()> with actual argTypes: [] and taint: [true]",
            "<javax.swing.text.DefaultFormatter: java.lang.Object stringToValue(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, true]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.AbstractQualifiedRecord: void readSQL(java.sql.SQLInput,java.lang.String)> with actual argTypes: [java.sql.SQLInput, java.lang.String] and taint: [true, true, true]",
            "<org.jooq.impl.DefaultBinding$InternalBinding: void get(org.jooq.BindingGetSQLInputContext)> with actual argTypes: [org.jooq.impl.DefaultBindingGetSQLInputContext] and taint: [true, false]",
            "<org.jooq.impl.DefaultBinding$DefaultEnumTypeBinding: java.lang.Object get0(org.jooq.BindingGetSQLInputContext)> with actual argTypes: [org.jooq.BindingGetSQLInputContext] and taint: [true, false]",
            "<org.jooq.impl.DefaultBinding$DefaultEnumTypeBinding: org.jooq.EnumType get0(org.jooq.BindingGetSQLInputContext)> with actual argTypes: [org.jooq.BindingGetSQLInputContext] and taint: [true, false]",
            "<org.jooq.impl.DefaultBinding$DefaultEnumTypeBinding: org.jooq.EnumType getEnumType(java.lang.Class,java.lang.String)> with actual argTypes: [java.lang.Class, java.lang.String] and taint: [false, true, false]",
            "<org.jooq.impl.Tools: org.jooq.EnumType[] enums(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [false, true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [true, true, false]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.jooq.impl.AbstractParam: boolean equals(java.lang.Object)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<org.jooq.impl.ConvertedVal: java.lang.Object getValue()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.RecordDataType: java.lang.Object convert(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.jooq.impl.RecordDataType: org.jooq.Record convert(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.jooq.impl.RecordDataType: org.jooq.Record lambda$convert$1(java.lang.Object,org.jooq.Record)> with actual argTypes: [java.lang.Object, org.jooq.Record] and taint: [false, false, false]",
            "<org.jooq.impl.AbstractRecord: void from(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [false, false]",
            "<org.jooq.impl.AbstractRecord: void from0(java.lang.Object,int[])> with actual argTypes: [java.lang.Object, null] and taint: [false, false, false]",
            "<org.jooq.impl.DefaultRecordUnmapper$PojoUnmapper: org.jooq.Record unmap(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [false, false]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [false, false, false]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.tools.jdbc.LoggingStatement: boolean execute(java.lang.String,int)> with actual argTypes: [java.lang.String, int] and taint: [true, true, true]",
            "<org.jooq.tools.JooqLogger: void debug(java.lang.Object,java.lang.Object)> with actual argTypes: [java.lang.String, java.lang.String] and taint: [false, true, true]",
            "<org.jooq.tools.JooqLogger: void decrementLimitAndDo(java.lang.Runnable)> with actual argTypes: [java.lang.Runnable] and taint: [false, true]",
            "<java.util.concurrent.ForkJoinTask$AdaptedRunnableAction: void run()> with actual argTypes: [] and taint: [true]",
            "<java.util.concurrent.ForkJoinTask: java.lang.Object invoke()> with actual argTypes: [] and taint: [true]",
            "<java.util.concurrent.ForkJoinTask: void reportException(int)> with actual argTypes: [int] and taint: [true, true]",
            "<java.util.concurrent.ForkJoinTask: java.lang.Throwable getThrowableException()> with actual argTypes: [] and taint: [true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, true]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.tools.jdbc.LoggingStatement: boolean execute(java.lang.String,int)> with actual argTypes: [java.lang.String, int] and taint: [true, true, true]",
            "<org.jooq.tools.JooqLogger: void debug(java.lang.Object,java.lang.Object)> with actual argTypes: [java.lang.String, java.lang.String] and taint: [false, true, true]",
            "<org.jooq.tools.JooqLogger: void decrementLimitAndDo(java.lang.Runnable)> with actual argTypes: [java.lang.Runnable] and taint: [false, true]",
            "<java.util.concurrent.ForkJoinTask$AdaptedRunnableAction: void run()> with actual argTypes: [] and taint: [true]",
            "<java.util.concurrent.ForkJoinTask: java.lang.Object invoke()> with actual argTypes: [] and taint: [true]",
            "<java.util.concurrent.ForkJoinTask: void reportException(int)> with actual argTypes: [int] and taint: [true, true]",
            "<java.util.concurrent.ForkJoinTask: java.lang.Throwable getThrowableException()> with actual argTypes: [] and taint: [true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, false]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.DiagnosticsDataSource: java.sql.Connection getConnection()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.DiagnosticsConnection: void <init>(org.jooq.Configuration)> with actual argTypes: [org.jooq.Configuration] and taint: [false, true]",
            "<org.jooq.impl.DefaultDSLContext: org.jooq.Parser parser()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.ParserImpl: void <init>(org.jooq.Configuration)> with actual argTypes: [org.jooq.Configuration] and taint: [false, true]",
            "<org.jooq.impl.DefaultDSLContext: org.jooq.Meta meta()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.InformationSchemaMetaProvider: org.jooq.Meta provide()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.util.jaxb.tools.MiniJAXB: java.lang.Object append(java.lang.Object,java.lang.Object)> with actual argTypes: [org.jooq.util.xml.jaxb.InformationSchema, org.jooq.util.xml.jaxb.InformationSchema] and taint: [false, false, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [false, false]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.DiagnosticsDataSource: java.sql.Connection getConnection()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.DiagnosticsConnection: void <init>(org.jooq.Configuration)> with actual argTypes: [org.jooq.Configuration] and taint: [false, true]",
            "<org.jooq.impl.DefaultDSLContext: org.jooq.Parser parser()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.ParserImpl: void <init>(org.jooq.Configuration)> with actual argTypes: [org.jooq.Configuration] and taint: [false, true]",
            "<org.jooq.impl.DefaultDSLContext: org.jooq.Meta meta()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.InformationSchemaMetaProvider: org.jooq.Meta provide()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.util.jaxb.tools.MiniJAXB: java.lang.Object append(java.lang.Object,java.lang.Object)> with actual argTypes: [org.jooq.util.xml.jaxb.InformationSchema, org.jooq.util.xml.jaxb.InformationSchema] and taint: [false, false, true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [false, false, false]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.DiagnosticsDataSource: java.sql.Connection getConnection()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.DiagnosticsConnection: void <init>(org.jooq.Configuration)> with actual argTypes: [org.jooq.Configuration] and taint: [false, true]",
            "<org.jooq.impl.DefaultDSLContext: org.jooq.Parser parser()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.ParserImpl: void <init>(org.jooq.Configuration)> with actual argTypes: [org.jooq.Configuration] and taint: [false, true]",
            "<org.jooq.impl.DefaultDSLContext: org.jooq.Meta meta()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.InformationSchemaMetaProvider: org.jooq.Meta provide()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.util.jaxb.tools.MiniJAXB: java.lang.Object append(java.lang.Object,java.lang.Object)> with actual argTypes: [org.jooq.util.xml.jaxb.InformationSchema, org.jooq.util.xml.jaxb.InformationSchema] and taint: [false, false, true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [false, true, false]"
        ],
        [
            "<java.util.concurrent.ConcurrentHashMap: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<ses.ginject.pattern.Caller: int hashCode()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.DiagnosticsDataSource: java.sql.Connection getConnection()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.DiagnosticsConnection: void <init>(org.jooq.Configuration)> with actual argTypes: [org.jooq.Configuration] and taint: [false, true]",
            "<org.jooq.impl.DefaultDSLContext: org.jooq.Parser parser()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.ParserImpl: void <init>(org.jooq.Configuration)> with actual argTypes: [org.jooq.Configuration] and taint: [false, true]",
            "<org.jooq.impl.DefaultDSLContext: org.jooq.Meta meta()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.InformationSchemaMetaProvider: org.jooq.Meta provide()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.util.jaxb.tools.MiniJAXB: java.lang.Object append(java.lang.Object,java.lang.Object)> with actual argTypes: [org.jooq.util.xml.jaxb.InformationSchema, org.jooq.util.xml.jaxb.InformationSchema] and taint: [false, false, true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [false, false, true]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.jooq.impl.AbstractParam: boolean equals(java.lang.Object)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<org.jooq.impl.ConvertedVal: java.lang.Object getValue()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.LegacyConvertedDataType: java.lang.Object convert(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.jooq.impl.Convert$ConvertAll: java.lang.Object from(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.jooq.impl.AbstractRecord: java.lang.Object into(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<org.jooq.impl.DefaultRecordMapper$ImmutablePOJOMapper: java.lang.Object map(org.jooq.Record)> with actual argTypes: [org.jooq.impl.AbstractRecord] and taint: [true, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, true]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.jooq.impl.AbstractParam: boolean equals(java.lang.Object)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<org.jooq.impl.ConvertedVal: java.lang.Object getValue()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.LegacyConvertedDataType: java.lang.Object convert(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.jooq.impl.Convert$ConvertAll: java.lang.Object from(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.jooq.impl.AbstractRecord: java.lang.Object into(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<org.jooq.impl.DefaultRecordMapper$MutablePOJOMapper: java.lang.Object map(org.jooq.Record)> with actual argTypes: [org.jooq.impl.AbstractRecord] and taint: [true, true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [true, true, true]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.jooq.impl.AbstractParam: boolean equals(java.lang.Object)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<org.jooq.impl.ConvertedVal: java.lang.Object getValue()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.LegacyConvertedDataType: java.lang.Object convert(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.jooq.impl.Convert$ConvertAll: java.lang.Object from(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.jooq.impl.AbstractRecord: java.lang.Object into(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<org.jooq.impl.DefaultRecordMapper$MutablePOJOMapper: java.lang.Object map(org.jooq.Record)> with actual argTypes: [org.jooq.impl.AbstractRecord] and taint: [true, true]",
            "<org.jooq.impl.DefaultRecordMapper$MutablePOJOMapper: org.jooq.impl.AbstractRecord lambda$map$3(java.util.Map$Entry,org.jooq.Record,org.jooq.RecordMapper,java.lang.String,java.lang.Object,org.jooq.impl.AbstractRecord)> with actual argTypes: [java.util.Map$Entry, org.jooq.Record, org.jooq.RecordMapper, java.lang.String, java.lang.Object, org.jooq.impl.AbstractRecord] and taint: [false, false, false, false, false, false, false]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [false, false, false]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.jooq.impl.AbstractParam: boolean equals(java.lang.Object)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<org.jooq.impl.ConvertedVal: java.lang.Object getValue()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.LegacyConvertedDataType: java.lang.Object convert(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.jooq.impl.Convert$ConvertAll: java.lang.Object from(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.jooq.impl.AbstractRecord: java.lang.Object into(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<org.jooq.impl.DefaultRecordMapper$ProxyMapper: java.lang.Object map(org.jooq.Record)> with actual argTypes: [org.jooq.impl.AbstractRecord] and taint: [true, true]",
            "<org.jooq.impl.DefaultRecordMapper$MutablePOJOMapper: java.lang.Object map(org.jooq.Record)> with actual argTypes: [org.jooq.Record] and taint: [true, true]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [true, true, true]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.jooq.impl.AbstractParam: boolean equals(java.lang.Object)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<org.jooq.impl.ConvertedVal: java.lang.Object getValue()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.LegacyConvertedDataType: java.lang.Object convert(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.jooq.impl.Convert$ConvertAll: java.lang.Object from(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.jooq.impl.DefaultDSLContext: org.jooq.Parser parser()> with actual argTypes: [] and taint: [false]",
            "<org.jooq.impl.ParserImpl: void <init>(org.jooq.Configuration)> with actual argTypes: [org.jooq.Configuration] and taint: [false, false]",
            "<org.jooq.impl.DefaultDSLContext: org.jooq.Meta meta()> with actual argTypes: [] and taint: [false]",
            "<org.jooq.impl.InformationSchemaMetaProvider: org.jooq.Meta provide()> with actual argTypes: [] and taint: [false]",
            "<org.jooq.util.jaxb.tools.MiniJAXB: java.lang.Object append(java.lang.Object,java.lang.Object)> with actual argTypes: [org.jooq.util.xml.jaxb.InformationSchema, org.jooq.util.xml.jaxb.InformationSchema] and taint: [false, false, false]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [false, false]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.jooq.impl.AbstractParam: boolean equals(java.lang.Object)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<org.jooq.impl.ConvertedVal: java.lang.Object getValue()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.LegacyConvertedDataType: java.lang.Object convert(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.jooq.impl.Convert$ConvertAll: java.lang.Object from(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.jooq.impl.DefaultDSLContext: org.jooq.Parser parser()> with actual argTypes: [] and taint: [false]",
            "<org.jooq.impl.ParserImpl: void <init>(org.jooq.Configuration)> with actual argTypes: [org.jooq.Configuration] and taint: [false, false]",
            "<org.jooq.impl.DefaultDSLContext: org.jooq.Meta meta()> with actual argTypes: [] and taint: [false]",
            "<org.jooq.impl.InformationSchemaMetaProvider: org.jooq.Meta provide()> with actual argTypes: [] and taint: [false]",
            "<org.jooq.util.jaxb.tools.MiniJAXB: java.lang.Object append(java.lang.Object,java.lang.Object)> with actual argTypes: [org.jooq.util.xml.jaxb.InformationSchema, org.jooq.util.xml.jaxb.InformationSchema] and taint: [false, false, false]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [false, false, false]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.jooq.impl.AbstractParam: boolean equals(java.lang.Object)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<org.jooq.impl.ConvertedVal: java.lang.Object getValue()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.LegacyConvertedDataType: java.lang.Object convert(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.jooq.impl.Convert$ConvertAll: java.lang.Object from(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.jooq.impl.AbstractRecord: java.lang.Object into(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<org.jooq.impl.FieldsImpl: org.jooq.RecordMapper mapper(org.jooq.Configuration,java.lang.Class)> with actual argTypes: [org.jooq.Configuration, java.lang.Class] and taint: [true, true, true]",
            "<org.jooq.impl.DefaultRecordMapperProvider: org.jooq.RecordMapper provide(org.jooq.RecordType,java.lang.Class)> with actual argTypes: [org.jooq.impl.FieldsImpl, java.lang.Class] and taint: [true, true, true]",
            "<org.jooq.impl.DefaultRecordMapper: void <init>(org.jooq.RecordType,java.lang.Class,org.jooq.Configuration)> with actual argTypes: [org.jooq.RecordType, java.lang.Class, org.jooq.Configuration] and taint: [false, true, true, true]",
            "<org.jooq.impl.DefaultRecordMapper: void <init>(org.jooq.RecordType,java.lang.Class,java.lang.Object,org.jooq.Configuration)> with actual argTypes: [org.jooq.RecordType, java.lang.Class, null, org.jooq.Configuration] and taint: [false, true, true, false, true]",
            "<org.jooq.impl.DefaultRecordMapper: void init(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, false]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [false, false, true]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.jooq.impl.AbstractMeta: boolean equals(java.lang.Object)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<org.jooq.impl.AbstractMeta: org.jooq.Queries ddl()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.AbstractMeta: org.jooq.Queries ddl(org.jooq.DDLExportConfiguration)> with actual argTypes: [org.jooq.DDLExportConfiguration] and taint: [true, false]",
            "<org.jooq.impl.DDL: org.jooq.Queries queries(org.jooq.Meta)> with actual argTypes: [org.jooq.impl.AbstractMeta] and taint: [false, true]",
            "<org.jooq.impl.Interpreter$MutableSchema$InterpretedSchema: java.util.List getTables()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.Tools: java.util.List map(java.lang.Iterable,org.jooq.impl.ThrowingFunction)> with actual argTypes: [java.util.List, org.jooq.impl.ThrowingFunction] and taint: [false, true, false]",
            "<org.jooq.impl.CursorImpl$CursorRecordInitialiser: java.lang.Object apply(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [false, true]",
            "<org.jooq.impl.CursorImpl$CursorRecordInitialiser: org.jooq.impl.AbstractRecord apply(org.jooq.impl.AbstractRecord)> with actual argTypes: [org.jooq.impl.AbstractRecord] and taint: [false, true]",
            "<org.jooq.impl.CursorImpl$CursorRecordInitialiser: void setValue(org.jooq.impl.AbstractRecord,org.jooq.Field,int)> with actual argTypes: [org.jooq.impl.AbstractRecord, org.jooq.Field, int] and taint: [false, true, false, false]",
            "<org.jooq.impl.Tools: org.jooq.Field[] embeddedFields(org.jooq.Field)> with actual argTypes: [org.jooq.Field] and taint: [false, false]",
            "<org.jooq.impl.Tools: org.jooq.EmbeddableRecord newInstance(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [false, false]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [false, false]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.jooq.impl.AbstractParam: boolean equals(java.lang.Object)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<org.jooq.impl.ConvertedVal: java.lang.Object getValue()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.LegacyConvertedDataType: java.lang.Object convert(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.jooq.impl.Convert$ConvertAll: java.lang.Object from(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.jooq.impl.DefaultDSLContext: org.jooq.Parser parser()> with actual argTypes: [] and taint: [false]",
            "<org.jooq.impl.ParserImpl: void <init>(org.jooq.Configuration)> with actual argTypes: [org.jooq.Configuration] and taint: [false, false]",
            "<org.jooq.impl.DefaultDSLContext: org.jooq.Meta meta()> with actual argTypes: [] and taint: [false]",
            "<org.jooq.impl.InformationSchemaMetaProvider: org.jooq.Meta provide()> with actual argTypes: [] and taint: [false]",
            "<org.jooq.util.jaxb.tools.MiniJAXB: org.jooq.util.jaxb.tools.XMLAppendable unmarshal(java.io.Reader,java.lang.Class)> with actual argTypes: [java.io.Reader, java.lang.Class] and taint: [false, false, false]",
            "<org.jooq.util.jaxb.tools.MiniJAXB: org.jooq.util.jaxb.tools.XMLAppendable unmarshal0(org.xml.sax.InputSource,java.lang.Class)> with actual argTypes: [org.xml.sax.InputSource, java.lang.Class] and taint: [false, false, false]",
            "<org.jooq.util.jaxb.tools.MiniJAXB: void unmarshal0(java.lang.Object,org.w3c.dom.Element,java.util.Map)> with actual argTypes: [org.jooq.util.jaxb.tools.XMLAppendable, org.w3c.dom.Element, java.util.IdentityHashMap] and taint: [false, false, false, false]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [false, false]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.jooq.impl.AbstractParam: boolean equals(java.lang.Object)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<org.jooq.impl.LazyVal: java.lang.Object getValue()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.LazyVal: void init()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.DSL: org.jooq.Param val(java.lang.Object,org.jooq.Field)> with actual argTypes: [null, org.jooq.Field] and taint: [false, false, true]",
            "<org.jooq.impl.DSL: org.jooq.Param val(java.lang.Object,org.jooq.DataType)> with actual argTypes: [java.lang.Object, org.jooq.DataType] and taint: [false, false, true]",
            "<org.jooq.impl.DSL: org.jooq.Param val0(java.lang.Object,org.jooq.DataType,boolean)> with actual argTypes: [java.lang.Object, org.jooq.DataType, int] and taint: [false, false, true, false]",
            "<org.jooq.impl.Val: org.jooq.Param convertTo(org.jooq.DataType)> with actual argTypes: [org.jooq.DataType] and taint: [false, true]",
            "<org.jooq.tools.JooqLogger: void warn(java.lang.Object,java.lang.Object,java.lang.Throwable)> with actual argTypes: [java.lang.String, java.lang.String, java.sql.SQLWarning] and taint: [false, false, false, false]",
            "<org.jooq.tools.JooqLogger: void decrementLimitAndDo(java.lang.Runnable)> with actual argTypes: [java.lang.Runnable] and taint: [false, false]",
            "<javax.swing.JFormattedTextField$FocusLostHandler: void run()> with actual argTypes: [] and taint: [false]",
            "<javax.swing.JFormattedTextField: void commitEdit()> with actual argTypes: [] and taint: [false]",
            "<javax.swing.text.DefaultFormatter: java.lang.Object stringToValue(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [false, false]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [false, false]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.jooq.impl.AbstractParam: boolean equals(java.lang.Object)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<org.jooq.impl.LazyVal: java.lang.Object getValue()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.LazyVal: void init()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.DSL: org.jooq.Param val(java.lang.Object,org.jooq.Field)> with actual argTypes: [null, org.jooq.Field] and taint: [false, false, true]",
            "<org.jooq.impl.DSL: org.jooq.Param val(java.lang.Object,org.jooq.DataType)> with actual argTypes: [java.lang.Object, org.jooq.DataType] and taint: [false, false, true]",
            "<org.jooq.impl.DSL: org.jooq.Param val0(java.lang.Object,org.jooq.DataType,boolean)> with actual argTypes: [java.lang.Object, org.jooq.DataType, int] and taint: [false, false, true, false]",
            "<org.jooq.impl.Val: org.jooq.Param convertTo(org.jooq.DataType)> with actual argTypes: [org.jooq.DataType] and taint: [false, true]",
            "<org.jooq.tools.JooqLogger: void warn(java.lang.Object,java.lang.Object,java.lang.Throwable)> with actual argTypes: [java.lang.String, java.lang.String, java.sql.SQLWarning] and taint: [false, false, false, false]",
            "<org.jooq.tools.JooqLogger: void decrementLimitAndDo(java.lang.Runnable)> with actual argTypes: [java.lang.Runnable] and taint: [false, false]",
            "<java.util.concurrent.ForkJoinTask$AdaptedRunnableAction: void run()> with actual argTypes: [] and taint: [false]",
            "<java.util.concurrent.ForkJoinTask: java.lang.Object invoke()> with actual argTypes: [] and taint: [false]",
            "<java.util.concurrent.ForkJoinTask: void reportException(int)> with actual argTypes: [int] and taint: [false, false]",
            "<java.util.concurrent.ForkJoinTask: java.lang.Throwable getThrowableException()> with actual argTypes: [] and taint: [false]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [false, false]"
        ],
        [
            "<java.security.Permissions: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<org.jooq.impl.AbstractParam: boolean equals(java.lang.Object)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<org.jooq.impl.ConvertedVal: java.lang.Object getValue()> with actual argTypes: [] and taint: [true]",
            "<org.jooq.impl.LegacyConvertedDataType: java.lang.Object convert(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.jooq.impl.Convert$ConvertAll: java.lang.Object from(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [true, true]",
            "<org.jooq.impl.DefaultDSLContext: org.jooq.Parser parser()> with actual argTypes: [] and taint: [false]",
            "<org.jooq.impl.ParserImpl: void <init>(org.jooq.Configuration)> with actual argTypes: [org.jooq.Configuration] and taint: [false, false]",
            "<org.jooq.impl.DefaultDSLContext: org.jooq.Meta meta()> with actual argTypes: [] and taint: [false]",
            "<org.jooq.impl.InformationSchemaMetaProvider: org.jooq.Meta provide()> with actual argTypes: [] and taint: [false]",
            "<org.jooq.util.jaxb.tools.MiniJAXB: org.jooq.util.jaxb.tools.XMLAppendable unmarshal(java.io.Reader,java.lang.Class)> with actual argTypes: [java.io.Reader, java.lang.Class] and taint: [false, false, false]",
            "<org.jooq.util.jaxb.tools.MiniJAXB: org.jooq.util.jaxb.tools.XMLAppendable unmarshal0(org.xml.sax.InputSource,java.lang.Class)> with actual argTypes: [org.xml.sax.InputSource, java.lang.Class] and taint: [false, false, false]",
            "<org.jooq.util.jaxb.tools.MiniJAXB: javax.xml.parsers.DocumentBuilder builder(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [false, false]",
            "<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()> with actual argTypes: [] and taint: [false]",
            "<javax.xml.parsers.FactoryFinder: java.lang.Object find(java.lang.Class,java.lang.String)> with actual argTypes: [java.lang.Class, java.lang.String] and taint: [false, false, false]",
            "<javax.xml.parsers.FactoryFinder: java.lang.Object newInstance(java.lang.Class,java.lang.String,java.lang.ClassLoader,boolean)> with actual argTypes: [java.lang.Class, java.lang.String, null, int] and taint: [false, false, false, false, false]",
            "<javax.xml.parsers.FactoryFinder: java.lang.Object newInstance(java.lang.Class,java.lang.String,java.lang.ClassLoader,boolean,boolean)> with actual argTypes: [java.lang.Class, java.lang.String, java.lang.ClassLoader, boolean, int] and taint: [false, false, false, false, false, false]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [false, false]"
        ]
    ]
}