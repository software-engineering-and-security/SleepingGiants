{
    "tabby": [
        [
            "org.infinispan.marshall.core.BytesObjectInput#readObject",
            "-[CALL]-> org.infinispan.marshall.core.GlobalMarshaller#readNullableObject",
            "-[CALL]-> org.infinispan.marshall.core.GlobalMarshaller#readNonNullableObject",
            "-[CALL]-> org.infinispan.marshall.core.LambdaMarshaller#read",
            "-[CALL]-> org.infinispan.marshall.core.SecurityActions#getMethodAndSetAccessible",
            "-[CALL]-> org.infinispan.marshall.core.SecurityActions#doPrivileged",
            "-[CALL]-> java.security.PrivilegedAction#run -[ALIAS]-> org.infinispan.persistence.file.SecurityActions$delete__992#run",
            "-[CALL]-> java.io.File#delete"
        ]
    ],
    "androChain": [
        [
            "<java.security.Provider: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<java.security.Provider: void implClear()> with actual argTypes: [] and taint: [true]",
            "<org.infinispan.cache.impl.SimpleCacheImpl$EntrySetBase: void clear()> with actual argTypes: [] and taint: [true]",
            "<org.infinispan.cache.impl.SimpleCacheImpl: void clear()> with actual argTypes: [] and taint: [true]",
            "<org.infinispan.notifications.cachelistener.CacheNotifierImpl: java.util.concurrent.CompletionStage notifyCacheEntryRemoved(java.lang.Object,java.lang.Object,org.infinispan.metadata.Metadata,boolean,org.infinispan.context.InvocationContext,org.infinispan.commands.FlagAffectedCommand)> with actual argTypes: [java.lang.Object, java.lang.Object, org.infinispan.metadata.Metadata, int, org.infinispan.context.impl.ImmutableContext, null] and taint: [true, false, false, false, false, false, false]",
            "<org.infinispan.notifications.cachelistener.CacheNotifierImpl: java.util.concurrent.CompletionStage doNotifyRemoved(java.lang.Object,java.lang.Object,org.infinispan.metadata.Metadata,boolean,org.infinispan.context.InvocationContext,org.infinispan.commands.FlagAffectedCommand)> with actual argTypes: [java.lang.Object, java.lang.Object, org.infinispan.metadata.Metadata, boolean, org.infinispan.context.InvocationContext, org.infinispan.commands.FlagAffectedCommand] and taint: [true, false, false, false, false, false, false]",
            "<org.infinispan.notifications.cachelistener.CacheNotifierImpl$BaseCacheEntryListenerInvocation: java.util.concurrent.CompletionStage invoke(org.infinispan.notifications.cachelistener.EventWrapper,boolean)> with actual argTypes: [org.infinispan.notifications.cachelistener.EventWrapper, boolean] and taint: [true, false, true]",
            "<org.infinispan.notifications.cachelistener.CacheNotifierImpl$BaseCacheEntryListenerInvocation: java.util.concurrent.CompletionStage invokeNoChecks(org.infinispan.notifications.cachelistener.EventWrapper,boolean,boolean,boolean)> with actual argTypes: [org.infinispan.notifications.cachelistener.EventWrapper, int, boolean, int] and taint: [true, false, false, true, false]",
            "<org.infinispan.notifications.impl.AbstractListenerImpl$ListenerInvocationImpl: java.util.concurrent.CompletionStage invoke(java.lang.Object)> with actual argTypes: [org.infinispan.notifications.cachelistener.event.Event] and taint: [true, false]",
            "<org.infinispan.notifications.impl.AbstractListenerImpl$ListenerInvocationImpl: java.lang.Object lambda$invoke$0(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [false, false]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [false, false, false]"
        ],
        [
            "<java.security.Provider: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<java.security.Provider: void implClear()> with actual argTypes: [] and taint: [true]",
            "<org.infinispan.cache.impl.SimpleCacheImpl$EntrySetBase: void clear()> with actual argTypes: [] and taint: [true]",
            "<org.infinispan.cache.impl.SimpleCacheImpl: void clear()> with actual argTypes: [] and taint: [true]",
            "<org.infinispan.notifications.cachelistener.CacheNotifierImpl: java.util.concurrent.CompletionStage notifyCacheEntryRemoved(java.lang.Object,java.lang.Object,org.infinispan.metadata.Metadata,boolean,org.infinispan.context.InvocationContext,org.infinispan.commands.FlagAffectedCommand)> with actual argTypes: [java.lang.Object, java.lang.Object, org.infinispan.metadata.Metadata, int, org.infinispan.context.impl.ImmutableContext, null] and taint: [true, false, false, false, false, false, false]",
            "<org.infinispan.notifications.cachelistener.CacheNotifierImpl: java.util.concurrent.CompletionStage doNotifyRemoved(java.lang.Object,java.lang.Object,org.infinispan.metadata.Metadata,boolean,org.infinispan.context.InvocationContext,org.infinispan.commands.FlagAffectedCommand)> with actual argTypes: [java.lang.Object, java.lang.Object, org.infinispan.metadata.Metadata, boolean, org.infinispan.context.InvocationContext, org.infinispan.commands.FlagAffectedCommand] and taint: [true, false, false, false, false, false, false]",
            "<org.infinispan.notifications.cachelistener.CacheNotifierImpl$BaseCacheEntryListenerInvocation: java.util.concurrent.CompletionStage invoke(org.infinispan.notifications.cachelistener.EventWrapper,boolean)> with actual argTypes: [org.infinispan.notifications.cachelistener.EventWrapper, boolean] and taint: [true, false, true]",
            "<org.infinispan.notifications.cachelistener.CacheNotifierImpl$BaseCacheEntryListenerInvocation: java.util.concurrent.CompletionStage invokeNoChecks(org.infinispan.notifications.cachelistener.EventWrapper,boolean,boolean,boolean)> with actual argTypes: [org.infinispan.notifications.cachelistener.EventWrapper, int, boolean, int] and taint: [true, false, false, true, false]",
            "<org.infinispan.notifications.impl.AbstractListenerImpl$ListenerInvocationImpl: java.util.concurrent.CompletionStage invoke(java.lang.Object)> with actual argTypes: [org.infinispan.notifications.cachelistener.event.Event] and taint: [true, false]",
            "<org.infinispan.notifications.impl.AbstractListenerImpl$ListenerInvocationImpl: java.lang.Object lambda$invoke$1(java.lang.Object)> with actual argTypes: [java.lang.Object] and taint: [false, false]",
            "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])> with actual argTypes: [java.lang.Object, java.lang.Object[]] and taint: [false, false, false]"
        ],
        [
            "<java.text.CompactNumberFormat: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<java.text.CompactNumberFormat: void processCompactPatterns()> with actual argTypes: [] and taint: [true]",
            "<org.infinispan.stream.impl.local.LocalCacheStream: void forEach(java.util.function.Consumer)> with actual argTypes: [java.util.function.Consumer] and taint: [true, true]",
            "<org.infinispan.stream.impl.local.AbstractLocalCacheStream: java.util.stream.BaseStream createStream()> with actual argTypes: [] and taint: [true]",
            "<org.infinispan.stream.impl.intops.object.PeekOperation: void handleInjection(org.infinispan.factories.ComponentRegistry)> with actual argTypes: [org.infinispan.factories.ComponentRegistry] and taint: [true, true]",
            "<org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper: java.lang.Object running()> with actual argTypes: [] and taint: [true]",
            "<org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper: void wire()> with actual argTypes: [] and taint: [true]",
            "<org.infinispan.factories.impl.BasicComponentRegistryImpl: void instantiateWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper,org.infinispan.factories.ComponentFactory)> with actual argTypes: [org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper, org.infinispan.factories.ComponentFactory] and taint: [true, true, true]",
            "<org.infinispan.factories.impl.BasicComponentRegistryImpl: void doInstantiateWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper,org.infinispan.factories.ComponentFactory,java.lang.String)> with actual argTypes: [org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper, org.infinispan.factories.ComponentFactory, java.lang.String] and taint: [true, true, true, true]",
            "<org.infinispan.factories.RecoveryManagerFactory: java.lang.Object construct(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<org.infinispan.registry.impl.InternalCacheRegistryImpl: void registerInternalCache(java.lang.String,org.infinispan.configuration.cache.Configuration)> with actual argTypes: [java.lang.String, org.infinispan.configuration.cache.Configuration] and taint: [true, true, true]",
            "<org.infinispan.registry.impl.InternalCacheRegistryImpl: void registerInternalCache(java.lang.String,org.infinispan.configuration.cache.Configuration,java.util.EnumSet)> with actual argTypes: [java.lang.String, org.infinispan.configuration.cache.Configuration, java.util.EnumSet] and taint: [true, true, true, false]",
            "<org.infinispan.configuration.cache.ConfigurationBuilder: org.infinispan.configuration.cache.ConfigurationBuilder read(org.infinispan.configuration.cache.Configuration,org.infinispan.commons.configuration.Combine)> with actual argTypes: [org.infinispan.configuration.cache.Configuration, org.infinispan.commons.configuration.Combine] and taint: [false, true, false]",
            "<org.infinispan.configuration.cache.ConfigurationBuilder: org.infinispan.commons.configuration.Builder addModule(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [true, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, true]"
        ],
        [
            "<java.text.CompactNumberFormat: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<java.text.CompactNumberFormat: void processCompactPatterns()> with actual argTypes: [] and taint: [true]",
            "<org.infinispan.stream.impl.local.LocalCacheStream: void forEach(java.util.function.Consumer)> with actual argTypes: [java.util.function.Consumer] and taint: [true, true]",
            "<org.infinispan.stream.impl.local.AbstractLocalCacheStream: java.util.stream.BaseStream createStream()> with actual argTypes: [] and taint: [true]",
            "<org.infinispan.stream.impl.intops.object.PeekOperation: void handleInjection(org.infinispan.factories.ComponentRegistry)> with actual argTypes: [org.infinispan.factories.ComponentRegistry] and taint: [true, true]",
            "<org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper: java.lang.Object running()> with actual argTypes: [] and taint: [true]",
            "<org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper: void wire()> with actual argTypes: [] and taint: [true]",
            "<org.infinispan.factories.impl.BasicComponentRegistryImpl: void instantiateWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper,org.infinispan.factories.ComponentFactory)> with actual argTypes: [org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper, org.infinispan.factories.ComponentFactory] and taint: [true, true, true]",
            "<org.infinispan.factories.impl.BasicComponentRegistryImpl: void doInstantiateWrapper(org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper,org.infinispan.factories.ComponentFactory,java.lang.String)> with actual argTypes: [org.infinispan.factories.impl.BasicComponentRegistryImpl$ComponentWrapper, org.infinispan.factories.ComponentFactory, java.lang.String] and taint: [true, true, true, true]",
            "<org.infinispan.factories.RecoveryManagerFactory: java.lang.Object construct(java.lang.String)> with actual argTypes: [java.lang.String] and taint: [true, true]",
            "<org.infinispan.registry.impl.InternalCacheRegistryImpl: void registerInternalCache(java.lang.String,org.infinispan.configuration.cache.Configuration)> with actual argTypes: [java.lang.String, org.infinispan.configuration.cache.Configuration] and taint: [true, true, true]",
            "<org.infinispan.registry.impl.InternalCacheRegistryImpl: void registerInternalCache(java.lang.String,org.infinispan.configuration.cache.Configuration,java.util.EnumSet)> with actual argTypes: [java.lang.String, org.infinispan.configuration.cache.Configuration, java.util.EnumSet] and taint: [true, true, true, false]",
            "<org.infinispan.configuration.cache.ConfigurationBuilder: org.infinispan.configuration.cache.ConfigurationBuilder read(org.infinispan.configuration.cache.Configuration,org.infinispan.commons.configuration.Combine)> with actual argTypes: [org.infinispan.configuration.cache.Configuration, org.infinispan.commons.configuration.Combine] and taint: [false, true, false]",
            "<org.infinispan.configuration.cache.PersistenceConfigurationBuilder: org.infinispan.configuration.cache.PersistenceConfigurationBuilder read(org.infinispan.configuration.cache.PersistenceConfiguration,org.infinispan.commons.configuration.Combine)> with actual argTypes: [org.infinispan.configuration.cache.PersistenceConfiguration, org.infinispan.commons.configuration.Combine] and taint: [false, true, false]",
            "<org.infinispan.configuration.cache.PersistenceConfigurationBuilder: org.infinispan.configuration.cache.StoreConfigurationBuilder getBuilderFromClass(java.lang.Class)> with actual argTypes: [java.lang.Class] and taint: [false, true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, false]"
        ],
        [
            "<java.security.Provider: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<java.security.Provider: void implClear()> with actual argTypes: [] and taint: [true]",
            "<org.infinispan.cache.impl.SimpleCacheImpl$EntrySetBase: void clear()> with actual argTypes: [] and taint: [true]",
            "<org.infinispan.cache.impl.SimpleCacheImpl: void clear()> with actual argTypes: [] and taint: [true]",
            "<org.infinispan.notifications.cachelistener.CacheNotifierImpl: java.util.concurrent.CompletionStage notifyCacheEntryRemoved(java.lang.Object,java.lang.Object,org.infinispan.metadata.Metadata,boolean,org.infinispan.context.InvocationContext,org.infinispan.commands.FlagAffectedCommand)> with actual argTypes: [java.lang.Object, java.lang.Object, org.infinispan.metadata.Metadata, int, org.infinispan.context.impl.ImmutableContext, null] and taint: [true, false, false, false, false, false, false]",
            "<org.infinispan.notifications.cachelistener.CacheNotifierImpl: java.util.concurrent.CompletionStage doNotifyRemoved(java.lang.Object,java.lang.Object,org.infinispan.metadata.Metadata,boolean,org.infinispan.context.InvocationContext,org.infinispan.commands.FlagAffectedCommand)> with actual argTypes: [java.lang.Object, java.lang.Object, org.infinispan.metadata.Metadata, boolean, org.infinispan.context.InvocationContext, org.infinispan.commands.FlagAffectedCommand] and taint: [true, false, false, false, false, false, false]",
            "<org.infinispan.notifications.cachelistener.CacheNotifierImpl$BaseCacheEntryListenerInvocation: java.util.concurrent.CompletionStage invoke(org.infinispan.notifications.cachelistener.EventWrapper,boolean)> with actual argTypes: [org.infinispan.notifications.cachelistener.EventWrapper, boolean] and taint: [true, false, true]",
            "<org.infinispan.notifications.cachelistener.CacheNotifierImpl$BaseCacheEntryListenerInvocation: java.util.concurrent.CompletionStage invokeNoChecks(org.infinispan.notifications.cachelistener.EventWrapper,boolean,boolean,boolean)> with actual argTypes: [org.infinispan.notifications.cachelistener.EventWrapper, int, boolean, int] and taint: [true, false, false, true, false]",
            "<org.infinispan.notifications.impl.AbstractListenerImpl$ListenerInvocationImpl: java.util.concurrent.CompletionStage invoke(java.lang.Object)> with actual argTypes: [org.infinispan.notifications.cachelistener.event.Event] and taint: [true, false]",
            "<org.infinispan.manager.impl.LocalClusterExecutor: void execute(java.lang.Runnable)> with actual argTypes: [java.lang.Runnable] and taint: [true, true]",
            "<org.infinispan.util.concurrent.BlockingManagerImpl: java.util.concurrent.CompletionStage runBlocking(java.lang.Runnable,java.lang.Object)> with actual argTypes: [java.lang.Runnable, java.lang.String] and taint: [true, true, true]",
            "<org.infinispan.util.concurrent.BlockingManagerImpl: java.util.concurrent.CompletionStage runBlockingOperation(java.lang.Runnable,java.lang.Object,java.util.concurrent.Executor)> with actual argTypes: [java.lang.Runnable, java.lang.Object, java.util.concurrent.Executor] and taint: [true, true, true, true]",
            "<org.infinispan.util.concurrent.BlockingManagerImpl: java.util.concurrent.CompletionStage runBlockingOperation(java.lang.Runnable,java.lang.Object,java.util.concurrent.Executor,boolean)> with actual argTypes: [java.lang.Runnable, java.lang.Object, java.util.concurrent.Executor, int] and taint: [true, true, true, true, false]",
            "<java.util.concurrent.ForkJoinTask$AdaptedRunnableAction: void run()> with actual argTypes: [] and taint: [true]",
            "<java.util.concurrent.ForkJoinTask: java.lang.Object invoke()> with actual argTypes: [] and taint: [true]",
            "<java.util.concurrent.ForkJoinTask: void reportException(int)> with actual argTypes: [int] and taint: [true, true]",
            "<java.util.concurrent.ForkJoinTask: java.lang.Throwable getThrowableException()> with actual argTypes: [] and taint: [true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, true]"
        ],
        [
            "<java.security.Provider: void readObject(java.io.ObjectInputStream)> with actual argTypes: [java.io.ObjectInputStream] and taint: [true, true]",
            "<java.security.Provider: void implClear()> with actual argTypes: [] and taint: [true]",
            "<org.infinispan.cache.impl.SimpleCacheImpl$EntrySetBase: void clear()> with actual argTypes: [] and taint: [true]",
            "<org.infinispan.cache.impl.SimpleCacheImpl: void clear()> with actual argTypes: [] and taint: [true]",
            "<org.infinispan.notifications.cachelistener.CacheNotifierImpl: java.util.concurrent.CompletionStage notifyCacheEntryRemoved(java.lang.Object,java.lang.Object,org.infinispan.metadata.Metadata,boolean,org.infinispan.context.InvocationContext,org.infinispan.commands.FlagAffectedCommand)> with actual argTypes: [java.lang.Object, java.lang.Object, org.infinispan.metadata.Metadata, int, org.infinispan.context.impl.ImmutableContext, null] and taint: [true, false, false, false, false, false, false]",
            "<org.infinispan.notifications.cachelistener.CacheNotifierImpl: java.util.concurrent.CompletionStage doNotifyRemoved(java.lang.Object,java.lang.Object,org.infinispan.metadata.Metadata,boolean,org.infinispan.context.InvocationContext,org.infinispan.commands.FlagAffectedCommand)> with actual argTypes: [java.lang.Object, java.lang.Object, org.infinispan.metadata.Metadata, boolean, org.infinispan.context.InvocationContext, org.infinispan.commands.FlagAffectedCommand] and taint: [true, false, false, false, false, false, false]",
            "<org.infinispan.notifications.cachelistener.CacheNotifierImpl$BaseCacheEntryListenerInvocation: java.util.concurrent.CompletionStage invoke(org.infinispan.notifications.cachelistener.EventWrapper,boolean)> with actual argTypes: [org.infinispan.notifications.cachelistener.EventWrapper, boolean] and taint: [true, false, true]",
            "<org.infinispan.notifications.cachelistener.CacheNotifierImpl$BaseCacheEntryListenerInvocation: java.util.concurrent.CompletionStage invokeNoChecks(org.infinispan.notifications.cachelistener.EventWrapper,boolean,boolean,boolean)> with actual argTypes: [org.infinispan.notifications.cachelistener.EventWrapper, int, boolean, int] and taint: [true, false, false, true, false]",
            "<org.infinispan.notifications.impl.AbstractListenerImpl$ListenerInvocationImpl: java.util.concurrent.CompletionStage invoke(java.lang.Object)> with actual argTypes: [org.infinispan.notifications.cachelistener.event.Event] and taint: [true, false]",
            "<org.infinispan.manager.impl.LocalClusterExecutor: void execute(java.lang.Runnable)> with actual argTypes: [java.lang.Runnable] and taint: [true, true]",
            "<org.infinispan.util.concurrent.BlockingManagerImpl: java.util.concurrent.CompletionStage runBlocking(java.lang.Runnable,java.lang.Object)> with actual argTypes: [java.lang.Runnable, java.lang.String] and taint: [true, true, true]",
            "<org.infinispan.util.concurrent.BlockingManagerImpl: java.util.concurrent.CompletionStage runBlockingOperation(java.lang.Runnable,java.lang.Object,java.util.concurrent.Executor)> with actual argTypes: [java.lang.Runnable, java.lang.Object, java.util.concurrent.Executor] and taint: [true, true, true, true]",
            "<org.infinispan.util.concurrent.BlockingManagerImpl: java.util.concurrent.CompletionStage runBlockingOperation(java.lang.Runnable,java.lang.Object,java.util.concurrent.Executor,boolean)> with actual argTypes: [java.lang.Runnable, java.lang.Object, java.util.concurrent.Executor, int] and taint: [true, true, true, true, false]",
            "<java.util.concurrent.ForkJoinTask$AdaptedRunnableAction: void run()> with actual argTypes: [] and taint: [true]",
            "<java.util.concurrent.ForkJoinTask: java.lang.Object invoke()> with actual argTypes: [] and taint: [true]",
            "<java.util.concurrent.ForkJoinTask: void reportException(int)> with actual argTypes: [int] and taint: [true, true]",
            "<java.util.concurrent.ForkJoinTask: java.lang.Throwable getThrowableException()> with actual argTypes: [] and taint: [true]",
            "<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])> with actual argTypes: [java.lang.Object[]] and taint: [true, false]"
        ]
    ]
}